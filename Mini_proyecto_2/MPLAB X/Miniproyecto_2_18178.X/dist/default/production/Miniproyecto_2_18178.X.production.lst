

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 20 12:48:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	nvBANK0
   378  0038                     __pnvBANK0:
   379  0038                     _year:
   380  0038                     	ds	1
   381  0039                     _month:
   382  0039                     	ds	1
   383  003A                     _m_day:
   384  003A                     	ds	1
   385  003B                     _hour:
   386  003B                     	ds	1
   387  003C                     _minute:
   388  003C                     	ds	1
   389  003D                     _second:
   390  003D                     	ds	1
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCON	set	20
   393  001A                     _RCREG	set	26
   394  0018                     _RCSTA	set	24
   395  000C                     _PIR1bits	set	12
   396  000B                     _INTCONbits	set	11
   397  0009                     _PORTE	set	9
   398  0007                     _PORTC	set	7
   399  0006                     _PORTB	set	6
   400  0005                     _PORTA	set	5
   401  0008                     _PORTD	set	8
   402  0019                     _TXREG	set	25
   403  0063                     _SSPIF	set	99
   404  005E                     _PEIE	set	94
   405  005F                     _GIE	set	95
   406  0091                     _SSPCON2bits	set	145
   407  0087                     _TRISCbits	set	135
   408  0094                     _SSPSTAT	set	148
   409  0093                     _SSPADD	set	147
   410  0091                     _SSPCON2	set	145
   411  0098                     _TXSTA	set	152
   412  0099                     _SPBRG	set	153
   413  009A                     _SPBRGH	set	154
   414  008C                     _PIE1bits	set	140
   415  008F                     _OSCCONbits	set	143
   416  0089                     _TRISE	set	137
   417  0087                     _TRISC	set	135
   418  0088                     _TRISD	set	136
   419  0463                     _SSPIE	set	1123
   420  043C                     _TRISC4	set	1084
   421  043B                     _TRISC3	set	1083
   422  0187                     _BAUDCTLbits	set	391
   423                           
   424                           	psect	cinit
   425  000F                     start_initialization:	
   426                           ; #config settings
   427                           
   428  000F                     __initialization:
   429                           
   430                           ; Clear objects allocated to COMMON
   431  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   432                           
   433                           ; Clear objects allocated to BANK0
   434  0010  1283               	bcf	3,5	;RP0=0, select bank0
   435  0011  1303               	bcf	3,6	;RP1=0, select bank0
   436  0012  01BE               	clrf	__pbssBANK0& (0+127)
   437  0013                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  0013                     __end_of__initialization:
   441  0013  0183               	clrf	3
   442  0014  120A  118A  2AF1   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  007A                     __pbssCOMMON:
   446  007A                     _i:
   447  007A                     	ds	1
   448                           
   449                           	psect	bssBANK0
   450  003E                     __pbssBANK0:
   451  003E                     _lr:
   452  003E                     	ds	1
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:
   456  0070                     ?_setup:
   457  0070                     ?_R_RTC:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_ISR:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_ISR:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_I2C_Master_Wait:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_I2C_Master_Start:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_I2C_Master_RepeatedStart:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Master_Stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_decimal_to_bcd:	
   482                           ; 1 bytes @ 0x0
   483                           
   484                           
   485                           ; 1 bytes @ 0x0
   486  0070                     	ds	3
   487  0073                     ??_I2C_Master_Wait:
   488  0073                     ??_I2C_Master_Start:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     ??_I2C_Master_RepeatedStart:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     ??_I2C_Master_Stop:	
   495                           ; 1 bytes @ 0x3
   496                           
   497  0073                     ?_I2C_Master_Write:	
   498                           ; 1 bytes @ 0x3
   499                           
   500  0073                     ??___lldiv:	
   501                           ; 1 bytes @ 0x3
   502                           
   503  0073                     ?_I2C_Master_Read:	
   504                           ; 1 bytes @ 0x3
   505                           
   506  0073                     ?___awdiv:	
   507                           ; 2 bytes @ 0x3
   508                           
   509  0073                     ?___awmod:	
   510                           ; 2 bytes @ 0x3
   511                           
   512  0073                     I2C_Master_Write@d:	
   513                           ; 2 bytes @ 0x3
   514                           
   515  0073                     I2C_Master_Read@a:	
   516                           ; 2 bytes @ 0x3
   517                           
   518  0073                     ___awdiv@divisor:	
   519                           ; 2 bytes @ 0x3
   520                           
   521  0073                     ___awmod@divisor:	
   522                           ; 2 bytes @ 0x3
   523                           
   524                           
   525                           ; 2 bytes @ 0x3
   526  0073                     	ds	1
   527  0074                     ___lldiv@quotient:
   528                           
   529                           ; 4 bytes @ 0x4
   530  0074                     	ds	1
   531  0075                     ??_I2C_Master_Write:
   532  0075                     ??_I2C_Master_Read:	
   533                           ; 1 bytes @ 0x5
   534                           
   535  0075                     ___awdiv@dividend:	
   536                           ; 1 bytes @ 0x5
   537                           
   538  0075                     ___awmod@dividend:	
   539                           ; 2 bytes @ 0x5
   540                           
   541                           
   542                           ; 2 bytes @ 0x5
   543  0075                     	ds	2
   544  0077                     ??___awdiv:
   545  0077                     ??___awmod:	
   546                           ; 1 bytes @ 0x7
   547                           
   548  0077                     I2C_Master_Read@temp:	
   549                           ; 1 bytes @ 0x7
   550                           
   551                           
   552                           ; 2 bytes @ 0x7
   553  0077                     	ds	1
   554  0078                     ___lldiv@counter:
   555  0078                     ___awmod@counter:	
   556                           ; 1 bytes @ 0x8
   557                           
   558                           
   559                           ; 1 bytes @ 0x8
   560  0078                     	ds	1
   561  0079                     ??_setup:
   562  0079                     ___awmod@sign:	
   563                           ; 1 bytes @ 0x9
   564                           
   565                           
   566                           ; 1 bytes @ 0x9
   567  0079                     	ds	1
   568                           
   569                           	psect	cstackBANK0
   570  0020                     __pcstackBANK0:
   571  0020                     ??_R_RTC:
   572  0020                     ?___lldiv:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0020                     ___awdiv@counter:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0020                     ___lldiv@divisor:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583  0020                     	ds	1
   584  0021                     ___awdiv@sign:
   585                           
   586                           ; 1 bytes @ 0x1
   587  0021                     	ds	1
   588  0022                     ___awdiv@quotient:
   589                           
   590                           ; 2 bytes @ 0x2
   591  0022                     	ds	2
   592  0024                     ??_decimal_to_bcd:
   593  0024                     ___lldiv@dividend:	
   594                           ; 1 bytes @ 0x4
   595                           
   596                           
   597                           ; 4 bytes @ 0x4
   598  0024                     	ds	4
   599  0028                     ?_I2C_Master_Init:
   600  0028                     I2C_Master_Init@c:	
   601                           ; 1 bytes @ 0x8
   602                           
   603                           
   604                           ; 4 bytes @ 0x8
   605  0028                     	ds	1
   606  0029                     decimal_to_bcd@number:
   607                           
   608                           ; 1 bytes @ 0x9
   609  0029                     	ds	1
   610  002A                     ?_S_RTC:
   611  002A                     S_RTC@minute:	
   612                           ; 1 bytes @ 0xA
   613                           
   614                           
   615                           ; 1 bytes @ 0xA
   616  002A                     	ds	1
   617  002B                     S_RTC@hour:
   618                           
   619                           ; 1 bytes @ 0xB
   620  002B                     	ds	1
   621  002C                     ??_I2C_Master_Init:
   622  002C                     S_RTC@m_day:	
   623                           ; 1 bytes @ 0xC
   624                           
   625                           
   626                           ; 1 bytes @ 0xC
   627  002C                     	ds	1
   628  002D                     S_RTC@month:
   629                           
   630                           ; 1 bytes @ 0xD
   631  002D                     	ds	1
   632  002E                     S_RTC@year:
   633                           
   634                           ; 1 bytes @ 0xE
   635  002E                     	ds	1
   636  002F                     ??_S_RTC:
   637                           
   638                           ; 1 bytes @ 0xF
   639  002F                     	ds	3
   640  0032                     S_RTC@second:
   641                           
   642                           ; 1 bytes @ 0x12
   643  0032                     	ds	1
   644  0033                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x13
   647  0033                     	ds	5
   648                           
   649                           	psect	maintext
   650  02F1                     __pmaintext:	
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 60 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : B00/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       5       0       0       0
   673 ;;      Totals:         0       5       0       0       0
   674 ;;Total ram usage:        5 bytes
   675 ;; Hardware stack levels required when called:    4
   676 ;; This function calls:
   677 ;;		_I2C_Master_Init
   678 ;;		_R_RTC
   679 ;;		_S_RTC
   680 ;;		_setup
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _main
   688  02F1                     _main:
   689  02F1                     l1462:	
   690                           ;incstack = 0
   691                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   692                           
   693                           
   694                           ;main.c: 61:     month = 7;
   695  02F1  120A  118A  229E  120A  118A  	fcall	_setup
   696                           
   697                           ;main.c: 62:     year = 99;
   698  02F6  3000               	movlw	0
   699  02F7  1283               	bcf	3,5	;RP0=0, select bank0
   700  02F8  1303               	bcf	3,6	;RP1=0, select bank0
   701  02F9  00AB               	movwf	I2C_Master_Init@c+3
   702  02FA  3001               	movlw	1
   703  02FB  00AA               	movwf	I2C_Master_Init@c+2
   704  02FC  3086               	movlw	134
   705  02FD  00A9               	movwf	I2C_Master_Init@c+1
   706  02FE  30A0               	movlw	160
   707  02FF  00A8               	movwf	I2C_Master_Init@c
   708  0300  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Init
   709                           
   710                           ;main.c: 63: }
   711  0305  1283               	bcf	3,5	;RP0=0, select bank0
   712  0306  1303               	bcf	3,6	;RP1=0, select bank0
   713  0307  083C               	movf	_minute,w
   714  0308  00B3               	movwf	??_main
   715  0309  0833               	movf	??_main,w
   716  030A  00AA               	movwf	S_RTC@minute
   717  030B  083B               	movf	_hour,w
   718  030C  00B4               	movwf	??_main+1
   719  030D  0834               	movf	??_main+1,w
   720  030E  00AB               	movwf	S_RTC@hour
   721  030F  083A               	movf	_m_day,w
   722  0310  00B5               	movwf	??_main+2
   723  0311  0835               	movf	??_main+2,w
   724  0312  00AC               	movwf	S_RTC@m_day
   725  0313  0839               	movf	_month,w
   726  0314  00B6               	movwf	??_main+3
   727  0315  0836               	movf	??_main+3,w
   728  0316  00AD               	movwf	S_RTC@month
   729  0317  0838               	movf	_year,w
   730  0318  00B7               	movwf	??_main+4
   731  0319  0837               	movf	??_main+4,w
   732  031A  00AE               	movwf	S_RTC@year
   733  031B  083D               	movf	_second,w
   734  031C  120A  118A  2017  120A  118A  	fcall	_S_RTC
   735  0321                     l69:	
   736                           ;main.c: 68:         lr = RCREG;
   737                           
   738                           
   739                           ;main.c: 71:  }
   740  0321  120A  118A  20DE  120A  118A  	fcall	_R_RTC
   741  0326                     l1464:
   742  0326  1283               	bcf	3,5	;RP0=0, select bank0
   743  0327  1303               	bcf	3,6	;RP1=0, select bank0
   744  0328  083C               	movf	_minute,w
   745  0329  0099               	movwf	25	;volatile
   746  032A                     l1466:
   747  032A  3034               	movlw	52
   748  032B  1283               	bcf	3,5	;RP0=0, select bank0
   749  032C  1303               	bcf	3,6	;RP1=0, select bank0
   750  032D  00B4               	movwf	??_main+1
   751  032E  30F1               	movlw	241
   752  032F  00B3               	movwf	??_main
   753  0330                     u937:
   754  0330  0BB3               	decfsz	??_main,f
   755  0331  2B30               	goto	u937
   756  0332  0BB4               	decfsz	??_main+1,f
   757  0333  2B30               	goto	u937
   758  0334                     l1468:
   759  0334  1283               	bcf	3,5	;RP0=0, select bank0
   760  0335  1303               	bcf	3,6	;RP1=0, select bank0
   761  0336  083E               	movf	_lr,w
   762  0337  0088               	movwf	8	;volatile
   763  0338  2B21               	goto	l69
   764  0339  120A  118A  280C   	ljmp	start
   765  033C                     __end_of_main:
   766                           
   767                           	psect	text1
   768  029E                     __ptext1:	
   769 ;; *************** function _setup *****************
   770 ;; Defined at:
   771 ;;		line 84 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          1       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    3
   792 ;; This function calls:
   793 ;;		_I2C_Master_Init
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _setup
   801  029E                     _setup:
   802  029E                     l1392:	
   803                           ;incstack = 0
   804                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   805                           
   806  029E  1683               	bsf	3,5	;RP0=1, select bank1
   807  029F  1303               	bcf	3,6	;RP1=0, select bank1
   808  02A0  0188               	clrf	8	;volatile
   809  02A1                     l1394:
   810  02A1  30D8               	movlw	216
   811  02A2  0087               	movwf	7	;volatile
   812  02A3                     l1396:
   813  02A3  0189               	clrf	9	;volatile
   814  02A4                     l1398:
   815  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   816  02A5  1303               	bcf	3,6	;RP1=0, select bank0
   817  02A6  0185               	clrf	5	;volatile
   818  02A7                     l1400:
   819  02A7  0186               	clrf	6	;volatile
   820  02A8                     l1402:
   821  02A8  0187               	clrf	7	;volatile
   822  02A9                     l1404:
   823  02A9  0188               	clrf	8	;volatile
   824  02AA                     l1406:
   825  02AA  0189               	clrf	9	;volatile
   826  02AB                     l1408:
   827  02AB  1683               	bsf	3,5	;RP0=1, select bank1
   828  02AC  1303               	bcf	3,6	;RP1=0, select bank1
   829  02AD  080F               	movf	15,w	;volatile
   830  02AE  398F               	andlw	-113
   831  02AF  3860               	iorlw	96
   832  02B0  008F               	movwf	15	;volatile
   833  02B1                     l1410:
   834  02B1  118F               	bcf	15,3	;volatile
   835  02B2                     l1412:
   836  02B2  110F               	bcf	15,2	;volatile
   837  02B3                     l1414:
   838  02B3  108F               	bcf	15,1	;volatile
   839  02B4                     l1416:
   840  02B4  140F               	bsf	15,0	;volatile
   841  02B5                     l1418:
   842  02B5  178B               	bsf	11,7	;volatile
   843  02B6                     l1420:
   844  02B6  170B               	bsf	11,6	;volatile
   845  02B7                     l1422:
   846  02B7  168C               	bsf	12,5	;volatile
   847  02B8                     l1424:
   848  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   849  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   850  02BA  128C               	bcf	12,5	;volatile
   851  02BB                     l1426:
   852  02BB  1683               	bsf	3,5	;RP0=1, select bank3
   853  02BC  1703               	bsf	3,6	;RP1=1, select bank3
   854  02BD  1187               	bcf	7,3	;volatile
   855  02BE                     l1428:
   856  02BE  1683               	bsf	3,5	;RP0=1, select bank1
   857  02BF  1303               	bcf	3,6	;RP1=0, select bank1
   858  02C0  019A               	clrf	26	;volatile
   859  02C1                     l1430:
   860  02C1  3019               	movlw	25
   861  02C2  0099               	movwf	25	;volatile
   862  02C3                     l1432:
   863  02C3  3024               	movlw	36
   864  02C4  0098               	movwf	24	;volatile
   865  02C5                     l1434:
   866  02C5  3090               	movlw	144
   867  02C6  1283               	bcf	3,5	;RP0=0, select bank0
   868  02C7  1303               	bcf	3,6	;RP1=0, select bank0
   869  02C8  0098               	movwf	24	;volatile
   870  02C9                     l1436:
   871  02C9  3000               	movlw	0
   872  02CA  00AB               	movwf	I2C_Master_Init@c+3
   873  02CB  3001               	movlw	1
   874  02CC  00AA               	movwf	I2C_Master_Init@c+2
   875  02CD  3086               	movlw	134
   876  02CE  00A9               	movwf	I2C_Master_Init@c+1
   877  02CF  30A0               	movlw	160
   878  02D0  00A8               	movwf	I2C_Master_Init@c
   879  02D1  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Init
   880  02D6                     l1438:
   881  02D6  3024               	movlw	36
   882  02D7  00F9               	movwf	??_setup
   883  02D8  0879               	movf	??_setup,w
   884  02D9  1283               	bcf	3,5	;RP0=0, select bank0
   885  02DA  1303               	bcf	3,6	;RP1=0, select bank0
   886  02DB  00BD               	movwf	_second
   887  02DC                     l1440:
   888  02DC  301E               	movlw	30
   889  02DD  00F9               	movwf	??_setup
   890  02DE  0879               	movf	??_setup,w
   891  02DF  00BC               	movwf	_minute
   892  02E0                     l1442:
   893  02E0  3006               	movlw	6
   894  02E1  00F9               	movwf	??_setup
   895  02E2  0879               	movf	??_setup,w
   896  02E3  00BB               	movwf	_hour
   897  02E4                     l1444:
   898  02E4  3017               	movlw	23
   899  02E5  00F9               	movwf	??_setup
   900  02E6  0879               	movf	??_setup,w
   901  02E7  00BA               	movwf	_m_day
   902  02E8                     l1446:
   903  02E8  3007               	movlw	7
   904  02E9  00F9               	movwf	??_setup
   905  02EA  0879               	movf	??_setup,w
   906  02EB  00B9               	movwf	_month
   907  02EC                     l1448:
   908  02EC  3063               	movlw	99
   909  02ED  00F9               	movwf	??_setup
   910  02EE  0879               	movf	??_setup,w
   911  02EF  00B8               	movwf	_year
   912  02F0                     l75:
   913  02F0  0008               	return
   914  02F1                     __end_of_setup:
   915                           
   916                           	psect	text2
   917  033C                     __ptext2:	
   918 ;; *************** function _I2C_Master_Init *****************
   919 ;; Defined at:
   920 ;;		line 16 in file "I2C.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  c               4    8[BANK0 ] const unsigned long 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       4       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          0       4       0       0       0
   937 ;;      Totals:         0       8       0       0       0
   938 ;;Total ram usage:        8 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    2
   941 ;; This function calls:
   942 ;;		___lldiv
   943 ;; This function is called by:
   944 ;;		_main
   945 ;;		_setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _I2C_Master_Init
   951  033C                     _I2C_Master_Init:
   952  033C                     l1376:	
   953                           ;incstack = 0
   954                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   955                           
   956                           
   957                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   958  033C  3028               	movlw	40
   959  033D  1283               	bcf	3,5	;RP0=0, select bank0
   960  033E  1303               	bcf	3,6	;RP1=0, select bank0
   961  033F  0094               	movwf	20	;volatile
   962  0340                     l1378:
   963                           
   964                           ;I2C.c: 19:     SSPCON2 = 0;
   965  0340  1683               	bsf	3,5	;RP0=1, select bank1
   966  0341  1303               	bcf	3,6	;RP1=0, select bank1
   967  0342  0191               	clrf	17	;volatile
   968  0343                     l1380:
   969                           
   970                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   971  0343  1283               	bcf	3,5	;RP0=0, select bank0
   972  0344  1303               	bcf	3,6	;RP1=0, select bank0
   973  0345  0828               	movf	I2C_Master_Init@c,w
   974  0346  00AC               	movwf	??_I2C_Master_Init
   975  0347  0829               	movf	I2C_Master_Init@c+1,w
   976  0348  00AD               	movwf	??_I2C_Master_Init+1
   977  0349  082A               	movf	I2C_Master_Init@c+2,w
   978  034A  00AE               	movwf	??_I2C_Master_Init+2
   979  034B  082B               	movf	I2C_Master_Init@c+3,w
   980  034C  00AF               	movwf	??_I2C_Master_Init+3
   981  034D  3002               	movlw	2
   982  034E                     u915:
   983  034E  1003               	clrc
   984  034F  0DAC               	rlf	??_I2C_Master_Init,f
   985  0350  0DAD               	rlf	??_I2C_Master_Init+1,f
   986  0351  0DAE               	rlf	??_I2C_Master_Init+2,f
   987  0352  0DAF               	rlf	??_I2C_Master_Init+3,f
   988  0353                     u910:
   989  0353  3EFF               	addlw	-1
   990  0354  1D03               	skipz
   991  0355  2B4E               	goto	u915
   992  0356  082F               	movf	??_I2C_Master_Init+3,w
   993  0357  00A3               	movwf	___lldiv@divisor+3
   994  0358  082E               	movf	??_I2C_Master_Init+2,w
   995  0359  00A2               	movwf	___lldiv@divisor+2
   996  035A  082D               	movf	??_I2C_Master_Init+1,w
   997  035B  00A1               	movwf	___lldiv@divisor+1
   998  035C  082C               	movf	??_I2C_Master_Init,w
   999  035D  00A0               	movwf	___lldiv@divisor
  1000  035E  3000               	movlw	0
  1001  035F  00A7               	movwf	___lldiv@dividend+3
  1002  0360  307A               	movlw	122
  1003  0361  00A6               	movwf	___lldiv@dividend+2
  1004  0362  3012               	movlw	18
  1005  0363  00A5               	movwf	___lldiv@dividend+1
  1006  0364  3000               	movlw	0
  1007  0365  00A4               	movwf	___lldiv@dividend
  1008  0366  120A  118A  21DD  120A  118A  	fcall	___lldiv
  1009  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1010  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1011  036D  0820               	movf	?___lldiv,w
  1012  036E  3EFF               	addlw	255
  1013  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1014  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1015  0371  0093               	movwf	19	;volatile
  1016  0372                     l1382:
  1017                           
  1018                           ;I2C.c: 21:     SSPSTAT = 0;
  1019  0372  0194               	clrf	20	;volatile
  1020  0373                     l1384:
  1021                           
  1022                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1023  0373  1587               	bsf	7,3	;volatile
  1024  0374                     l1386:
  1025                           
  1026                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1027  0374  1607               	bsf	7,4	;volatile
  1028  0375                     l110:
  1029  0375  0008               	return
  1030  0376                     __end_of_I2C_Master_Init:
  1031                           
  1032                           	psect	text3
  1033  01DD                     __ptext3:	
  1034 ;; *************** function ___lldiv *****************
  1035 ;; Defined at:
  1036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  divisor         4    0[BANK0 ] unsigned long 
  1039 ;;  dividend        4    4[BANK0 ] unsigned long 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  quotient        4    4[COMMON] unsigned long 
  1042 ;;  counter         1    8[COMMON] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  4    0[BANK0 ] unsigned long 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       8       0       0       0
  1053 ;;      Locals:         5       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0
  1055 ;;      Totals:         6       8       0       0       0
  1056 ;;Total ram usage:       14 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_I2C_Master_Init
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function ___lldiv
  1068  01DD                     ___lldiv:
  1069  01DD                     l1270:	
  1070                           ;incstack = 0
  1071                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1072                           
  1073  01DD  3000               	movlw	0
  1074  01DE  00F7               	movwf	___lldiv@quotient+3
  1075  01DF  3000               	movlw	0
  1076  01E0  00F6               	movwf	___lldiv@quotient+2
  1077  01E1  3000               	movlw	0
  1078  01E2  00F5               	movwf	___lldiv@quotient+1
  1079  01E3  3000               	movlw	0
  1080  01E4  00F4               	movwf	___lldiv@quotient
  1081  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1082  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1083  01E7  0823               	movf	___lldiv@divisor+3,w
  1084  01E8  0422               	iorwf	___lldiv@divisor+2,w
  1085  01E9  0421               	iorwf	___lldiv@divisor+1,w
  1086  01EA  0420               	iorwf	___lldiv@divisor,w
  1087  01EB  1903               	skipnz
  1088  01EC  29EE               	goto	u651
  1089  01ED  29EF               	goto	u650
  1090  01EE                     u651:
  1091  01EE  2A3C               	goto	l1290
  1092  01EF                     u650:
  1093  01EF                     l1272:
  1094  01EF  01F8               	clrf	___lldiv@counter
  1095  01F0  0AF8               	incf	___lldiv@counter,f
  1096  01F1  29FF               	goto	l1276
  1097  01F2                     l1274:
  1098  01F2  3001               	movlw	1
  1099  01F3  00F3               	movwf	??___lldiv
  1100  01F4                     u665:
  1101  01F4  1003               	clrc
  1102  01F5  0DA0               	rlf	___lldiv@divisor,f
  1103  01F6  0DA1               	rlf	___lldiv@divisor+1,f
  1104  01F7  0DA2               	rlf	___lldiv@divisor+2,f
  1105  01F8  0DA3               	rlf	___lldiv@divisor+3,f
  1106  01F9  0BF3               	decfsz	??___lldiv,f
  1107  01FA  29F4               	goto	u665
  1108  01FB  3001               	movlw	1
  1109  01FC  00F3               	movwf	??___lldiv
  1110  01FD  0873               	movf	??___lldiv,w
  1111  01FE  07F8               	addwf	___lldiv@counter,f
  1112  01FF                     l1276:
  1113  01FF  1FA3               	btfss	___lldiv@divisor+3,7
  1114  0200  2A02               	goto	u671
  1115  0201  2A03               	goto	u670
  1116  0202                     u671:
  1117  0202  29F2               	goto	l1274
  1118  0203                     u670:
  1119  0203                     l1278:
  1120  0203  3001               	movlw	1
  1121  0204  00F3               	movwf	??___lldiv
  1122  0205                     u685:
  1123  0205  1003               	clrc
  1124  0206  0DF4               	rlf	___lldiv@quotient,f
  1125  0207  0DF5               	rlf	___lldiv@quotient+1,f
  1126  0208  0DF6               	rlf	___lldiv@quotient+2,f
  1127  0209  0DF7               	rlf	___lldiv@quotient+3,f
  1128  020A  0BF3               	decfsz	??___lldiv,f
  1129  020B  2A05               	goto	u685
  1130  020C                     l1280:
  1131  020C  0823               	movf	___lldiv@divisor+3,w
  1132  020D  0227               	subwf	___lldiv@dividend+3,w
  1133  020E  1D03               	skipz
  1134  020F  2A1A               	goto	u695
  1135  0210  0822               	movf	___lldiv@divisor+2,w
  1136  0211  0226               	subwf	___lldiv@dividend+2,w
  1137  0212  1D03               	skipz
  1138  0213  2A1A               	goto	u695
  1139  0214  0821               	movf	___lldiv@divisor+1,w
  1140  0215  0225               	subwf	___lldiv@dividend+1,w
  1141  0216  1D03               	skipz
  1142  0217  2A1A               	goto	u695
  1143  0218  0820               	movf	___lldiv@divisor,w
  1144  0219  0224               	subwf	___lldiv@dividend,w
  1145  021A                     u695:
  1146  021A  1C03               	skipc
  1147  021B  2A1D               	goto	u691
  1148  021C  2A1E               	goto	u690
  1149  021D                     u691:
  1150  021D  2A2D               	goto	l1286
  1151  021E                     u690:
  1152  021E                     l1282:
  1153  021E  0820               	movf	___lldiv@divisor,w
  1154  021F  02A4               	subwf	___lldiv@dividend,f
  1155  0220  0821               	movf	___lldiv@divisor+1,w
  1156  0221  1C03               	skipc
  1157  0222  0F21               	incfsz	___lldiv@divisor+1,w
  1158  0223  02A5               	subwf	___lldiv@dividend+1,f
  1159  0224  0822               	movf	___lldiv@divisor+2,w
  1160  0225  1C03               	skipc
  1161  0226  0F22               	incfsz	___lldiv@divisor+2,w
  1162  0227  02A6               	subwf	___lldiv@dividend+2,f
  1163  0228  0823               	movf	___lldiv@divisor+3,w
  1164  0229  1C03               	skipc
  1165  022A  0F23               	incfsz	___lldiv@divisor+3,w
  1166  022B  02A7               	subwf	___lldiv@dividend+3,f
  1167  022C                     l1284:
  1168  022C  1474               	bsf	___lldiv@quotient,0
  1169  022D                     l1286:
  1170  022D  3001               	movlw	1
  1171  022E                     u705:
  1172  022E  1003               	clrc
  1173  022F  0CA3               	rrf	___lldiv@divisor+3,f
  1174  0230  0CA2               	rrf	___lldiv@divisor+2,f
  1175  0231  0CA1               	rrf	___lldiv@divisor+1,f
  1176  0232  0CA0               	rrf	___lldiv@divisor,f
  1177  0233  3EFF               	addlw	-1
  1178  0234  1D03               	skipz
  1179  0235  2A2E               	goto	u705
  1180  0236                     l1288:
  1181  0236  3001               	movlw	1
  1182  0237  02F8               	subwf	___lldiv@counter,f
  1183  0238  1D03               	btfss	3,2
  1184  0239  2A3B               	goto	u711
  1185  023A  2A3C               	goto	u710
  1186  023B                     u711:
  1187  023B  2A03               	goto	l1278
  1188  023C                     u710:
  1189  023C                     l1290:
  1190  023C  0877               	movf	___lldiv@quotient+3,w
  1191  023D  00A3               	movwf	?___lldiv+3
  1192  023E  0876               	movf	___lldiv@quotient+2,w
  1193  023F  00A2               	movwf	?___lldiv+2
  1194  0240  0875               	movf	___lldiv@quotient+1,w
  1195  0241  00A1               	movwf	?___lldiv+1
  1196  0242  0874               	movf	___lldiv@quotient,w
  1197  0243  00A0               	movwf	?___lldiv
  1198  0244                     l296:
  1199  0244  0008               	return
  1200  0245                     __end_of___lldiv:
  1201                           
  1202                           	psect	text4
  1203  0017                     __ptext4:	
  1204 ;; *************** function _S_RTC *****************
  1205 ;; Defined at:
  1206 ;;		line 27 in file "RTC.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  second          1    wreg     unsigned char 
  1209 ;;  minute          1   10[BANK0 ] unsigned char 
  1210 ;;  hour            1   11[BANK0 ] unsigned char 
  1211 ;;  m_day           1   12[BANK0 ] unsigned char 
  1212 ;;  month           1   13[BANK0 ] unsigned char 
  1213 ;;  year            1   14[BANK0 ] unsigned char 
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  second          1   18[BANK0 ] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      unsigned char 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       5       0       0       0
  1226 ;;      Locals:         0       1       0       0       0
  1227 ;;      Temps:          0       3       0       0       0
  1228 ;;      Totals:         0       9       0       0       0
  1229 ;;Total ram usage:        9 bytes
  1230 ;; Hardware stack levels used:    1
  1231 ;; Hardware stack levels required when called:    3
  1232 ;; This function calls:
  1233 ;;		_I2C_Master_Start
  1234 ;;		_I2C_Master_Stop
  1235 ;;		_I2C_Master_Write
  1236 ;;		_decimal_to_bcd
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _S_RTC
  1244  0017                     _S_RTC:
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _S_RTC: [wreg+status,2+status,0+pclath+cstack]
  1248                           ;S_RTC@second stored from wreg
  1249  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0019  00B2               	movwf	S_RTC@second
  1252  001A                     l1450:
  1253                           
  1254                           ;RTC.c: 29:     second = decimal_to_bcd(second);
  1255  001A  0832               	movf	S_RTC@second,w
  1256  001B  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1257  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0022  00AF               	movwf	??_S_RTC
  1260  0023  082F               	movf	??_S_RTC,w
  1261  0024  00B2               	movwf	S_RTC@second
  1262                           
  1263                           ;RTC.c: 30:     minute = decimal_to_bcd(minute);
  1264  0025  082A               	movf	S_RTC@minute,w
  1265  0026  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1266  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1267  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1268  002D  00AF               	movwf	??_S_RTC
  1269  002E  082F               	movf	??_S_RTC,w
  1270  002F  00AA               	movwf	S_RTC@minute
  1271                           
  1272                           ;RTC.c: 31:     hour = decimal_to_bcd(hour);
  1273  0030  082B               	movf	S_RTC@hour,w
  1274  0031  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1275  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0038  00AF               	movwf	??_S_RTC
  1278  0039  082F               	movf	??_S_RTC,w
  1279  003A  00AB               	movwf	S_RTC@hour
  1280                           
  1281                           ;RTC.c: 32:     m_day = decimal_to_bcd(m_day);
  1282  003B  082C               	movf	S_RTC@m_day,w
  1283  003C  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1284  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0043  00AF               	movwf	??_S_RTC
  1287  0044  082F               	movf	??_S_RTC,w
  1288  0045  00AC               	movwf	S_RTC@m_day
  1289                           
  1290                           ;RTC.c: 33:     month = decimal_to_bcd(month);
  1291  0046  082D               	movf	S_RTC@month,w
  1292  0047  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1293  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1294  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1295  004E  00AF               	movwf	??_S_RTC
  1296  004F  082F               	movf	??_S_RTC,w
  1297  0050  00AD               	movwf	S_RTC@month
  1298                           
  1299                           ;RTC.c: 34:     year = decimal_to_bcd(year);
  1300  0051  082E               	movf	S_RTC@year,w
  1301  0052  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1302  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0059  00AF               	movwf	??_S_RTC
  1305  005A  082F               	movf	??_S_RTC,w
  1306  005B  00AE               	movwf	S_RTC@year
  1307                           
  1308                           ;RTC.c: 38:     I2C_Master_Start();
  1309  005C  120A  118A  2408  120A  118A  	fcall	_I2C_Master_Start
  1310                           
  1311                           ;RTC.c: 39:     I2C_Master_Write(0xD0);
  1312  0061  30D0               	movlw	208
  1313  0062  00F3               	movwf	I2C_Master_Write@d
  1314  0063  3000               	movlw	0
  1315  0064  00F4               	movwf	I2C_Master_Write@d+1
  1316  0065  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1317                           
  1318                           ;RTC.c: 40:     I2C_Master_Write(0);
  1319  006A  3000               	movlw	0
  1320  006B  00F3               	movwf	I2C_Master_Write@d
  1321  006C  00F4               	movwf	I2C_Master_Write@d+1
  1322  006D  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1323                           
  1324                           ;RTC.c: 41:     I2C_Master_Write(0);
  1325  0072  3000               	movlw	0
  1326  0073  00F3               	movwf	I2C_Master_Write@d
  1327  0074  00F4               	movwf	I2C_Master_Write@d+1
  1328  0075  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1329                           
  1330                           ;RTC.c: 42:     I2C_Master_Write(minute);
  1331  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1332  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1333  007C  082A               	movf	S_RTC@minute,w
  1334  007D  00AF               	movwf	??_S_RTC
  1335  007E  01B0               	clrf	??_S_RTC+1
  1336  007F  082F               	movf	??_S_RTC,w
  1337  0080  00F3               	movwf	I2C_Master_Write@d
  1338  0081  0830               	movf	??_S_RTC+1,w
  1339  0082  00F4               	movwf	I2C_Master_Write@d+1
  1340  0083  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1341                           
  1342                           ;RTC.c: 43:     I2C_Master_Write(hour);
  1343  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1345  008A  082B               	movf	S_RTC@hour,w
  1346  008B  00AF               	movwf	??_S_RTC
  1347  008C  01B0               	clrf	??_S_RTC+1
  1348  008D  082F               	movf	??_S_RTC,w
  1349  008E  00F3               	movwf	I2C_Master_Write@d
  1350  008F  0830               	movf	??_S_RTC+1,w
  1351  0090  00F4               	movwf	I2C_Master_Write@d+1
  1352  0091  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1353                           
  1354                           ;RTC.c: 44:     I2C_Master_Write(1);
  1355  0096  3001               	movlw	1
  1356  0097  00F3               	movwf	I2C_Master_Write@d
  1357  0098  3000               	movlw	0
  1358  0099  00F4               	movwf	I2C_Master_Write@d+1
  1359  009A  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1360                           
  1361                           ;RTC.c: 45:     I2C_Master_Write(m_day);
  1362  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1363  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1364  00A1  082C               	movf	S_RTC@m_day,w
  1365  00A2  00AF               	movwf	??_S_RTC
  1366  00A3  01B0               	clrf	??_S_RTC+1
  1367  00A4  082F               	movf	??_S_RTC,w
  1368  00A5  00F3               	movwf	I2C_Master_Write@d
  1369  00A6  0830               	movf	??_S_RTC+1,w
  1370  00A7  00F4               	movwf	I2C_Master_Write@d+1
  1371  00A8  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1372                           
  1373                           ;RTC.c: 46:     I2C_Master_Write(month);
  1374  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1375  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1376  00AF  082D               	movf	S_RTC@month,w
  1377  00B0  00AF               	movwf	??_S_RTC
  1378  00B1  01B0               	clrf	??_S_RTC+1
  1379  00B2  082F               	movf	??_S_RTC,w
  1380  00B3  00F3               	movwf	I2C_Master_Write@d
  1381  00B4  0830               	movf	??_S_RTC+1,w
  1382  00B5  00F4               	movwf	I2C_Master_Write@d+1
  1383  00B6  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1384                           
  1385                           ;RTC.c: 47:     I2C_Master_Write(year);
  1386  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1387  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1388  00BD  082E               	movf	S_RTC@year,w
  1389  00BE  00AF               	movwf	??_S_RTC
  1390  00BF  01B0               	clrf	??_S_RTC+1
  1391  00C0  082F               	movf	??_S_RTC,w
  1392  00C1  00F3               	movwf	I2C_Master_Write@d
  1393  00C2  0830               	movf	??_S_RTC+1,w
  1394  00C3  00F4               	movwf	I2C_Master_Write@d+1
  1395  00C4  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1396                           
  1397                           ;RTC.c: 48:     I2C_Master_Stop();
  1398  00C9  120A  118A  23FF  120A  118A  	fcall	_I2C_Master_Stop
  1399  00CE                     l1452:
  1400                           
  1401                           ;RTC.c: 50:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1402  00CE  3003               	movlw	3
  1403  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1404  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1405  00D1  00B1               	movwf	??_S_RTC+2
  1406  00D2  3008               	movlw	8
  1407  00D3  00B0               	movwf	??_S_RTC+1
  1408  00D4  3076               	movlw	118
  1409  00D5  00AF               	movwf	??_S_RTC
  1410  00D6                     u947:
  1411  00D6  0BAF               	decfsz	??_S_RTC,f
  1412  00D7  28D6               	goto	u947
  1413  00D8  0BB0               	decfsz	??_S_RTC+1,f
  1414  00D9  28D6               	goto	u947
  1415  00DA  0BB1               	decfsz	??_S_RTC+2,f
  1416  00DB  28D6               	goto	u947
  1417  00DC  0000               	nop
  1418  00DD                     l171:
  1419  00DD  0008               	return
  1420  00DE                     __end_of_S_RTC:
  1421                           
  1422                           	psect	text5
  1423  0376                     __ptext5:	
  1424 ;; *************** function _decimal_to_bcd *****************
  1425 ;; Defined at:
  1426 ;;		line 21 in file "RTC.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  number          1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  number          1    9[BANK0 ] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      unsigned char 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       1       0       0       0
  1442 ;;      Temps:          0       5       0       0       0
  1443 ;;      Totals:         0       6       0       0       0
  1444 ;;Total ram usage:        6 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		___awdiv
  1449 ;;		___awmod
  1450 ;; This function is called by:
  1451 ;;		_S_RTC
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _decimal_to_bcd
  1457  0376                     _decimal_to_bcd:
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1461                           ;decimal_to_bcd@number stored from wreg
  1462  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0378  00A9               	movwf	decimal_to_bcd@number
  1465  0379                     l1388:
  1466                           
  1467                           ;RTC.c: 22:     return (((number / 10) << 4) + (number % 10));
  1468  0379  300A               	movlw	10
  1469  037A  00F3               	movwf	___awdiv@divisor
  1470  037B  3000               	movlw	0
  1471  037C  00F4               	movwf	___awdiv@divisor+1
  1472  037D  0829               	movf	decimal_to_bcd@number,w
  1473  037E  00A4               	movwf	??_decimal_to_bcd
  1474  037F  01A5               	clrf	??_decimal_to_bcd+1
  1475  0380  0824               	movf	??_decimal_to_bcd,w
  1476  0381  00F5               	movwf	___awdiv@dividend
  1477  0382  0825               	movf	??_decimal_to_bcd+1,w
  1478  0383  00F6               	movwf	___awdiv@dividend+1
  1479  0384  120A  118A  2174  120A  118A  	fcall	___awdiv
  1480  0389  0873               	movf	?___awdiv,w
  1481  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1482  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1483  038C  00A6               	movwf	??_decimal_to_bcd+2
  1484  038D  3004               	movlw	4
  1485  038E                     u925:
  1486  038E  1003               	clrc
  1487  038F  0DA6               	rlf	??_decimal_to_bcd+2,f
  1488  0390  3EFF               	addlw	-1
  1489  0391  1D03               	skipz
  1490  0392  2B8E               	goto	u925
  1491  0393  300A               	movlw	10
  1492  0394  00F3               	movwf	___awmod@divisor
  1493  0395  3000               	movlw	0
  1494  0396  00F4               	movwf	___awmod@divisor+1
  1495  0397  0829               	movf	decimal_to_bcd@number,w
  1496  0398  00A7               	movwf	??_decimal_to_bcd+3
  1497  0399  01A8               	clrf	??_decimal_to_bcd+4
  1498  039A  0827               	movf	??_decimal_to_bcd+3,w
  1499  039B  00F5               	movwf	___awmod@dividend
  1500  039C  0828               	movf	??_decimal_to_bcd+4,w
  1501  039D  00F6               	movwf	___awmod@dividend+1
  1502  039E  120A  118A  2245  120A  118A  	fcall	___awmod
  1503  03A3  0873               	movf	?___awmod,w
  1504  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1505  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1506  03A6  0726               	addwf	??_decimal_to_bcd+2,w
  1507  03A7                     l168:
  1508  03A7  0008               	return
  1509  03A8                     __end_of_decimal_to_bcd:
  1510                           
  1511                           	psect	text6
  1512  0245                     __ptext6:	
  1513 ;; *************** function ___awmod *****************
  1514 ;; Defined at:
  1515 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  divisor         2    3[COMMON] int 
  1518 ;;  dividend        2    5[COMMON] int 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  sign            1    9[COMMON] unsigned char 
  1521 ;;  counter         1    8[COMMON] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    3[COMMON] int 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         4       0       0       0       0
  1532 ;;      Locals:         2       0       0       0       0
  1533 ;;      Temps:          1       0       0       0       0
  1534 ;;      Totals:         7       0       0       0       0
  1535 ;;Total ram usage:        7 bytes
  1536 ;; Hardware stack levels used:    1
  1537 ;; Hardware stack levels required when called:    1
  1538 ;; This function calls:
  1539 ;;		Nothing
  1540 ;; This function is called by:
  1541 ;;		_decimal_to_bcd
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function ___awmod
  1547  0245                     ___awmod:
  1548  0245                     l1338:	
  1549                           ;incstack = 0
  1550                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1551                           
  1552  0245  01F9               	clrf	___awmod@sign
  1553  0246                     l1340:
  1554  0246  1FF6               	btfss	___awmod@dividend+1,7
  1555  0247  2A49               	goto	u821
  1556  0248  2A4A               	goto	u820
  1557  0249                     u821:
  1558  0249  2A51               	goto	l1346
  1559  024A                     u820:
  1560  024A                     l1342:
  1561  024A  09F5               	comf	___awmod@dividend,f
  1562  024B  09F6               	comf	___awmod@dividend+1,f
  1563  024C  0AF5               	incf	___awmod@dividend,f
  1564  024D  1903               	skipnz
  1565  024E  0AF6               	incf	___awmod@dividend+1,f
  1566  024F                     l1344:
  1567  024F  01F9               	clrf	___awmod@sign
  1568  0250  0AF9               	incf	___awmod@sign,f
  1569  0251                     l1346:
  1570  0251  1FF4               	btfss	___awmod@divisor+1,7
  1571  0252  2A54               	goto	u831
  1572  0253  2A55               	goto	u830
  1573  0254                     u831:
  1574  0254  2A5A               	goto	l1350
  1575  0255                     u830:
  1576  0255                     l1348:
  1577  0255  09F3               	comf	___awmod@divisor,f
  1578  0256  09F4               	comf	___awmod@divisor+1,f
  1579  0257  0AF3               	incf	___awmod@divisor,f
  1580  0258  1903               	skipnz
  1581  0259  0AF4               	incf	___awmod@divisor+1,f
  1582  025A                     l1350:
  1583  025A  0873               	movf	___awmod@divisor,w
  1584  025B  0474               	iorwf	___awmod@divisor+1,w
  1585  025C  1903               	btfsc	3,2
  1586  025D  2A5F               	goto	u841
  1587  025E  2A60               	goto	u840
  1588  025F                     u841:
  1589  025F  2A8F               	goto	l1368
  1590  0260                     u840:
  1591  0260                     l1352:
  1592  0260  01F8               	clrf	___awmod@counter
  1593  0261  0AF8               	incf	___awmod@counter,f
  1594  0262  2A6E               	goto	l1358
  1595  0263                     l1354:
  1596  0263  3001               	movlw	1
  1597  0264                     u855:
  1598  0264  1003               	clrc
  1599  0265  0DF3               	rlf	___awmod@divisor,f
  1600  0266  0DF4               	rlf	___awmod@divisor+1,f
  1601  0267  3EFF               	addlw	-1
  1602  0268  1D03               	skipz
  1603  0269  2A64               	goto	u855
  1604  026A                     l1356:
  1605  026A  3001               	movlw	1
  1606  026B  00F7               	movwf	??___awmod
  1607  026C  0877               	movf	??___awmod,w
  1608  026D  07F8               	addwf	___awmod@counter,f
  1609  026E                     l1358:
  1610  026E  1FF4               	btfss	___awmod@divisor+1,7
  1611  026F  2A71               	goto	u861
  1612  0270  2A72               	goto	u860
  1613  0271                     u861:
  1614  0271  2A63               	goto	l1354
  1615  0272                     u860:
  1616  0272                     l1360:
  1617  0272  0874               	movf	___awmod@divisor+1,w
  1618  0273  0276               	subwf	___awmod@dividend+1,w
  1619  0274  1D03               	skipz
  1620  0275  2A78               	goto	u875
  1621  0276  0873               	movf	___awmod@divisor,w
  1622  0277  0275               	subwf	___awmod@dividend,w
  1623  0278                     u875:
  1624  0278  1C03               	skipc
  1625  0279  2A7B               	goto	u871
  1626  027A  2A7C               	goto	u870
  1627  027B                     u871:
  1628  027B  2A82               	goto	l1364
  1629  027C                     u870:
  1630  027C                     l1362:
  1631  027C  0873               	movf	___awmod@divisor,w
  1632  027D  02F5               	subwf	___awmod@dividend,f
  1633  027E  0874               	movf	___awmod@divisor+1,w
  1634  027F  1C03               	skipc
  1635  0280  03F6               	decf	___awmod@dividend+1,f
  1636  0281  02F6               	subwf	___awmod@dividend+1,f
  1637  0282                     l1364:
  1638  0282  3001               	movlw	1
  1639  0283                     u885:
  1640  0283  1003               	clrc
  1641  0284  0CF4               	rrf	___awmod@divisor+1,f
  1642  0285  0CF3               	rrf	___awmod@divisor,f
  1643  0286  3EFF               	addlw	-1
  1644  0287  1D03               	skipz
  1645  0288  2A83               	goto	u885
  1646  0289                     l1366:
  1647  0289  3001               	movlw	1
  1648  028A  02F8               	subwf	___awmod@counter,f
  1649  028B  1D03               	btfss	3,2
  1650  028C  2A8E               	goto	u891
  1651  028D  2A8F               	goto	u890
  1652  028E                     u891:
  1653  028E  2A72               	goto	l1360
  1654  028F                     u890:
  1655  028F                     l1368:
  1656  028F  0879               	movf	___awmod@sign,w
  1657  0290  1903               	btfsc	3,2
  1658  0291  2A93               	goto	u901
  1659  0292  2A94               	goto	u900
  1660  0293                     u901:
  1661  0293  2A99               	goto	l1372
  1662  0294                     u900:
  1663  0294                     l1370:
  1664  0294  09F5               	comf	___awmod@dividend,f
  1665  0295  09F6               	comf	___awmod@dividend+1,f
  1666  0296  0AF5               	incf	___awmod@dividend,f
  1667  0297  1903               	skipnz
  1668  0298  0AF6               	incf	___awmod@dividend+1,f
  1669  0299                     l1372:
  1670  0299  0876               	movf	___awmod@dividend+1,w
  1671  029A  00F4               	movwf	?___awmod+1
  1672  029B  0875               	movf	___awmod@dividend,w
  1673  029C  00F3               	movwf	?___awmod
  1674  029D                     l426:
  1675  029D  0008               	return
  1676  029E                     __end_of___awmod:
  1677                           
  1678                           	psect	text7
  1679  0174                     __ptext7:	
  1680 ;; *************** function ___awdiv *****************
  1681 ;; Defined at:
  1682 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  divisor         2    3[COMMON] int 
  1685 ;;  dividend        2    5[COMMON] int 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  quotient        2    2[BANK0 ] int 
  1688 ;;  sign            1    1[BANK0 ] unsigned char 
  1689 ;;  counter         1    0[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  2    3[COMMON] int 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1699 ;;      Params:         4       0       0       0       0
  1700 ;;      Locals:         0       4       0       0       0
  1701 ;;      Temps:          1       0       0       0       0
  1702 ;;      Totals:         5       4       0       0       0
  1703 ;;Total ram usage:        9 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_decimal_to_bcd
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function ___awdiv
  1715  0174                     ___awdiv:
  1716  0174                     l1294:	
  1717                           ;incstack = 0
  1718                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1719                           
  1720  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0176  01A1               	clrf	___awdiv@sign
  1723  0177                     l1296:
  1724  0177  1FF4               	btfss	___awdiv@divisor+1,7
  1725  0178  297A               	goto	u721
  1726  0179  297B               	goto	u720
  1727  017A                     u721:
  1728  017A  2982               	goto	l1302
  1729  017B                     u720:
  1730  017B                     l1298:
  1731  017B  09F3               	comf	___awdiv@divisor,f
  1732  017C  09F4               	comf	___awdiv@divisor+1,f
  1733  017D  0AF3               	incf	___awdiv@divisor,f
  1734  017E  1903               	skipnz
  1735  017F  0AF4               	incf	___awdiv@divisor+1,f
  1736  0180                     l1300:
  1737  0180  01A1               	clrf	___awdiv@sign
  1738  0181  0AA1               	incf	___awdiv@sign,f
  1739  0182                     l1302:
  1740  0182  1FF6               	btfss	___awdiv@dividend+1,7
  1741  0183  2985               	goto	u731
  1742  0184  2986               	goto	u730
  1743  0185                     u731:
  1744  0185  298F               	goto	l1308
  1745  0186                     u730:
  1746  0186                     l1304:
  1747  0186  09F5               	comf	___awdiv@dividend,f
  1748  0187  09F6               	comf	___awdiv@dividend+1,f
  1749  0188  0AF5               	incf	___awdiv@dividend,f
  1750  0189  1903               	skipnz
  1751  018A  0AF6               	incf	___awdiv@dividend+1,f
  1752  018B                     l1306:
  1753  018B  3001               	movlw	1
  1754  018C  00F7               	movwf	??___awdiv
  1755  018D  0877               	movf	??___awdiv,w
  1756  018E  06A1               	xorwf	___awdiv@sign,f
  1757  018F                     l1308:
  1758  018F  01A2               	clrf	___awdiv@quotient
  1759  0190  01A3               	clrf	___awdiv@quotient+1
  1760  0191                     l1310:
  1761  0191  0873               	movf	___awdiv@divisor,w
  1762  0192  0474               	iorwf	___awdiv@divisor+1,w
  1763  0193  1903               	btfsc	3,2
  1764  0194  2996               	goto	u741
  1765  0195  2997               	goto	u740
  1766  0196                     u741:
  1767  0196  29CE               	goto	l1330
  1768  0197                     u740:
  1769  0197                     l1312:
  1770  0197  01A0               	clrf	___awdiv@counter
  1771  0198  0AA0               	incf	___awdiv@counter,f
  1772  0199  29A5               	goto	l1318
  1773  019A                     l1314:
  1774  019A  3001               	movlw	1
  1775  019B                     u755:
  1776  019B  1003               	clrc
  1777  019C  0DF3               	rlf	___awdiv@divisor,f
  1778  019D  0DF4               	rlf	___awdiv@divisor+1,f
  1779  019E  3EFF               	addlw	-1
  1780  019F  1D03               	skipz
  1781  01A0  299B               	goto	u755
  1782  01A1                     l1316:
  1783  01A1  3001               	movlw	1
  1784  01A2  00F7               	movwf	??___awdiv
  1785  01A3  0877               	movf	??___awdiv,w
  1786  01A4  07A0               	addwf	___awdiv@counter,f
  1787  01A5                     l1318:
  1788  01A5  1FF4               	btfss	___awdiv@divisor+1,7
  1789  01A6  29A8               	goto	u761
  1790  01A7  29A9               	goto	u760
  1791  01A8                     u761:
  1792  01A8  299A               	goto	l1314
  1793  01A9                     u760:
  1794  01A9                     l1320:
  1795  01A9  3001               	movlw	1
  1796  01AA                     u775:
  1797  01AA  1003               	clrc
  1798  01AB  0DA2               	rlf	___awdiv@quotient,f
  1799  01AC  0DA3               	rlf	___awdiv@quotient+1,f
  1800  01AD  3EFF               	addlw	-1
  1801  01AE  1D03               	skipz
  1802  01AF  29AA               	goto	u775
  1803  01B0  0874               	movf	___awdiv@divisor+1,w
  1804  01B1  0276               	subwf	___awdiv@dividend+1,w
  1805  01B2  1D03               	skipz
  1806  01B3  29B6               	goto	u785
  1807  01B4  0873               	movf	___awdiv@divisor,w
  1808  01B5  0275               	subwf	___awdiv@dividend,w
  1809  01B6                     u785:
  1810  01B6  1C03               	skipc
  1811  01B7  29B9               	goto	u781
  1812  01B8  29BA               	goto	u780
  1813  01B9                     u781:
  1814  01B9  29C1               	goto	l1326
  1815  01BA                     u780:
  1816  01BA                     l1322:
  1817  01BA  0873               	movf	___awdiv@divisor,w
  1818  01BB  02F5               	subwf	___awdiv@dividend,f
  1819  01BC  0874               	movf	___awdiv@divisor+1,w
  1820  01BD  1C03               	skipc
  1821  01BE  03F6               	decf	___awdiv@dividend+1,f
  1822  01BF  02F6               	subwf	___awdiv@dividend+1,f
  1823  01C0                     l1324:
  1824  01C0  1422               	bsf	___awdiv@quotient,0
  1825  01C1                     l1326:
  1826  01C1  3001               	movlw	1
  1827  01C2                     u795:
  1828  01C2  1003               	clrc
  1829  01C3  0CF4               	rrf	___awdiv@divisor+1,f
  1830  01C4  0CF3               	rrf	___awdiv@divisor,f
  1831  01C5  3EFF               	addlw	-1
  1832  01C6  1D03               	skipz
  1833  01C7  29C2               	goto	u795
  1834  01C8                     l1328:
  1835  01C8  3001               	movlw	1
  1836  01C9  02A0               	subwf	___awdiv@counter,f
  1837  01CA  1D03               	btfss	3,2
  1838  01CB  29CD               	goto	u801
  1839  01CC  29CE               	goto	u800
  1840  01CD                     u801:
  1841  01CD  29A9               	goto	l1320
  1842  01CE                     u800:
  1843  01CE                     l1330:
  1844  01CE  0821               	movf	___awdiv@sign,w
  1845  01CF  1903               	btfsc	3,2
  1846  01D0  29D2               	goto	u811
  1847  01D1  29D3               	goto	u810
  1848  01D2                     u811:
  1849  01D2  29D8               	goto	l1334
  1850  01D3                     u810:
  1851  01D3                     l1332:
  1852  01D3  09A2               	comf	___awdiv@quotient,f
  1853  01D4  09A3               	comf	___awdiv@quotient+1,f
  1854  01D5  0AA2               	incf	___awdiv@quotient,f
  1855  01D6  1903               	skipnz
  1856  01D7  0AA3               	incf	___awdiv@quotient+1,f
  1857  01D8                     l1334:
  1858  01D8  0823               	movf	___awdiv@quotient+1,w
  1859  01D9  00F4               	movwf	?___awdiv+1
  1860  01DA  0822               	movf	___awdiv@quotient,w
  1861  01DB  00F3               	movwf	?___awdiv
  1862  01DC                     l413:
  1863  01DC  0008               	return
  1864  01DD                     __end_of___awdiv:
  1865                           
  1866                           	psect	text8
  1867  00DE                     __ptext8:	
  1868 ;; *************** function _R_RTC *****************
  1869 ;; Defined at:
  1870 ;;		line 57 in file "RTC.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      unsigned char 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1884 ;;      Params:         0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0
  1886 ;;      Temps:          0       2       0       0       0
  1887 ;;      Totals:         0       2       0       0       0
  1888 ;;Total ram usage:        2 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    3
  1891 ;; This function calls:
  1892 ;;		_I2C_Master_Read
  1893 ;;		_I2C_Master_RepeatedStart
  1894 ;;		_I2C_Master_Start
  1895 ;;		_I2C_Master_Stop
  1896 ;;		_I2C_Master_Write
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _R_RTC
  1904  00DE                     _R_RTC:
  1905  00DE                     l1456:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _R_RTC: [wreg+status,2+status,0+pclath+cstack]
  1908                           
  1909                           
  1910                           ;RTC.c: 59:     I2C_Master_Start();
  1911  00DE  120A  118A  2408  120A  118A  	fcall	_I2C_Master_Start
  1912                           
  1913                           ;RTC.c: 60:     I2C_Master_Write(0xD0);
  1914  00E3  30D0               	movlw	208
  1915  00E4  00F3               	movwf	I2C_Master_Write@d
  1916  00E5  3000               	movlw	0
  1917  00E6  00F4               	movwf	I2C_Master_Write@d+1
  1918  00E7  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1919                           
  1920                           ;RTC.c: 61:     I2C_Master_Write(0);
  1921  00EC  3000               	movlw	0
  1922  00ED  00F3               	movwf	I2C_Master_Write@d
  1923  00EE  00F4               	movwf	I2C_Master_Write@d+1
  1924  00EF  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1925                           
  1926                           ;RTC.c: 62:     I2C_Master_RepeatedStart();
  1927  00F4  120A  118A  2411  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1928                           
  1929                           ;RTC.c: 63:     I2C_Master_Write(0xD1);
  1930  00F9  30D1               	movlw	209
  1931  00FA  00F3               	movwf	I2C_Master_Write@d
  1932  00FB  3000               	movlw	0
  1933  00FC  00F4               	movwf	I2C_Master_Write@d+1
  1934  00FD  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1935                           
  1936                           ;RTC.c: 64:     second = I2C_Master_Read(1);
  1937  0102  3001               	movlw	1
  1938  0103  00F3               	movwf	I2C_Master_Read@a
  1939  0104  3000               	movlw	0
  1940  0105  00F4               	movwf	I2C_Master_Read@a+1
  1941  0106  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1942  010B  0873               	movf	?_I2C_Master_Read,w
  1943  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1944  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1945  010E  00A0               	movwf	??_R_RTC
  1946  010F  0820               	movf	??_R_RTC,w
  1947  0110  00BD               	movwf	_second
  1948                           
  1949                           ;RTC.c: 65:     minute = I2C_Master_Read(1);
  1950  0111  3001               	movlw	1
  1951  0112  00F3               	movwf	I2C_Master_Read@a
  1952  0113  3000               	movlw	0
  1953  0114  00F4               	movwf	I2C_Master_Read@a+1
  1954  0115  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1955  011A  0873               	movf	?_I2C_Master_Read,w
  1956  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1957  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1958  011D  00A0               	movwf	??_R_RTC
  1959  011E  0820               	movf	??_R_RTC,w
  1960  011F  00BC               	movwf	_minute
  1961                           
  1962                           ;RTC.c: 66:     hour = I2C_Master_Read(1);
  1963  0120  3001               	movlw	1
  1964  0121  00F3               	movwf	I2C_Master_Read@a
  1965  0122  3000               	movlw	0
  1966  0123  00F4               	movwf	I2C_Master_Read@a+1
  1967  0124  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1968  0129  0873               	movf	?_I2C_Master_Read,w
  1969  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1970  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1971  012C  00A0               	movwf	??_R_RTC
  1972  012D  0820               	movf	??_R_RTC,w
  1973  012E  00BB               	movwf	_hour
  1974                           
  1975                           ;RTC.c: 67:     I2C_Master_Read(1);
  1976  012F  3001               	movlw	1
  1977  0130  00F3               	movwf	I2C_Master_Read@a
  1978  0131  3000               	movlw	0
  1979  0132  00F4               	movwf	I2C_Master_Read@a+1
  1980  0133  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1981                           
  1982                           ;RTC.c: 68:     m_day = I2C_Master_Read(1);
  1983  0138  3001               	movlw	1
  1984  0139  00F3               	movwf	I2C_Master_Read@a
  1985  013A  3000               	movlw	0
  1986  013B  00F4               	movwf	I2C_Master_Read@a+1
  1987  013C  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1988  0141  0873               	movf	?_I2C_Master_Read,w
  1989  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0144  00A0               	movwf	??_R_RTC
  1992  0145  0820               	movf	??_R_RTC,w
  1993  0146  00BA               	movwf	_m_day
  1994                           
  1995                           ;RTC.c: 69:     month = I2C_Master_Read(1);
  1996  0147  3001               	movlw	1
  1997  0148  00F3               	movwf	I2C_Master_Read@a
  1998  0149  3000               	movlw	0
  1999  014A  00F4               	movwf	I2C_Master_Read@a+1
  2000  014B  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  2001  0150  0873               	movf	?_I2C_Master_Read,w
  2002  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0153  00A0               	movwf	??_R_RTC
  2005  0154  0820               	movf	??_R_RTC,w
  2006  0155  00B9               	movwf	_month
  2007                           
  2008                           ;RTC.c: 70:     year = I2C_Master_Read(0);
  2009  0156  3000               	movlw	0
  2010  0157  00F3               	movwf	I2C_Master_Read@a
  2011  0158  00F4               	movwf	I2C_Master_Read@a+1
  2012  0159  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  2013  015E  0873               	movf	?_I2C_Master_Read,w
  2014  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0161  00A0               	movwf	??_R_RTC
  2017  0162  0820               	movf	??_R_RTC,w
  2018  0163  00B8               	movwf	_year
  2019                           
  2020                           ;RTC.c: 71:     I2C_Master_Stop();
  2021  0164  120A  118A  23FF  120A  118A  	fcall	_I2C_Master_Stop
  2022  0169                     l1458:
  2023                           
  2024                           ;RTC.c: 72:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2025  0169  3082               	movlw	130
  2026  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2027  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2028  016C  00A1               	movwf	??_R_RTC+1
  2029  016D  30DD               	movlw	221
  2030  016E  00A0               	movwf	??_R_RTC
  2031  016F                     u957:
  2032  016F  0BA0               	decfsz	??_R_RTC,f
  2033  0170  296F               	goto	u957
  2034  0171  0BA1               	decfsz	??_R_RTC+1,f
  2035  0172  296F               	goto	u957
  2036  0173                     l174:
  2037  0173  0008               	return
  2038  0174                     __end_of_R_RTC:
  2039                           
  2040                           	psect	text9
  2041  03F5                     __ptext9:	
  2042 ;; *************** function _I2C_Master_Write *****************
  2043 ;; Defined at:
  2044 ;;		line 66 in file "I2C.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  d               2    3[COMMON] unsigned int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         2       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         2       0       0       0       0
  2062 ;;Total ram usage:        2 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    2
  2065 ;; This function calls:
  2066 ;;		_I2C_Master_Wait
  2067 ;; This function is called by:
  2068 ;;		_S_RTC
  2069 ;;		_R_RTC
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _I2C_Master_Write
  2075  03F5                     _I2C_Master_Write:
  2076  03F5                     l1160:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2079                           
  2080                           
  2081                           ;I2C.c: 67:     I2C_Master_Wait();
  2082  03F5  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2083  03FA                     l1162:
  2084                           
  2085                           ;I2C.c: 68:     SSPBUF = d;
  2086  03FA  0873               	movf	I2C_Master_Write@d,w
  2087  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2088  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2089  03FD  0093               	movwf	19	;volatile
  2090  03FE                     l128:
  2091  03FE  0008               	return
  2092  03FF                     __end_of_I2C_Master_Write:
  2093                           
  2094                           	psect	text10
  2095  03FF                     __ptext10:	
  2096 ;; *************** function _I2C_Master_Stop *****************
  2097 ;; Defined at:
  2098 ;;		line 56 in file "I2C.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		_I2C_Master_Wait
  2121 ;; This function is called by:
  2122 ;;		_S_RTC
  2123 ;;		_R_RTC
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _I2C_Master_Stop
  2129  03FF                     _I2C_Master_Stop:
  2130  03FF                     l1156:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2133                           
  2134                           
  2135                           ;I2C.c: 58:     I2C_Master_Wait();
  2136  03FF  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2137  0404                     l1158:
  2138                           
  2139                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  2140  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2142  0406  1511               	bsf	17,2	;volatile
  2143  0407                     l125:
  2144  0407  0008               	return
  2145  0408                     __end_of_I2C_Master_Stop:
  2146                           
  2147                           	psect	text11
  2148  0408                     __ptext11:	
  2149 ;; *************** function _I2C_Master_Start *****************
  2150 ;; Defined at:
  2151 ;;		line 39 in file "I2C.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         0       0       0       0       0
  2166 ;;      Locals:         0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0
  2168 ;;      Totals:         0       0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    2
  2172 ;; This function calls:
  2173 ;;		_I2C_Master_Wait
  2174 ;; This function is called by:
  2175 ;;		_S_RTC
  2176 ;;		_R_RTC
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _I2C_Master_Start
  2182  0408                     _I2C_Master_Start:
  2183  0408                     l1148:	
  2184                           ;incstack = 0
  2185                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2186                           
  2187                           
  2188                           ;I2C.c: 41:     I2C_Master_Wait();
  2189  0408  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2190  040D                     l1150:
  2191                           
  2192                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2193  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2194  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2195  040F  1411               	bsf	17,0	;volatile
  2196  0410                     l119:
  2197  0410  0008               	return
  2198  0411                     __end_of_I2C_Master_Start:
  2199                           
  2200                           	psect	text12
  2201  0411                     __ptext12:	
  2202 ;; *************** function _I2C_Master_RepeatedStart *****************
  2203 ;; Defined at:
  2204 ;;		line 47 in file "I2C.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          0       0       0       0       0
  2221 ;;      Totals:         0       0       0       0       0
  2222 ;;Total ram usage:        0 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    2
  2225 ;; This function calls:
  2226 ;;		_I2C_Master_Wait
  2227 ;; This function is called by:
  2228 ;;		_R_RTC
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function _I2C_Master_RepeatedStart
  2234  0411                     _I2C_Master_RepeatedStart:
  2235  0411                     l1152:	
  2236                           ;incstack = 0
  2237                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2238                           
  2239                           
  2240                           ;I2C.c: 49:     I2C_Master_Wait();
  2241  0411  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2242  0416                     l1154:
  2243                           
  2244                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2245  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0418  1491               	bsf	17,1	;volatile
  2248  0419                     l122:
  2249  0419  0008               	return
  2250  041A                     __end_of_I2C_Master_RepeatedStart:
  2251                           
  2252                           	psect	text13
  2253  03A8                     __ptext13:	
  2254 ;; *************** function _I2C_Master_Read *****************
  2255 ;; Defined at:
  2256 ;;		line 74 in file "I2C.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  a               2    3[COMMON] unsigned short 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  temp            2    7[COMMON] unsigned short 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2    3[COMMON] unsigned short 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         2       0       0       0       0
  2271 ;;      Locals:         2       0       0       0       0
  2272 ;;      Temps:          2       0       0       0       0
  2273 ;;      Totals:         6       0       0       0       0
  2274 ;;Total ram usage:        6 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    2
  2277 ;; This function calls:
  2278 ;;		_I2C_Master_Wait
  2279 ;; This function is called by:
  2280 ;;		_R_RTC
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _I2C_Master_Read
  2286  03A8                     _I2C_Master_Read:
  2287  03A8                     l1164:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2290                           
  2291                           
  2292                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2293  03A8  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2294  03AD                     l1166:
  2295                           
  2296                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2297  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2298  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2299  03AF  1591               	bsf	17,3	;volatile
  2300                           
  2301                           ;I2C.c: 79:     I2C_Master_Wait();
  2302  03B0  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2303  03B5                     l1168:
  2304                           
  2305                           ;I2C.c: 80:     temp = SSPBUF;
  2306  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2307  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2308  03B7  0813               	movf	19,w	;volatile
  2309  03B8  00F5               	movwf	??_I2C_Master_Read
  2310  03B9  01F6               	clrf	??_I2C_Master_Read+1
  2311  03BA  0875               	movf	??_I2C_Master_Read,w
  2312  03BB  00F7               	movwf	I2C_Master_Read@temp
  2313  03BC  0876               	movf	??_I2C_Master_Read+1,w
  2314  03BD  00F8               	movwf	I2C_Master_Read@temp+1
  2315  03BE                     l1170:
  2316                           
  2317                           ;I2C.c: 81:     I2C_Master_Wait();
  2318  03BE  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2319  03C3                     l1172:
  2320                           
  2321                           ;I2C.c: 82:     if(a == 1){
  2322  03C3  0373               	decf	I2C_Master_Read@a,w
  2323  03C4  0474               	iorwf	I2C_Master_Read@a+1,w
  2324  03C5  1D03               	btfss	3,2
  2325  03C6  2BC8               	goto	u621
  2326  03C7  2BC9               	goto	u620
  2327  03C8                     u621:
  2328  03C8  2BCD               	goto	l131
  2329  03C9                     u620:
  2330  03C9                     l1174:
  2331                           
  2332                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2333  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2334  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2335  03CB  1291               	bcf	17,5	;volatile
  2336                           
  2337                           ;I2C.c: 84:     }else{
  2338  03CC  2BD0               	goto	l132
  2339  03CD                     l131:
  2340                           
  2341                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2342  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2343  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2344  03CF  1691               	bsf	17,5	;volatile
  2345  03D0                     l132:	
  2346                           ;I2C.c: 86:     }
  2347                           
  2348                           
  2349                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2350  03D0  1611               	bsf	17,4	;volatile
  2351  03D1                     l1176:
  2352                           
  2353                           ;I2C.c: 88:     return temp;
  2354  03D1  0878               	movf	I2C_Master_Read@temp+1,w
  2355  03D2  00F4               	movwf	?_I2C_Master_Read+1
  2356  03D3  0877               	movf	I2C_Master_Read@temp,w
  2357  03D4  00F3               	movwf	?_I2C_Master_Read
  2358  03D5                     l133:
  2359  03D5  0008               	return
  2360  03D6                     __end_of_I2C_Master_Read:
  2361                           
  2362                           	psect	text14
  2363  03E8                     __ptext14:	
  2364 ;; *************** function _I2C_Master_Wait *****************
  2365 ;; Defined at:
  2366 ;;		line 32 in file "I2C.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_I2C_Master_Start
  2391 ;;		_I2C_Master_RepeatedStart
  2392 ;;		_I2C_Master_Stop
  2393 ;;		_I2C_Master_Write
  2394 ;;		_I2C_Master_Read
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _I2C_Master_Wait
  2400  03E8                     _I2C_Master_Wait:
  2401  03E8                     l1026:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2404                           
  2405  03E8                     l113:	
  2406                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2407                           
  2408  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2409  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2410  03EA  1914               	btfsc	20,2	;volatile
  2411  03EB  2BED               	goto	u331
  2412  03EC  2BEE               	goto	u330
  2413  03ED                     u331:
  2414  03ED  2BE8               	goto	l113
  2415  03EE                     u330:
  2416  03EE                     l1028:
  2417  03EE  0811               	movf	17,w	;volatile
  2418  03EF  391F               	andlw	31
  2419  03F0  1D03               	btfss	3,2
  2420  03F1  2BF3               	goto	u341
  2421  03F2  2BF4               	goto	u340
  2422  03F3                     u341:
  2423  03F3  2BE8               	goto	l113
  2424  03F4                     u340:
  2425  03F4                     l116:
  2426  03F4  0008               	return
  2427  03F5                     __end_of_I2C_Master_Wait:
  2428                           
  2429                           	psect	text15
  2430  03D6                     __ptext15:	
  2431 ;; *************** function _ISR *****************
  2432 ;; Defined at:
  2433 ;;		line 116 in file "main.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2447 ;;      Params:         0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0
  2449 ;;      Temps:          3       0       0       0       0
  2450 ;;      Totals:         3       0       0       0       0
  2451 ;;Total ram usage:        3 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		Interrupt level 1
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           
  2461                           ;psect for function _ISR
  2462  03D6                     _ISR:
  2463  03D6                     i1l1262:
  2464  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2465  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2466  03D8  1E8C               	btfss	12,5	;volatile
  2467  03D9  2BDB               	goto	u64_21
  2468  03DA  2BDC               	goto	u64_20
  2469  03DB                     u64_21:
  2470  03DB  2BE1               	goto	i1l81
  2471  03DC                     u64_20:
  2472  03DC                     i1l1264:
  2473  03DC  128C               	bcf	12,5	;volatile
  2474  03DD                     i1l1266:
  2475  03DD  081A               	movf	26,w	;volatile
  2476  03DE  00F0               	movwf	??_ISR
  2477  03DF  0870               	movf	??_ISR,w
  2478  03E0  00BE               	movwf	_lr
  2479  03E1                     i1l81:
  2480  03E1  0872               	movf	??_ISR+2,w
  2481  03E2  008A               	movwf	10
  2482  03E3  0E71               	swapf	??_ISR+1,w
  2483  03E4  0083               	movwf	3
  2484  03E5  0EFE               	swapf	btemp,f
  2485  03E6  0E7E               	swapf	btemp,w
  2486  03E7  0009               	retfie
  2487  03E8                     __end_of_ISR:
  2488  007E                     btemp	set	126	;btemp
  2489  007E                     wtemp0	set	126
  2490                           
  2491                           	psect	intentry
  2492  0004                     __pintentry:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _ISR: [wreg]
  2495                           
  2496  0004                     interrupt_function:
  2497  007E                     saved_w	set	btemp
  2498  0004  00FE               	movwf	btemp
  2499  0005  0E03               	swapf	3,w
  2500  0006  00F1               	movwf	??_ISR+1
  2501  0007  080A               	movf	10,w
  2502  0008  00F2               	movwf	??_ISR+2
  2503  0009  120A  118A  2BD6   	ljmp	_ISR
  2504                           
  2505                           	psect	config
  2506                           
  2507                           ;Config register CONFIG1 @ 0x2007
  2508                           ;	Oscillator Selection bits
  2509                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2510                           ;	Watchdog Timer Enable bit
  2511                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2512                           ;	Power-up Timer Enable bit
  2513                           ;	PWRTE = OFF, PWRT disabled
  2514                           ;	RE3/MCLR pin function select bit
  2515                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2516                           ;	Code Protection bit
  2517                           ;	CP = OFF, Program memory code protection is disabled
  2518                           ;	Data Code Protection bit
  2519                           ;	CPD = OFF, Data memory code protection is disabled
  2520                           ;	Brown Out Reset Selection bits
  2521                           ;	BOREN = OFF, BOR disabled
  2522                           ;	Internal External Switchover bit
  2523                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2524                           ;	Fail-Safe Clock Monitor Enabled bit
  2525                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2526                           ;	Low Voltage Programming Enable bit
  2527                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2528                           ;	In-Circuit Debugger Mode bit
  2529                           ;	DEBUG = 0x1, unprogrammed default
  2530  2007                     	org	8199
  2531  2007  20D4               	dw	8404
  2532                           
  2533                           ;Config register CONFIG2 @ 0x2008
  2534                           ;	Brown-out Reset Selection bit
  2535                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2536                           ;	Flash Program Memory Self Write Enable bits
  2537                           ;	WRT = OFF, Write protection off
  2538  2008                     	org	8200
  2539  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     24      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup
    _I2C_Master_Init->___lldiv
    _decimal_to_bcd->___awmod
    _R_RTC->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_S_RTC
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _S_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5818
                                             19 BANK0      5     5      0
                    _I2C_Master_Init
                              _R_RTC
                              _S_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     632
                                              9 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     632
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _S_RTC                                                9     4      5    3043
                                             10 BANK0      9     4      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1300
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _R_RTC                                                2     2      0    1511
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _R_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _S_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 20 12:48:56 2021

                                _i 007A                                 l75 02F0  
                               l69 0321                       ___awdiv@sign 0021  
                               _lr 003E                     _decimal_to_bcd 0376  
                              l110 0375                                l113 03E8  
                              l122 0419                                l131 03CD  
                              l116 03F4                                l132 03D0  
                              l133 03D5                                l125 0407  
                              l119 0410                                l128 03FE  
                              l171 00DD                                l413 01DC  
                              l174 0173                                l168 03A7  
                              l426 029D                                l296 0244  
                              _GIE 005F                                u330 03EE  
                              u331 03ED                                u340 03F4  
                              u341 03F3                                u620 03C9  
                              _ISR 03D6                                u621 03C8  
                              u710 023C                                u711 023B  
                              u800 01CE                                u720 017B  
                              u801 01CD                                u721 017A  
                              u705 022E                                u810 01D3  
                              u730 0186                                u650 01EF  
                              u811 01D2                                u731 0185  
                              u651 01EE                                u740 0197  
                              u900 0294                                u820 024A  
                              u741 0196                                u901 0293  
                              u821 0249                                u830 0255  
                              u670 0203                                u910 0353  
                              u831 0254                                u671 0202  
                              u760 01A9                                u840 0260  
                              u761 01A8                                u841 025F  
                              u665 01F4                                u690 021E  
                              u755 019B                                u691 021D  
                              u915 034E                                u780 01BA  
                              u860 0272                                u781 01B9  
                              u861 0271                                u925 038E  
                              u685 0205                                u870 027C  
                              u775 01AA                                u871 027B  
                              u855 0264                                u695 021A  
                              u785 01B6                                u937 0330  
                              u890 028F                                u795 01C2  
                              u891 028E                                u875 0278  
                              u947 00D6                                u957 016F  
                              u885 0283                       ___awmod@sign 0079  
                             ?_ISR 0070                               l1026 03E8  
                             l1028 03EE                               l1300 0180  
                             l1150 040D                               l1310 0191  
                             l1302 0182                               l1152 0411  
                             l1160 03F5                               l1320 01A9  
                             l1312 0197                               l1304 0186  
                             l1400 02A7                               l1170 03BE  
                             l1154 0416                               l1162 03FA  
                             l1322 01BA                               l1314 019A  
                             l1330 01CE                               l1306 018B  
                             l1410 02B1                               l1402 02A8  
                             l1172 03C3                               l1164 03A8  
                             l1148 0408                               l1156 03FF  
                             l1332 01D3                               l1324 01C0  
                             l1316 01A1                               l1308 018F  
                             l1340 0246                               l1420 02B6  
                             l1412 02B2                               l1404 02A9  
                             l1174 03C9                               l1166 03AD  
                             l1158 0404                               l1334 01D8  
                             l1326 01C1                               l1318 01A5  
                             l1350 025A                               l1342 024A  
                             l1270 01DD                               l1430 02C1  
                             l1422 02B7                               l1414 02B3  
                             l1406 02AA                               l1176 03D1  
                             l1168 03B5                               l1328 01C8  
                             l1360 0272                               l1352 0260  
                             l1344 024F                               l1280 020C  
                             l1272 01EF                               l1440 02DC  
                             l1432 02C3                               l1424 02B8  
                             l1416 02B4                               l1408 02AB  
                             l1370 0294                               l1362 027C  
                             l1354 0263                               l1346 0251  
                             l1338 0245                               l1450 001A  
                             l1282 021E                               l1274 01F2  
                             l1290 023C                               l1442 02E0  
                             l1434 02C5                               l1426 02BB  
                             l1418 02B5                               l1372 0299  
                             l1364 0282                               l1356 026A  
                             l1348 0255                               l1452 00CE  
                             l1284 022C                               l1276 01FF  
                             l1380 0343                               l1444 02E4  
                             l1436 02C9                               l1428 02BE  
                             l1294 0174                               l1366 0289  
                             l1358 026E                               l1286 022D  
                             l1278 0203                               l1382 0372  
                             l1446 02E8                               l1438 02D6  
                             l1462 02F1                               l1456 00DE  
                             l1296 0177                               l1368 028F  
                             l1288 0236                               l1384 0373  
                             l1376 033C                               l1448 02EC  
                             l1392 029E                               l1464 0326  
                             l1458 0169                               l1298 017B  
                             l1386 0374                               l1378 0340  
                             l1394 02A1                               l1466 032A  
                             l1388 0379                               l1396 02A3  
                             l1468 0334                               l1398 02A4  
                             _PEIE 005E                               i1l81 03E1  
 __end_of_I2C_Master_RepeatedStart 041A                               _main 02F1  
                             _hour 003B                               _year 0038  
                             btemp 007E                               start 000C  
                            ??_ISR 0070             __end_of_decimal_to_bcd 03A8  
                 ?_I2C_Master_Init 0028                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 01DD  
                  __end_of___awmod 029E                    __end_of___lldiv 0245  
                  ___awdiv@divisor 0073                    ___awdiv@counter 0020  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u64_20 03DC                              u64_21 03DB  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _TXSTA 0098                              _R_RTC 00DE  
                            _S_RTC 0017                              _m_day 003A  
                            _month 0039                              _setup 029E  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 033C                    ?_decimal_to_bcd 0070  
                           ??_main 0033                             ?_R_RTC 0070  
                           ?_S_RTC 002A                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             i1l1262 03D6  
                           i1l1264 03DC                             i1l1266 03DD  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0411                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                 ___awdiv@quotient 0022                             _minute 003C  
                           _second 003D                    ___awmod@divisor 0073  
                  ___awmod@counter 0078                             saved_w 007E  
          __end_of__initialization 0013                      __end_of_R_RTC 0174  
                    __end_of_S_RTC 00DE                     __pcstackCOMMON 0070  
                    __end_of_setup 02F1                            ??_R_RTC 0020  
                          ??_S_RTC 002F                            ??_setup 0079  
                       __pbssBANK0 003E                         __pmaintext 02F1  
                       __pintentry 0004                            _SSPCON2 0091  
                          _SSPSTAT 0094                   ??_decimal_to_bcd 0024  
                          ___awdiv 0174                            ___awmod 0245  
                          ___lldiv 01DD                            __ptext1 029E  
                          __ptext2 033C                            __ptext3 01DD  
                          __ptext4 0017                            __ptext5 0376  
                          __ptext6 0245                            __ptext7 0174  
                          __ptext8 00DE                            __ptext9 03F5  
                     __size_of_ISR 0012                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
             end_of_initialization 0013         ??_I2C_Master_RepeatedStart 0073  
                        S_RTC@hour 002B                          S_RTC@year 002E  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0020                    ___lldiv@counter 0078  
                 I2C_Master_Init@c 0028                   I2C_Master_Read@a 0073  
                        _TRISCbits 0087                        _BAUDCTLbits 0187  
              start_initialization 000F                        __end_of_ISR 03E8  
                ??_I2C_Master_Init 002C                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                      __pbssCOMMON 007A                          ___latbits 0002  
                    __pcstackBANK0 0020                          __pnvBANK0 0038  
                 _I2C_Master_Start 0408                   _I2C_Master_Write 03F5  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 0020                     __size_of_R_RTC 0096  
                   __size_of_S_RTC 00C7                     __size_of_setup 0053  
                interrupt_function 0004                           _PIE1bits 008C  
                         _PIR1bits 000C                I2C_Master_Read@temp 0077  
                      S_RTC@minute 002A                        S_RTC@second 0032  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068            __size_of_decimal_to_bcd 0032  
                  _I2C_Master_Init 033C                    _I2C_Master_Read 03A8  
                  _I2C_Master_Wait 03E8                    _I2C_Master_Stop 03FF  
                         __ptext10 03FF                           __ptext11 0408  
                         __ptext12 0411                           __ptext13 03A8  
                         __ptext14 03E8                           __ptext15 03D6  
                    __size_of_main 004B               decimal_to_bcd@number 0029  
         __end_of_I2C_Master_Start 0411                         S_RTC@m_day 002C  
         __end_of_I2C_Master_Write 03FF                         _INTCONbits 000B  
                       S_RTC@month 002D                           intlevel1 0000  
                 ___lldiv@dividend 0024                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0376            __end_of_I2C_Master_Read 03D6  
          __end_of_I2C_Master_Wait 03F5            __end_of_I2C_Master_Stop 0408  
                 ___lldiv@quotient 0074                  I2C_Master_Write@d 0073  
                      _SSPCON2bits 0091  
