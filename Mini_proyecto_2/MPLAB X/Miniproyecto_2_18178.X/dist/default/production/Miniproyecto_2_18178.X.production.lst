

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 23:15:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	nvBANK0
   378  0038                     __pnvBANK0:
   379  0038                     _year:
   380  0038                     	ds	1
   381  0039                     _month:
   382  0039                     	ds	1
   383  003A                     _m_day:
   384  003A                     	ds	1
   385  003B                     _hour:
   386  003B                     	ds	1
   387  003C                     _minute:
   388  003C                     	ds	1
   389  003D                     _second:
   390  003D                     	ds	1
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCON	set	20
   393  001A                     _RCREG	set	26
   394  0018                     _RCSTA	set	24
   395  000C                     _PIR1bits	set	12
   396  000B                     _INTCONbits	set	11
   397  0009                     _PORTE	set	9
   398  0007                     _PORTC	set	7
   399  0006                     _PORTB	set	6
   400  0005                     _PORTA	set	5
   401  0008                     _PORTD	set	8
   402  0019                     _TXREG	set	25
   403  0063                     _SSPIF	set	99
   404  005E                     _PEIE	set	94
   405  005F                     _GIE	set	95
   406  0091                     _SSPCON2bits	set	145
   407  0087                     _TRISCbits	set	135
   408  0094                     _SSPSTAT	set	148
   409  0093                     _SSPADD	set	147
   410  0091                     _SSPCON2	set	145
   411  0098                     _TXSTA	set	152
   412  0099                     _SPBRG	set	153
   413  009A                     _SPBRGH	set	154
   414  008C                     _PIE1bits	set	140
   415  008F                     _OSCCONbits	set	143
   416  0089                     _TRISE	set	137
   417  0087                     _TRISC	set	135
   418  0088                     _TRISD	set	136
   419  0463                     _SSPIE	set	1123
   420  043C                     _TRISC4	set	1084
   421  043B                     _TRISC3	set	1083
   422  0187                     _BAUDCTLbits	set	391
   423                           
   424                           	psect	cinit
   425  000F                     start_initialization:	
   426                           ; #config settings
   427                           
   428  000F                     __initialization:
   429                           
   430                           ; Clear objects allocated to COMMON
   431  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   432                           
   433                           ; Clear objects allocated to BANK0
   434  0010  1283               	bcf	3,5	;RP0=0, select bank0
   435  0011  1303               	bcf	3,6	;RP1=0, select bank0
   436  0012  01BE               	clrf	__pbssBANK0& (0+127)
   437  0013                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  0013                     __end_of__initialization:
   441  0013  0183               	clrf	3
   442  0014  120A  118A  2AF1   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  007A                     __pbssCOMMON:
   446  007A                     _i:
   447  007A                     	ds	1
   448                           
   449                           	psect	bssBANK0
   450  003E                     __pbssBANK0:
   451  003E                     _lr:
   452  003E                     	ds	1
   453                           
   454                           	psect	cstackCOMMON
   455  0070                     __pcstackCOMMON:
   456  0070                     ?_setup:
   457  0070                     ?_R_RTC:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_main:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_ISR:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ??_ISR:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_I2C_Master_Wait:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_I2C_Master_Start:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_I2C_Master_RepeatedStart:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_I2C_Master_Stop:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_decimal_to_bcd:	
   482                           ; 1 bytes @ 0x0
   483                           
   484                           
   485                           ; 1 bytes @ 0x0
   486  0070                     	ds	3
   487  0073                     ??_I2C_Master_Wait:
   488  0073                     ??_I2C_Master_Start:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     ??_I2C_Master_RepeatedStart:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     ??_I2C_Master_Stop:	
   495                           ; 1 bytes @ 0x3
   496                           
   497  0073                     ?_I2C_Master_Write:	
   498                           ; 1 bytes @ 0x3
   499                           
   500  0073                     ??___lldiv:	
   501                           ; 1 bytes @ 0x3
   502                           
   503  0073                     ?_I2C_Master_Read:	
   504                           ; 1 bytes @ 0x3
   505                           
   506  0073                     ?___awdiv:	
   507                           ; 2 bytes @ 0x3
   508                           
   509  0073                     ?___awmod:	
   510                           ; 2 bytes @ 0x3
   511                           
   512  0073                     I2C_Master_Write@d:	
   513                           ; 2 bytes @ 0x3
   514                           
   515  0073                     I2C_Master_Read@a:	
   516                           ; 2 bytes @ 0x3
   517                           
   518  0073                     ___awdiv@divisor:	
   519                           ; 2 bytes @ 0x3
   520                           
   521  0073                     ___awmod@divisor:	
   522                           ; 2 bytes @ 0x3
   523                           
   524                           
   525                           ; 2 bytes @ 0x3
   526  0073                     	ds	1
   527  0074                     ___lldiv@quotient:
   528                           
   529                           ; 4 bytes @ 0x4
   530  0074                     	ds	1
   531  0075                     ??_I2C_Master_Write:
   532  0075                     ??_I2C_Master_Read:	
   533                           ; 1 bytes @ 0x5
   534                           
   535  0075                     ___awdiv@dividend:	
   536                           ; 1 bytes @ 0x5
   537                           
   538  0075                     ___awmod@dividend:	
   539                           ; 2 bytes @ 0x5
   540                           
   541                           
   542                           ; 2 bytes @ 0x5
   543  0075                     	ds	2
   544  0077                     ??___awdiv:
   545  0077                     ??___awmod:	
   546                           ; 1 bytes @ 0x7
   547                           
   548  0077                     I2C_Master_Read@temp:	
   549                           ; 1 bytes @ 0x7
   550                           
   551                           
   552                           ; 2 bytes @ 0x7
   553  0077                     	ds	1
   554  0078                     ___lldiv@counter:
   555  0078                     ___awmod@counter:	
   556                           ; 1 bytes @ 0x8
   557                           
   558                           
   559                           ; 1 bytes @ 0x8
   560  0078                     	ds	1
   561  0079                     ??_setup:
   562  0079                     ___awmod@sign:	
   563                           ; 1 bytes @ 0x9
   564                           
   565                           
   566                           ; 1 bytes @ 0x9
   567  0079                     	ds	1
   568                           
   569                           	psect	cstackBANK0
   570  0020                     __pcstackBANK0:
   571  0020                     ??_R_RTC:
   572  0020                     ?___lldiv:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0020                     ___awdiv@counter:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0020                     ___lldiv@divisor:	
   579                           ; 1 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583  0020                     	ds	1
   584  0021                     ___awdiv@sign:
   585                           
   586                           ; 1 bytes @ 0x1
   587  0021                     	ds	1
   588  0022                     ___awdiv@quotient:
   589                           
   590                           ; 2 bytes @ 0x2
   591  0022                     	ds	2
   592  0024                     ??_decimal_to_bcd:
   593  0024                     ___lldiv@dividend:	
   594                           ; 1 bytes @ 0x4
   595                           
   596                           
   597                           ; 4 bytes @ 0x4
   598  0024                     	ds	4
   599  0028                     ?_I2C_Master_Init:
   600  0028                     I2C_Master_Init@c:	
   601                           ; 1 bytes @ 0x8
   602                           
   603                           
   604                           ; 4 bytes @ 0x8
   605  0028                     	ds	1
   606  0029                     decimal_to_bcd@number:
   607                           
   608                           ; 1 bytes @ 0x9
   609  0029                     	ds	1
   610  002A                     ?_S_RTC:
   611  002A                     S_RTC@minute:	
   612                           ; 1 bytes @ 0xA
   613                           
   614                           
   615                           ; 1 bytes @ 0xA
   616  002A                     	ds	1
   617  002B                     S_RTC@hour:
   618                           
   619                           ; 1 bytes @ 0xB
   620  002B                     	ds	1
   621  002C                     ??_I2C_Master_Init:
   622  002C                     S_RTC@m_day:	
   623                           ; 1 bytes @ 0xC
   624                           
   625                           
   626                           ; 1 bytes @ 0xC
   627  002C                     	ds	1
   628  002D                     S_RTC@month:
   629                           
   630                           ; 1 bytes @ 0xD
   631  002D                     	ds	1
   632  002E                     S_RTC@year:
   633                           
   634                           ; 1 bytes @ 0xE
   635  002E                     	ds	1
   636  002F                     ??_S_RTC:
   637                           
   638                           ; 1 bytes @ 0xF
   639  002F                     	ds	3
   640  0032                     S_RTC@second:
   641                           
   642                           ; 1 bytes @ 0x12
   643  0032                     	ds	1
   644  0033                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x13
   647  0033                     	ds	5
   648                           
   649                           	psect	maintext
   650  02F1                     __pmaintext:	
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 61 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : B00/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       5       0       0       0
   673 ;;      Totals:         0       5       0       0       0
   674 ;;Total ram usage:        5 bytes
   675 ;; Hardware stack levels required when called:    4
   676 ;; This function calls:
   677 ;;		_I2C_Master_Init
   678 ;;		_R_RTC
   679 ;;		_S_RTC
   680 ;;		_setup
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _main
   688  02F1                     _main:
   689  02F1                     l1462:	
   690                           ;incstack = 0
   691                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   692                           
   693                           
   694                           ;main.c: 62:     year = 99;
   695  02F1  120A  118A  229E  120A  118A  	fcall	_setup
   696                           
   697                           ;main.c: 63: }
   698  02F6  3000               	movlw	0
   699  02F7  1283               	bcf	3,5	;RP0=0, select bank0
   700  02F8  1303               	bcf	3,6	;RP1=0, select bank0
   701  02F9  00AB               	movwf	I2C_Master_Init@c+3
   702  02FA  3001               	movlw	1
   703  02FB  00AA               	movwf	I2C_Master_Init@c+2
   704  02FC  3086               	movlw	134
   705  02FD  00A9               	movwf	I2C_Master_Init@c+1
   706  02FE  30A0               	movlw	160
   707  02FF  00A8               	movwf	I2C_Master_Init@c
   708  0300  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Init
   709                           
   710                           ;main.c: 64: 
   711  0305  1283               	bcf	3,5	;RP0=0, select bank0
   712  0306  1303               	bcf	3,6	;RP1=0, select bank0
   713  0307  083C               	movf	_minute,w
   714  0308  00B3               	movwf	??_main
   715  0309  0833               	movf	??_main,w
   716  030A  00AA               	movwf	S_RTC@minute
   717  030B  083B               	movf	_hour,w
   718  030C  00B4               	movwf	??_main+1
   719  030D  0834               	movf	??_main+1,w
   720  030E  00AB               	movwf	S_RTC@hour
   721  030F  083A               	movf	_m_day,w
   722  0310  00B5               	movwf	??_main+2
   723  0311  0835               	movf	??_main+2,w
   724  0312  00AC               	movwf	S_RTC@m_day
   725  0313  0839               	movf	_month,w
   726  0314  00B6               	movwf	??_main+3
   727  0315  0836               	movf	??_main+3,w
   728  0316  00AD               	movwf	S_RTC@month
   729  0317  0838               	movf	_year,w
   730  0318  00B7               	movwf	??_main+4
   731  0319  0837               	movf	??_main+4,w
   732  031A  00AE               	movwf	S_RTC@year
   733  031B  083D               	movf	_second,w
   734  031C  120A  118A  2017  120A  118A  	fcall	_S_RTC
   735  0321                     l69:	
   736                           ;main.c: 69:         return;
   737                           
   738  0321  120A  118A  20DE  120A  118A  	fcall	_R_RTC
   739  0326                     l1464:
   740  0326  1283               	bcf	3,5	;RP0=0, select bank0
   741  0327  1303               	bcf	3,6	;RP1=0, select bank0
   742  0328  083C               	movf	_minute,w
   743  0329  0099               	movwf	25	;volatile
   744  032A                     l1466:
   745  032A  3034               	movlw	52
   746  032B  1283               	bcf	3,5	;RP0=0, select bank0
   747  032C  1303               	bcf	3,6	;RP1=0, select bank0
   748  032D  00B4               	movwf	??_main+1
   749  032E  30F1               	movlw	241
   750  032F  00B3               	movwf	??_main
   751  0330                     u937:
   752  0330  0BB3               	decfsz	??_main,f
   753  0331  2B30               	goto	u937
   754  0332  0BB4               	decfsz	??_main+1,f
   755  0333  2B30               	goto	u937
   756  0334                     l1468:
   757  0334  1283               	bcf	3,5	;RP0=0, select bank0
   758  0335  1303               	bcf	3,6	;RP1=0, select bank0
   759  0336  083E               	movf	_lr,w
   760  0337  0088               	movwf	8	;volatile
   761  0338  2B21               	goto	l69
   762  0339  120A  118A  280C   	ljmp	start
   763  033C                     __end_of_main:
   764                           
   765                           	psect	text1
   766  029E                     __ptext1:	
   767 ;; *************** function _setup *****************
   768 ;; Defined at:
   769 ;;		line 85 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          1       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_I2C_Master_Init
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _setup
   799  029E                     _setup:
   800  029E                     l1392:	
   801                           ;incstack = 0
   802                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   803                           
   804  029E  1683               	bsf	3,5	;RP0=1, select bank1
   805  029F  1303               	bcf	3,6	;RP1=0, select bank1
   806  02A0  0188               	clrf	8	;volatile
   807  02A1                     l1394:
   808  02A1  30D8               	movlw	216
   809  02A2  0087               	movwf	7	;volatile
   810  02A3                     l1396:
   811  02A3  0189               	clrf	9	;volatile
   812  02A4                     l1398:
   813  02A4  1283               	bcf	3,5	;RP0=0, select bank0
   814  02A5  1303               	bcf	3,6	;RP1=0, select bank0
   815  02A6  0185               	clrf	5	;volatile
   816  02A7                     l1400:
   817  02A7  0186               	clrf	6	;volatile
   818  02A8                     l1402:
   819  02A8  0187               	clrf	7	;volatile
   820  02A9                     l1404:
   821  02A9  0188               	clrf	8	;volatile
   822  02AA                     l1406:
   823  02AA  0189               	clrf	9	;volatile
   824  02AB                     l1408:
   825  02AB  1683               	bsf	3,5	;RP0=1, select bank1
   826  02AC  1303               	bcf	3,6	;RP1=0, select bank1
   827  02AD  080F               	movf	15,w	;volatile
   828  02AE  398F               	andlw	-113
   829  02AF  3860               	iorlw	96
   830  02B0  008F               	movwf	15	;volatile
   831  02B1                     l1410:
   832  02B1  118F               	bcf	15,3	;volatile
   833  02B2                     l1412:
   834  02B2  110F               	bcf	15,2	;volatile
   835  02B3                     l1414:
   836  02B3  108F               	bcf	15,1	;volatile
   837  02B4                     l1416:
   838  02B4  140F               	bsf	15,0	;volatile
   839  02B5                     l1418:
   840  02B5  178B               	bsf	11,7	;volatile
   841  02B6                     l1420:
   842  02B6  170B               	bsf	11,6	;volatile
   843  02B7                     l1422:
   844  02B7  168C               	bsf	12,5	;volatile
   845  02B8                     l1424:
   846  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   847  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   848  02BA  128C               	bcf	12,5	;volatile
   849  02BB                     l1426:
   850  02BB  1683               	bsf	3,5	;RP0=1, select bank3
   851  02BC  1703               	bsf	3,6	;RP1=1, select bank3
   852  02BD  1187               	bcf	7,3	;volatile
   853  02BE                     l1428:
   854  02BE  1683               	bsf	3,5	;RP0=1, select bank1
   855  02BF  1303               	bcf	3,6	;RP1=0, select bank1
   856  02C0  019A               	clrf	26	;volatile
   857  02C1                     l1430:
   858  02C1  3019               	movlw	25
   859  02C2  0099               	movwf	25	;volatile
   860  02C3                     l1432:
   861  02C3  3024               	movlw	36
   862  02C4  0098               	movwf	24	;volatile
   863  02C5                     l1434:
   864  02C5  3090               	movlw	144
   865  02C6  1283               	bcf	3,5	;RP0=0, select bank0
   866  02C7  1303               	bcf	3,6	;RP1=0, select bank0
   867  02C8  0098               	movwf	24	;volatile
   868  02C9                     l1436:
   869  02C9  3000               	movlw	0
   870  02CA  00AB               	movwf	I2C_Master_Init@c+3
   871  02CB  3001               	movlw	1
   872  02CC  00AA               	movwf	I2C_Master_Init@c+2
   873  02CD  3086               	movlw	134
   874  02CE  00A9               	movwf	I2C_Master_Init@c+1
   875  02CF  30A0               	movlw	160
   876  02D0  00A8               	movwf	I2C_Master_Init@c
   877  02D1  120A  118A  233C  120A  118A  	fcall	_I2C_Master_Init
   878  02D6                     l1438:
   879  02D6  302E               	movlw	46
   880  02D7  00F9               	movwf	??_setup
   881  02D8  0879               	movf	??_setup,w
   882  02D9  1283               	bcf	3,5	;RP0=0, select bank0
   883  02DA  1303               	bcf	3,6	;RP1=0, select bank0
   884  02DB  00BD               	movwf	_second
   885  02DC                     l1440:
   886  02DC  301E               	movlw	30
   887  02DD  00F9               	movwf	??_setup
   888  02DE  0879               	movf	??_setup,w
   889  02DF  00BC               	movwf	_minute
   890  02E0                     l1442:
   891  02E0  3006               	movlw	6
   892  02E1  00F9               	movwf	??_setup
   893  02E2  0879               	movf	??_setup,w
   894  02E3  00BB               	movwf	_hour
   895  02E4                     l1444:
   896  02E4  3017               	movlw	23
   897  02E5  00F9               	movwf	??_setup
   898  02E6  0879               	movf	??_setup,w
   899  02E7  00BA               	movwf	_m_day
   900  02E8                     l1446:
   901  02E8  3007               	movlw	7
   902  02E9  00F9               	movwf	??_setup
   903  02EA  0879               	movf	??_setup,w
   904  02EB  00B9               	movwf	_month
   905  02EC                     l1448:
   906  02EC  3063               	movlw	99
   907  02ED  00F9               	movwf	??_setup
   908  02EE  0879               	movf	??_setup,w
   909  02EF  00B8               	movwf	_year
   910  02F0                     l75:
   911  02F0  0008               	return
   912  02F1                     __end_of_setup:
   913                           
   914                           	psect	text2
   915  033C                     __ptext2:	
   916 ;; *************** function _I2C_Master_Init *****************
   917 ;; Defined at:
   918 ;;		line 16 in file "I2C.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  c               4    8[BANK0 ] const unsigned long 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       4       0       0       0
   933 ;;      Locals:         0       0       0       0       0
   934 ;;      Temps:          0       4       0       0       0
   935 ;;      Totals:         0       8       0       0       0
   936 ;;Total ram usage:        8 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		___lldiv
   941 ;; This function is called by:
   942 ;;		_main
   943 ;;		_setup
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _I2C_Master_Init
   949  033C                     _I2C_Master_Init:
   950  033C                     l1376:	
   951                           ;incstack = 0
   952                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
   953                           
   954                           
   955                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
   956  033C  3028               	movlw	40
   957  033D  1283               	bcf	3,5	;RP0=0, select bank0
   958  033E  1303               	bcf	3,6	;RP1=0, select bank0
   959  033F  0094               	movwf	20	;volatile
   960  0340                     l1378:
   961                           
   962                           ;I2C.c: 19:     SSPCON2 = 0;
   963  0340  1683               	bsf	3,5	;RP0=1, select bank1
   964  0341  1303               	bcf	3,6	;RP1=0, select bank1
   965  0342  0191               	clrf	17	;volatile
   966  0343                     l1380:
   967                           
   968                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
   969  0343  1283               	bcf	3,5	;RP0=0, select bank0
   970  0344  1303               	bcf	3,6	;RP1=0, select bank0
   971  0345  0828               	movf	I2C_Master_Init@c,w
   972  0346  00AC               	movwf	??_I2C_Master_Init
   973  0347  0829               	movf	I2C_Master_Init@c+1,w
   974  0348  00AD               	movwf	??_I2C_Master_Init+1
   975  0349  082A               	movf	I2C_Master_Init@c+2,w
   976  034A  00AE               	movwf	??_I2C_Master_Init+2
   977  034B  082B               	movf	I2C_Master_Init@c+3,w
   978  034C  00AF               	movwf	??_I2C_Master_Init+3
   979  034D  3002               	movlw	2
   980  034E                     u915:
   981  034E  1003               	clrc
   982  034F  0DAC               	rlf	??_I2C_Master_Init,f
   983  0350  0DAD               	rlf	??_I2C_Master_Init+1,f
   984  0351  0DAE               	rlf	??_I2C_Master_Init+2,f
   985  0352  0DAF               	rlf	??_I2C_Master_Init+3,f
   986  0353                     u910:
   987  0353  3EFF               	addlw	-1
   988  0354  1D03               	skipz
   989  0355  2B4E               	goto	u915
   990  0356  082F               	movf	??_I2C_Master_Init+3,w
   991  0357  00A3               	movwf	___lldiv@divisor+3
   992  0358  082E               	movf	??_I2C_Master_Init+2,w
   993  0359  00A2               	movwf	___lldiv@divisor+2
   994  035A  082D               	movf	??_I2C_Master_Init+1,w
   995  035B  00A1               	movwf	___lldiv@divisor+1
   996  035C  082C               	movf	??_I2C_Master_Init,w
   997  035D  00A0               	movwf	___lldiv@divisor
   998  035E  3000               	movlw	0
   999  035F  00A7               	movwf	___lldiv@dividend+3
  1000  0360  307A               	movlw	122
  1001  0361  00A6               	movwf	___lldiv@dividend+2
  1002  0362  3012               	movlw	18
  1003  0363  00A5               	movwf	___lldiv@dividend+1
  1004  0364  3000               	movlw	0
  1005  0365  00A4               	movwf	___lldiv@dividend
  1006  0366  120A  118A  21DD  120A  118A  	fcall	___lldiv
  1007  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1008  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1009  036D  0820               	movf	?___lldiv,w
  1010  036E  3EFF               	addlw	255
  1011  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1012  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1013  0371  0093               	movwf	19	;volatile
  1014  0372                     l1382:
  1015                           
  1016                           ;I2C.c: 21:     SSPSTAT = 0;
  1017  0372  0194               	clrf	20	;volatile
  1018  0373                     l1384:
  1019                           
  1020                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1021  0373  1587               	bsf	7,3	;volatile
  1022  0374                     l1386:
  1023                           
  1024                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1025  0374  1607               	bsf	7,4	;volatile
  1026  0375                     l110:
  1027  0375  0008               	return
  1028  0376                     __end_of_I2C_Master_Init:
  1029                           
  1030                           	psect	text3
  1031  01DD                     __ptext3:	
  1032 ;; *************** function ___lldiv *****************
  1033 ;; Defined at:
  1034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  divisor         4    0[BANK0 ] unsigned long 
  1037 ;;  dividend        4    4[BANK0 ] unsigned long 
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  quotient        4    4[COMMON] unsigned long 
  1040 ;;  counter         1    8[COMMON] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  4    0[BANK0 ] unsigned long 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       8       0       0       0
  1051 ;;      Locals:         5       0       0       0       0
  1052 ;;      Temps:          1       0       0       0       0
  1053 ;;      Totals:         6       8       0       0       0
  1054 ;;Total ram usage:       14 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_I2C_Master_Init
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function ___lldiv
  1066  01DD                     ___lldiv:
  1067  01DD                     l1270:	
  1068                           ;incstack = 0
  1069                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1070                           
  1071  01DD  3000               	movlw	0
  1072  01DE  00F7               	movwf	___lldiv@quotient+3
  1073  01DF  3000               	movlw	0
  1074  01E0  00F6               	movwf	___lldiv@quotient+2
  1075  01E1  3000               	movlw	0
  1076  01E2  00F5               	movwf	___lldiv@quotient+1
  1077  01E3  3000               	movlw	0
  1078  01E4  00F4               	movwf	___lldiv@quotient
  1079  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1080  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1081  01E7  0823               	movf	___lldiv@divisor+3,w
  1082  01E8  0422               	iorwf	___lldiv@divisor+2,w
  1083  01E9  0421               	iorwf	___lldiv@divisor+1,w
  1084  01EA  0420               	iorwf	___lldiv@divisor,w
  1085  01EB  1903               	skipnz
  1086  01EC  29EE               	goto	u651
  1087  01ED  29EF               	goto	u650
  1088  01EE                     u651:
  1089  01EE  2A3C               	goto	l1290
  1090  01EF                     u650:
  1091  01EF                     l1272:
  1092  01EF  01F8               	clrf	___lldiv@counter
  1093  01F0  0AF8               	incf	___lldiv@counter,f
  1094  01F1  29FF               	goto	l1276
  1095  01F2                     l1274:
  1096  01F2  3001               	movlw	1
  1097  01F3  00F3               	movwf	??___lldiv
  1098  01F4                     u665:
  1099  01F4  1003               	clrc
  1100  01F5  0DA0               	rlf	___lldiv@divisor,f
  1101  01F6  0DA1               	rlf	___lldiv@divisor+1,f
  1102  01F7  0DA2               	rlf	___lldiv@divisor+2,f
  1103  01F8  0DA3               	rlf	___lldiv@divisor+3,f
  1104  01F9  0BF3               	decfsz	??___lldiv,f
  1105  01FA  29F4               	goto	u665
  1106  01FB  3001               	movlw	1
  1107  01FC  00F3               	movwf	??___lldiv
  1108  01FD  0873               	movf	??___lldiv,w
  1109  01FE  07F8               	addwf	___lldiv@counter,f
  1110  01FF                     l1276:
  1111  01FF  1FA3               	btfss	___lldiv@divisor+3,7
  1112  0200  2A02               	goto	u671
  1113  0201  2A03               	goto	u670
  1114  0202                     u671:
  1115  0202  29F2               	goto	l1274
  1116  0203                     u670:
  1117  0203                     l1278:
  1118  0203  3001               	movlw	1
  1119  0204  00F3               	movwf	??___lldiv
  1120  0205                     u685:
  1121  0205  1003               	clrc
  1122  0206  0DF4               	rlf	___lldiv@quotient,f
  1123  0207  0DF5               	rlf	___lldiv@quotient+1,f
  1124  0208  0DF6               	rlf	___lldiv@quotient+2,f
  1125  0209  0DF7               	rlf	___lldiv@quotient+3,f
  1126  020A  0BF3               	decfsz	??___lldiv,f
  1127  020B  2A05               	goto	u685
  1128  020C                     l1280:
  1129  020C  0823               	movf	___lldiv@divisor+3,w
  1130  020D  0227               	subwf	___lldiv@dividend+3,w
  1131  020E  1D03               	skipz
  1132  020F  2A1A               	goto	u695
  1133  0210  0822               	movf	___lldiv@divisor+2,w
  1134  0211  0226               	subwf	___lldiv@dividend+2,w
  1135  0212  1D03               	skipz
  1136  0213  2A1A               	goto	u695
  1137  0214  0821               	movf	___lldiv@divisor+1,w
  1138  0215  0225               	subwf	___lldiv@dividend+1,w
  1139  0216  1D03               	skipz
  1140  0217  2A1A               	goto	u695
  1141  0218  0820               	movf	___lldiv@divisor,w
  1142  0219  0224               	subwf	___lldiv@dividend,w
  1143  021A                     u695:
  1144  021A  1C03               	skipc
  1145  021B  2A1D               	goto	u691
  1146  021C  2A1E               	goto	u690
  1147  021D                     u691:
  1148  021D  2A2D               	goto	l1286
  1149  021E                     u690:
  1150  021E                     l1282:
  1151  021E  0820               	movf	___lldiv@divisor,w
  1152  021F  02A4               	subwf	___lldiv@dividend,f
  1153  0220  0821               	movf	___lldiv@divisor+1,w
  1154  0221  1C03               	skipc
  1155  0222  0F21               	incfsz	___lldiv@divisor+1,w
  1156  0223  02A5               	subwf	___lldiv@dividend+1,f
  1157  0224  0822               	movf	___lldiv@divisor+2,w
  1158  0225  1C03               	skipc
  1159  0226  0F22               	incfsz	___lldiv@divisor+2,w
  1160  0227  02A6               	subwf	___lldiv@dividend+2,f
  1161  0228  0823               	movf	___lldiv@divisor+3,w
  1162  0229  1C03               	skipc
  1163  022A  0F23               	incfsz	___lldiv@divisor+3,w
  1164  022B  02A7               	subwf	___lldiv@dividend+3,f
  1165  022C                     l1284:
  1166  022C  1474               	bsf	___lldiv@quotient,0
  1167  022D                     l1286:
  1168  022D  3001               	movlw	1
  1169  022E                     u705:
  1170  022E  1003               	clrc
  1171  022F  0CA3               	rrf	___lldiv@divisor+3,f
  1172  0230  0CA2               	rrf	___lldiv@divisor+2,f
  1173  0231  0CA1               	rrf	___lldiv@divisor+1,f
  1174  0232  0CA0               	rrf	___lldiv@divisor,f
  1175  0233  3EFF               	addlw	-1
  1176  0234  1D03               	skipz
  1177  0235  2A2E               	goto	u705
  1178  0236                     l1288:
  1179  0236  3001               	movlw	1
  1180  0237  02F8               	subwf	___lldiv@counter,f
  1181  0238  1D03               	btfss	3,2
  1182  0239  2A3B               	goto	u711
  1183  023A  2A3C               	goto	u710
  1184  023B                     u711:
  1185  023B  2A03               	goto	l1278
  1186  023C                     u710:
  1187  023C                     l1290:
  1188  023C  0877               	movf	___lldiv@quotient+3,w
  1189  023D  00A3               	movwf	?___lldiv+3
  1190  023E  0876               	movf	___lldiv@quotient+2,w
  1191  023F  00A2               	movwf	?___lldiv+2
  1192  0240  0875               	movf	___lldiv@quotient+1,w
  1193  0241  00A1               	movwf	?___lldiv+1
  1194  0242  0874               	movf	___lldiv@quotient,w
  1195  0243  00A0               	movwf	?___lldiv
  1196  0244                     l296:
  1197  0244  0008               	return
  1198  0245                     __end_of___lldiv:
  1199                           
  1200                           	psect	text4
  1201  0017                     __ptext4:	
  1202 ;; *************** function _S_RTC *****************
  1203 ;; Defined at:
  1204 ;;		line 27 in file "RTC.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  second          1    wreg     unsigned char 
  1207 ;;  minute          1   10[BANK0 ] unsigned char 
  1208 ;;  hour            1   11[BANK0 ] unsigned char 
  1209 ;;  m_day           1   12[BANK0 ] unsigned char 
  1210 ;;  month           1   13[BANK0 ] unsigned char 
  1211 ;;  year            1   14[BANK0 ] unsigned char 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  second          1   18[BANK0 ] unsigned char 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      unsigned char 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       5       0       0       0
  1224 ;;      Locals:         0       1       0       0       0
  1225 ;;      Temps:          0       3       0       0       0
  1226 ;;      Totals:         0       9       0       0       0
  1227 ;;Total ram usage:        9 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    3
  1230 ;; This function calls:
  1231 ;;		_I2C_Master_Start
  1232 ;;		_I2C_Master_Stop
  1233 ;;		_I2C_Master_Write
  1234 ;;		_decimal_to_bcd
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _S_RTC
  1242  0017                     _S_RTC:
  1243                           
  1244                           ;incstack = 0
  1245                           ; Regs used in _S_RTC: [wreg+status,2+status,0+pclath+cstack]
  1246                           ;S_RTC@second stored from wreg
  1247  0017  1283               	bcf	3,5	;RP0=0, select bank0
  1248  0018  1303               	bcf	3,6	;RP1=0, select bank0
  1249  0019  00B2               	movwf	S_RTC@second
  1250  001A                     l1450:
  1251                           
  1252                           ;RTC.c: 29:     second = decimal_to_bcd(second);
  1253  001A  0832               	movf	S_RTC@second,w
  1254  001B  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1255  0020  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0021  1303               	bcf	3,6	;RP1=0, select bank0
  1257  0022  00AF               	movwf	??_S_RTC
  1258  0023  082F               	movf	??_S_RTC,w
  1259  0024  00B2               	movwf	S_RTC@second
  1260                           
  1261                           ;RTC.c: 30:     minute = decimal_to_bcd(minute);
  1262  0025  082A               	movf	S_RTC@minute,w
  1263  0026  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1264  002B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  002C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  002D  00AF               	movwf	??_S_RTC
  1267  002E  082F               	movf	??_S_RTC,w
  1268  002F  00AA               	movwf	S_RTC@minute
  1269                           
  1270                           ;RTC.c: 31:     hour = decimal_to_bcd(hour);
  1271  0030  082B               	movf	S_RTC@hour,w
  1272  0031  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1273  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1274  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0038  00AF               	movwf	??_S_RTC
  1276  0039  082F               	movf	??_S_RTC,w
  1277  003A  00AB               	movwf	S_RTC@hour
  1278                           
  1279                           ;RTC.c: 32:     m_day = decimal_to_bcd(m_day);
  1280  003B  082C               	movf	S_RTC@m_day,w
  1281  003C  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1282  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0043  00AF               	movwf	??_S_RTC
  1285  0044  082F               	movf	??_S_RTC,w
  1286  0045  00AC               	movwf	S_RTC@m_day
  1287                           
  1288                           ;RTC.c: 33:     month = decimal_to_bcd(month);
  1289  0046  082D               	movf	S_RTC@month,w
  1290  0047  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1291  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1292  004D  1303               	bcf	3,6	;RP1=0, select bank0
  1293  004E  00AF               	movwf	??_S_RTC
  1294  004F  082F               	movf	??_S_RTC,w
  1295  0050  00AD               	movwf	S_RTC@month
  1296                           
  1297                           ;RTC.c: 34:     year = decimal_to_bcd(year);
  1298  0051  082E               	movf	S_RTC@year,w
  1299  0052  120A  118A  2376  120A  118A  	fcall	_decimal_to_bcd
  1300  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1302  0059  00AF               	movwf	??_S_RTC
  1303  005A  082F               	movf	??_S_RTC,w
  1304  005B  00AE               	movwf	S_RTC@year
  1305                           
  1306                           ;RTC.c: 38:     I2C_Master_Start();
  1307  005C  120A  118A  2408  120A  118A  	fcall	_I2C_Master_Start
  1308                           
  1309                           ;RTC.c: 39:     I2C_Master_Write(0xD0);
  1310  0061  30D0               	movlw	208
  1311  0062  00F3               	movwf	I2C_Master_Write@d
  1312  0063  3000               	movlw	0
  1313  0064  00F4               	movwf	I2C_Master_Write@d+1
  1314  0065  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1315                           
  1316                           ;RTC.c: 40:     I2C_Master_Write(0);
  1317  006A  3000               	movlw	0
  1318  006B  00F3               	movwf	I2C_Master_Write@d
  1319  006C  00F4               	movwf	I2C_Master_Write@d+1
  1320  006D  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1321                           
  1322                           ;RTC.c: 41:     I2C_Master_Write(0);
  1323  0072  3000               	movlw	0
  1324  0073  00F3               	movwf	I2C_Master_Write@d
  1325  0074  00F4               	movwf	I2C_Master_Write@d+1
  1326  0075  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1327                           
  1328                           ;RTC.c: 42:     I2C_Master_Write(minute);
  1329  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1330  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1331  007C  082A               	movf	S_RTC@minute,w
  1332  007D  00AF               	movwf	??_S_RTC
  1333  007E  01B0               	clrf	??_S_RTC+1
  1334  007F  082F               	movf	??_S_RTC,w
  1335  0080  00F3               	movwf	I2C_Master_Write@d
  1336  0081  0830               	movf	??_S_RTC+1,w
  1337  0082  00F4               	movwf	I2C_Master_Write@d+1
  1338  0083  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1339                           
  1340                           ;RTC.c: 43:     I2C_Master_Write(hour);
  1341  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1343  008A  082B               	movf	S_RTC@hour,w
  1344  008B  00AF               	movwf	??_S_RTC
  1345  008C  01B0               	clrf	??_S_RTC+1
  1346  008D  082F               	movf	??_S_RTC,w
  1347  008E  00F3               	movwf	I2C_Master_Write@d
  1348  008F  0830               	movf	??_S_RTC+1,w
  1349  0090  00F4               	movwf	I2C_Master_Write@d+1
  1350  0091  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1351                           
  1352                           ;RTC.c: 44:     I2C_Master_Write(1);
  1353  0096  3001               	movlw	1
  1354  0097  00F3               	movwf	I2C_Master_Write@d
  1355  0098  3000               	movlw	0
  1356  0099  00F4               	movwf	I2C_Master_Write@d+1
  1357  009A  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1358                           
  1359                           ;RTC.c: 45:     I2C_Master_Write(m_day);
  1360  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1361  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1362  00A1  082C               	movf	S_RTC@m_day,w
  1363  00A2  00AF               	movwf	??_S_RTC
  1364  00A3  01B0               	clrf	??_S_RTC+1
  1365  00A4  082F               	movf	??_S_RTC,w
  1366  00A5  00F3               	movwf	I2C_Master_Write@d
  1367  00A6  0830               	movf	??_S_RTC+1,w
  1368  00A7  00F4               	movwf	I2C_Master_Write@d+1
  1369  00A8  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1370                           
  1371                           ;RTC.c: 46:     I2C_Master_Write(month);
  1372  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1373  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1374  00AF  082D               	movf	S_RTC@month,w
  1375  00B0  00AF               	movwf	??_S_RTC
  1376  00B1  01B0               	clrf	??_S_RTC+1
  1377  00B2  082F               	movf	??_S_RTC,w
  1378  00B3  00F3               	movwf	I2C_Master_Write@d
  1379  00B4  0830               	movf	??_S_RTC+1,w
  1380  00B5  00F4               	movwf	I2C_Master_Write@d+1
  1381  00B6  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1382                           
  1383                           ;RTC.c: 47:     I2C_Master_Write(year);
  1384  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00BD  082E               	movf	S_RTC@year,w
  1387  00BE  00AF               	movwf	??_S_RTC
  1388  00BF  01B0               	clrf	??_S_RTC+1
  1389  00C0  082F               	movf	??_S_RTC,w
  1390  00C1  00F3               	movwf	I2C_Master_Write@d
  1391  00C2  0830               	movf	??_S_RTC+1,w
  1392  00C3  00F4               	movwf	I2C_Master_Write@d+1
  1393  00C4  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1394                           
  1395                           ;RTC.c: 48:     I2C_Master_Stop();
  1396  00C9  120A  118A  23FF  120A  118A  	fcall	_I2C_Master_Stop
  1397  00CE                     l1452:
  1398                           
  1399                           ;RTC.c: 50:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1400  00CE  3003               	movlw	3
  1401  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00D1  00B1               	movwf	??_S_RTC+2
  1404  00D2  3008               	movlw	8
  1405  00D3  00B0               	movwf	??_S_RTC+1
  1406  00D4  3076               	movlw	118
  1407  00D5  00AF               	movwf	??_S_RTC
  1408  00D6                     u947:
  1409  00D6  0BAF               	decfsz	??_S_RTC,f
  1410  00D7  28D6               	goto	u947
  1411  00D8  0BB0               	decfsz	??_S_RTC+1,f
  1412  00D9  28D6               	goto	u947
  1413  00DA  0BB1               	decfsz	??_S_RTC+2,f
  1414  00DB  28D6               	goto	u947
  1415  00DC  0000               	nop
  1416  00DD                     l171:
  1417  00DD  0008               	return
  1418  00DE                     __end_of_S_RTC:
  1419                           
  1420                           	psect	text5
  1421  0376                     __ptext5:	
  1422 ;; *************** function _decimal_to_bcd *****************
  1423 ;; Defined at:
  1424 ;;		line 21 in file "RTC.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  number          1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  number          1    9[BANK0 ] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       1       0       0       0
  1440 ;;      Temps:          0       5       0       0       0
  1441 ;;      Totals:         0       6       0       0       0
  1442 ;;Total ram usage:        6 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		___awdiv
  1447 ;;		___awmod
  1448 ;; This function is called by:
  1449 ;;		_S_RTC
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _decimal_to_bcd
  1455  0376                     _decimal_to_bcd:
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1459                           ;decimal_to_bcd@number stored from wreg
  1460  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0378  00A9               	movwf	decimal_to_bcd@number
  1463  0379                     l1388:
  1464                           
  1465                           ;RTC.c: 22:     return (((number / 10) << 4) + (number % 10));
  1466  0379  300A               	movlw	10
  1467  037A  00F3               	movwf	___awdiv@divisor
  1468  037B  3000               	movlw	0
  1469  037C  00F4               	movwf	___awdiv@divisor+1
  1470  037D  0829               	movf	decimal_to_bcd@number,w
  1471  037E  00A4               	movwf	??_decimal_to_bcd
  1472  037F  01A5               	clrf	??_decimal_to_bcd+1
  1473  0380  0824               	movf	??_decimal_to_bcd,w
  1474  0381  00F5               	movwf	___awdiv@dividend
  1475  0382  0825               	movf	??_decimal_to_bcd+1,w
  1476  0383  00F6               	movwf	___awdiv@dividend+1
  1477  0384  120A  118A  2174  120A  118A  	fcall	___awdiv
  1478  0389  0873               	movf	?___awdiv,w
  1479  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1480  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1481  038C  00A6               	movwf	??_decimal_to_bcd+2
  1482  038D  3004               	movlw	4
  1483  038E                     u925:
  1484  038E  1003               	clrc
  1485  038F  0DA6               	rlf	??_decimal_to_bcd+2,f
  1486  0390  3EFF               	addlw	-1
  1487  0391  1D03               	skipz
  1488  0392  2B8E               	goto	u925
  1489  0393  300A               	movlw	10
  1490  0394  00F3               	movwf	___awmod@divisor
  1491  0395  3000               	movlw	0
  1492  0396  00F4               	movwf	___awmod@divisor+1
  1493  0397  0829               	movf	decimal_to_bcd@number,w
  1494  0398  00A7               	movwf	??_decimal_to_bcd+3
  1495  0399  01A8               	clrf	??_decimal_to_bcd+4
  1496  039A  0827               	movf	??_decimal_to_bcd+3,w
  1497  039B  00F5               	movwf	___awmod@dividend
  1498  039C  0828               	movf	??_decimal_to_bcd+4,w
  1499  039D  00F6               	movwf	___awmod@dividend+1
  1500  039E  120A  118A  2245  120A  118A  	fcall	___awmod
  1501  03A3  0873               	movf	?___awmod,w
  1502  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1503  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1504  03A6  0726               	addwf	??_decimal_to_bcd+2,w
  1505  03A7                     l168:
  1506  03A7  0008               	return
  1507  03A8                     __end_of_decimal_to_bcd:
  1508                           
  1509                           	psect	text6
  1510  0245                     __ptext6:	
  1511 ;; *************** function ___awmod *****************
  1512 ;; Defined at:
  1513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  divisor         2    3[COMMON] int 
  1516 ;;  dividend        2    5[COMMON] int 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  sign            1    9[COMMON] unsigned char 
  1519 ;;  counter         1    8[COMMON] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  2    3[COMMON] int 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         4       0       0       0       0
  1530 ;;      Locals:         2       0       0       0       0
  1531 ;;      Temps:          1       0       0       0       0
  1532 ;;      Totals:         7       0       0       0       0
  1533 ;;Total ram usage:        7 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_decimal_to_bcd
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function ___awmod
  1545  0245                     ___awmod:
  1546  0245                     l1338:	
  1547                           ;incstack = 0
  1548                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1549                           
  1550  0245  01F9               	clrf	___awmod@sign
  1551  0246                     l1340:
  1552  0246  1FF6               	btfss	___awmod@dividend+1,7
  1553  0247  2A49               	goto	u821
  1554  0248  2A4A               	goto	u820
  1555  0249                     u821:
  1556  0249  2A51               	goto	l1346
  1557  024A                     u820:
  1558  024A                     l1342:
  1559  024A  09F5               	comf	___awmod@dividend,f
  1560  024B  09F6               	comf	___awmod@dividend+1,f
  1561  024C  0AF5               	incf	___awmod@dividend,f
  1562  024D  1903               	skipnz
  1563  024E  0AF6               	incf	___awmod@dividend+1,f
  1564  024F                     l1344:
  1565  024F  01F9               	clrf	___awmod@sign
  1566  0250  0AF9               	incf	___awmod@sign,f
  1567  0251                     l1346:
  1568  0251  1FF4               	btfss	___awmod@divisor+1,7
  1569  0252  2A54               	goto	u831
  1570  0253  2A55               	goto	u830
  1571  0254                     u831:
  1572  0254  2A5A               	goto	l1350
  1573  0255                     u830:
  1574  0255                     l1348:
  1575  0255  09F3               	comf	___awmod@divisor,f
  1576  0256  09F4               	comf	___awmod@divisor+1,f
  1577  0257  0AF3               	incf	___awmod@divisor,f
  1578  0258  1903               	skipnz
  1579  0259  0AF4               	incf	___awmod@divisor+1,f
  1580  025A                     l1350:
  1581  025A  0873               	movf	___awmod@divisor,w
  1582  025B  0474               	iorwf	___awmod@divisor+1,w
  1583  025C  1903               	btfsc	3,2
  1584  025D  2A5F               	goto	u841
  1585  025E  2A60               	goto	u840
  1586  025F                     u841:
  1587  025F  2A8F               	goto	l1368
  1588  0260                     u840:
  1589  0260                     l1352:
  1590  0260  01F8               	clrf	___awmod@counter
  1591  0261  0AF8               	incf	___awmod@counter,f
  1592  0262  2A6E               	goto	l1358
  1593  0263                     l1354:
  1594  0263  3001               	movlw	1
  1595  0264                     u855:
  1596  0264  1003               	clrc
  1597  0265  0DF3               	rlf	___awmod@divisor,f
  1598  0266  0DF4               	rlf	___awmod@divisor+1,f
  1599  0267  3EFF               	addlw	-1
  1600  0268  1D03               	skipz
  1601  0269  2A64               	goto	u855
  1602  026A                     l1356:
  1603  026A  3001               	movlw	1
  1604  026B  00F7               	movwf	??___awmod
  1605  026C  0877               	movf	??___awmod,w
  1606  026D  07F8               	addwf	___awmod@counter,f
  1607  026E                     l1358:
  1608  026E  1FF4               	btfss	___awmod@divisor+1,7
  1609  026F  2A71               	goto	u861
  1610  0270  2A72               	goto	u860
  1611  0271                     u861:
  1612  0271  2A63               	goto	l1354
  1613  0272                     u860:
  1614  0272                     l1360:
  1615  0272  0874               	movf	___awmod@divisor+1,w
  1616  0273  0276               	subwf	___awmod@dividend+1,w
  1617  0274  1D03               	skipz
  1618  0275  2A78               	goto	u875
  1619  0276  0873               	movf	___awmod@divisor,w
  1620  0277  0275               	subwf	___awmod@dividend,w
  1621  0278                     u875:
  1622  0278  1C03               	skipc
  1623  0279  2A7B               	goto	u871
  1624  027A  2A7C               	goto	u870
  1625  027B                     u871:
  1626  027B  2A82               	goto	l1364
  1627  027C                     u870:
  1628  027C                     l1362:
  1629  027C  0873               	movf	___awmod@divisor,w
  1630  027D  02F5               	subwf	___awmod@dividend,f
  1631  027E  0874               	movf	___awmod@divisor+1,w
  1632  027F  1C03               	skipc
  1633  0280  03F6               	decf	___awmod@dividend+1,f
  1634  0281  02F6               	subwf	___awmod@dividend+1,f
  1635  0282                     l1364:
  1636  0282  3001               	movlw	1
  1637  0283                     u885:
  1638  0283  1003               	clrc
  1639  0284  0CF4               	rrf	___awmod@divisor+1,f
  1640  0285  0CF3               	rrf	___awmod@divisor,f
  1641  0286  3EFF               	addlw	-1
  1642  0287  1D03               	skipz
  1643  0288  2A83               	goto	u885
  1644  0289                     l1366:
  1645  0289  3001               	movlw	1
  1646  028A  02F8               	subwf	___awmod@counter,f
  1647  028B  1D03               	btfss	3,2
  1648  028C  2A8E               	goto	u891
  1649  028D  2A8F               	goto	u890
  1650  028E                     u891:
  1651  028E  2A72               	goto	l1360
  1652  028F                     u890:
  1653  028F                     l1368:
  1654  028F  0879               	movf	___awmod@sign,w
  1655  0290  1903               	btfsc	3,2
  1656  0291  2A93               	goto	u901
  1657  0292  2A94               	goto	u900
  1658  0293                     u901:
  1659  0293  2A99               	goto	l1372
  1660  0294                     u900:
  1661  0294                     l1370:
  1662  0294  09F5               	comf	___awmod@dividend,f
  1663  0295  09F6               	comf	___awmod@dividend+1,f
  1664  0296  0AF5               	incf	___awmod@dividend,f
  1665  0297  1903               	skipnz
  1666  0298  0AF6               	incf	___awmod@dividend+1,f
  1667  0299                     l1372:
  1668  0299  0876               	movf	___awmod@dividend+1,w
  1669  029A  00F4               	movwf	?___awmod+1
  1670  029B  0875               	movf	___awmod@dividend,w
  1671  029C  00F3               	movwf	?___awmod
  1672  029D                     l426:
  1673  029D  0008               	return
  1674  029E                     __end_of___awmod:
  1675                           
  1676                           	psect	text7
  1677  0174                     __ptext7:	
  1678 ;; *************** function ___awdiv *****************
  1679 ;; Defined at:
  1680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  divisor         2    3[COMMON] int 
  1683 ;;  dividend        2    5[COMMON] int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  quotient        2    2[BANK0 ] int 
  1686 ;;  sign            1    1[BANK0 ] unsigned char 
  1687 ;;  counter         1    0[BANK0 ] unsigned char 
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  2    3[COMMON] int 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         4       0       0       0       0
  1698 ;;      Locals:         0       4       0       0       0
  1699 ;;      Temps:          1       0       0       0       0
  1700 ;;      Totals:         5       4       0       0       0
  1701 ;;Total ram usage:        9 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_decimal_to_bcd
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function ___awdiv
  1713  0174                     ___awdiv:
  1714  0174                     l1294:	
  1715                           ;incstack = 0
  1716                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1717                           
  1718  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0176  01A1               	clrf	___awdiv@sign
  1721  0177                     l1296:
  1722  0177  1FF4               	btfss	___awdiv@divisor+1,7
  1723  0178  297A               	goto	u721
  1724  0179  297B               	goto	u720
  1725  017A                     u721:
  1726  017A  2982               	goto	l1302
  1727  017B                     u720:
  1728  017B                     l1298:
  1729  017B  09F3               	comf	___awdiv@divisor,f
  1730  017C  09F4               	comf	___awdiv@divisor+1,f
  1731  017D  0AF3               	incf	___awdiv@divisor,f
  1732  017E  1903               	skipnz
  1733  017F  0AF4               	incf	___awdiv@divisor+1,f
  1734  0180                     l1300:
  1735  0180  01A1               	clrf	___awdiv@sign
  1736  0181  0AA1               	incf	___awdiv@sign,f
  1737  0182                     l1302:
  1738  0182  1FF6               	btfss	___awdiv@dividend+1,7
  1739  0183  2985               	goto	u731
  1740  0184  2986               	goto	u730
  1741  0185                     u731:
  1742  0185  298F               	goto	l1308
  1743  0186                     u730:
  1744  0186                     l1304:
  1745  0186  09F5               	comf	___awdiv@dividend,f
  1746  0187  09F6               	comf	___awdiv@dividend+1,f
  1747  0188  0AF5               	incf	___awdiv@dividend,f
  1748  0189  1903               	skipnz
  1749  018A  0AF6               	incf	___awdiv@dividend+1,f
  1750  018B                     l1306:
  1751  018B  3001               	movlw	1
  1752  018C  00F7               	movwf	??___awdiv
  1753  018D  0877               	movf	??___awdiv,w
  1754  018E  06A1               	xorwf	___awdiv@sign,f
  1755  018F                     l1308:
  1756  018F  01A2               	clrf	___awdiv@quotient
  1757  0190  01A3               	clrf	___awdiv@quotient+1
  1758  0191                     l1310:
  1759  0191  0873               	movf	___awdiv@divisor,w
  1760  0192  0474               	iorwf	___awdiv@divisor+1,w
  1761  0193  1903               	btfsc	3,2
  1762  0194  2996               	goto	u741
  1763  0195  2997               	goto	u740
  1764  0196                     u741:
  1765  0196  29CE               	goto	l1330
  1766  0197                     u740:
  1767  0197                     l1312:
  1768  0197  01A0               	clrf	___awdiv@counter
  1769  0198  0AA0               	incf	___awdiv@counter,f
  1770  0199  29A5               	goto	l1318
  1771  019A                     l1314:
  1772  019A  3001               	movlw	1
  1773  019B                     u755:
  1774  019B  1003               	clrc
  1775  019C  0DF3               	rlf	___awdiv@divisor,f
  1776  019D  0DF4               	rlf	___awdiv@divisor+1,f
  1777  019E  3EFF               	addlw	-1
  1778  019F  1D03               	skipz
  1779  01A0  299B               	goto	u755
  1780  01A1                     l1316:
  1781  01A1  3001               	movlw	1
  1782  01A2  00F7               	movwf	??___awdiv
  1783  01A3  0877               	movf	??___awdiv,w
  1784  01A4  07A0               	addwf	___awdiv@counter,f
  1785  01A5                     l1318:
  1786  01A5  1FF4               	btfss	___awdiv@divisor+1,7
  1787  01A6  29A8               	goto	u761
  1788  01A7  29A9               	goto	u760
  1789  01A8                     u761:
  1790  01A8  299A               	goto	l1314
  1791  01A9                     u760:
  1792  01A9                     l1320:
  1793  01A9  3001               	movlw	1
  1794  01AA                     u775:
  1795  01AA  1003               	clrc
  1796  01AB  0DA2               	rlf	___awdiv@quotient,f
  1797  01AC  0DA3               	rlf	___awdiv@quotient+1,f
  1798  01AD  3EFF               	addlw	-1
  1799  01AE  1D03               	skipz
  1800  01AF  29AA               	goto	u775
  1801  01B0  0874               	movf	___awdiv@divisor+1,w
  1802  01B1  0276               	subwf	___awdiv@dividend+1,w
  1803  01B2  1D03               	skipz
  1804  01B3  29B6               	goto	u785
  1805  01B4  0873               	movf	___awdiv@divisor,w
  1806  01B5  0275               	subwf	___awdiv@dividend,w
  1807  01B6                     u785:
  1808  01B6  1C03               	skipc
  1809  01B7  29B9               	goto	u781
  1810  01B8  29BA               	goto	u780
  1811  01B9                     u781:
  1812  01B9  29C1               	goto	l1326
  1813  01BA                     u780:
  1814  01BA                     l1322:
  1815  01BA  0873               	movf	___awdiv@divisor,w
  1816  01BB  02F5               	subwf	___awdiv@dividend,f
  1817  01BC  0874               	movf	___awdiv@divisor+1,w
  1818  01BD  1C03               	skipc
  1819  01BE  03F6               	decf	___awdiv@dividend+1,f
  1820  01BF  02F6               	subwf	___awdiv@dividend+1,f
  1821  01C0                     l1324:
  1822  01C0  1422               	bsf	___awdiv@quotient,0
  1823  01C1                     l1326:
  1824  01C1  3001               	movlw	1
  1825  01C2                     u795:
  1826  01C2  1003               	clrc
  1827  01C3  0CF4               	rrf	___awdiv@divisor+1,f
  1828  01C4  0CF3               	rrf	___awdiv@divisor,f
  1829  01C5  3EFF               	addlw	-1
  1830  01C6  1D03               	skipz
  1831  01C7  29C2               	goto	u795
  1832  01C8                     l1328:
  1833  01C8  3001               	movlw	1
  1834  01C9  02A0               	subwf	___awdiv@counter,f
  1835  01CA  1D03               	btfss	3,2
  1836  01CB  29CD               	goto	u801
  1837  01CC  29CE               	goto	u800
  1838  01CD                     u801:
  1839  01CD  29A9               	goto	l1320
  1840  01CE                     u800:
  1841  01CE                     l1330:
  1842  01CE  0821               	movf	___awdiv@sign,w
  1843  01CF  1903               	btfsc	3,2
  1844  01D0  29D2               	goto	u811
  1845  01D1  29D3               	goto	u810
  1846  01D2                     u811:
  1847  01D2  29D8               	goto	l1334
  1848  01D3                     u810:
  1849  01D3                     l1332:
  1850  01D3  09A2               	comf	___awdiv@quotient,f
  1851  01D4  09A3               	comf	___awdiv@quotient+1,f
  1852  01D5  0AA2               	incf	___awdiv@quotient,f
  1853  01D6  1903               	skipnz
  1854  01D7  0AA3               	incf	___awdiv@quotient+1,f
  1855  01D8                     l1334:
  1856  01D8  0823               	movf	___awdiv@quotient+1,w
  1857  01D9  00F4               	movwf	?___awdiv+1
  1858  01DA  0822               	movf	___awdiv@quotient,w
  1859  01DB  00F3               	movwf	?___awdiv
  1860  01DC                     l413:
  1861  01DC  0008               	return
  1862  01DD                     __end_of___awdiv:
  1863                           
  1864                           	psect	text8
  1865  00DE                     __ptext8:	
  1866 ;; *************** function _R_RTC *****************
  1867 ;; Defined at:
  1868 ;;		line 57 in file "RTC.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;		None
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      unsigned char 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0       0       0       0       0
  1884 ;;      Temps:          0       2       0       0       0
  1885 ;;      Totals:         0       2       0       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		_I2C_Master_Read
  1891 ;;		_I2C_Master_RepeatedStart
  1892 ;;		_I2C_Master_Start
  1893 ;;		_I2C_Master_Stop
  1894 ;;		_I2C_Master_Write
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _R_RTC
  1902  00DE                     _R_RTC:
  1903  00DE                     l1456:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _R_RTC: [wreg+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;RTC.c: 59:     I2C_Master_Start();
  1909  00DE  120A  118A  2408  120A  118A  	fcall	_I2C_Master_Start
  1910                           
  1911                           ;RTC.c: 60:     I2C_Master_Write(0xD0);
  1912  00E3  30D0               	movlw	208
  1913  00E4  00F3               	movwf	I2C_Master_Write@d
  1914  00E5  3000               	movlw	0
  1915  00E6  00F4               	movwf	I2C_Master_Write@d+1
  1916  00E7  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1917                           
  1918                           ;RTC.c: 61:     I2C_Master_Write(0);
  1919  00EC  3000               	movlw	0
  1920  00ED  00F3               	movwf	I2C_Master_Write@d
  1921  00EE  00F4               	movwf	I2C_Master_Write@d+1
  1922  00EF  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1923                           
  1924                           ;RTC.c: 62:     I2C_Master_RepeatedStart();
  1925  00F4  120A  118A  2411  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1926                           
  1927                           ;RTC.c: 63:     I2C_Master_Write(0xD1);
  1928  00F9  30D1               	movlw	209
  1929  00FA  00F3               	movwf	I2C_Master_Write@d
  1930  00FB  3000               	movlw	0
  1931  00FC  00F4               	movwf	I2C_Master_Write@d+1
  1932  00FD  120A  118A  23F5  120A  118A  	fcall	_I2C_Master_Write
  1933                           
  1934                           ;RTC.c: 64:     second = I2C_Master_Read(1);
  1935  0102  3001               	movlw	1
  1936  0103  00F3               	movwf	I2C_Master_Read@a
  1937  0104  3000               	movlw	0
  1938  0105  00F4               	movwf	I2C_Master_Read@a+1
  1939  0106  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1940  010B  0873               	movf	?_I2C_Master_Read,w
  1941  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1942  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1943  010E  00A0               	movwf	??_R_RTC
  1944  010F  0820               	movf	??_R_RTC,w
  1945  0110  00BD               	movwf	_second
  1946                           
  1947                           ;RTC.c: 65:     minute = I2C_Master_Read(1);
  1948  0111  3001               	movlw	1
  1949  0112  00F3               	movwf	I2C_Master_Read@a
  1950  0113  3000               	movlw	0
  1951  0114  00F4               	movwf	I2C_Master_Read@a+1
  1952  0115  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1953  011A  0873               	movf	?_I2C_Master_Read,w
  1954  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1955  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1956  011D  00A0               	movwf	??_R_RTC
  1957  011E  0820               	movf	??_R_RTC,w
  1958  011F  00BC               	movwf	_minute
  1959                           
  1960                           ;RTC.c: 66:     hour = I2C_Master_Read(1);
  1961  0120  3001               	movlw	1
  1962  0121  00F3               	movwf	I2C_Master_Read@a
  1963  0122  3000               	movlw	0
  1964  0123  00F4               	movwf	I2C_Master_Read@a+1
  1965  0124  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1966  0129  0873               	movf	?_I2C_Master_Read,w
  1967  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1968  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1969  012C  00A0               	movwf	??_R_RTC
  1970  012D  0820               	movf	??_R_RTC,w
  1971  012E  00BB               	movwf	_hour
  1972                           
  1973                           ;RTC.c: 67:     I2C_Master_Read(1);
  1974  012F  3001               	movlw	1
  1975  0130  00F3               	movwf	I2C_Master_Read@a
  1976  0131  3000               	movlw	0
  1977  0132  00F4               	movwf	I2C_Master_Read@a+1
  1978  0133  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1979                           
  1980                           ;RTC.c: 68:     m_day = I2C_Master_Read(1);
  1981  0138  3001               	movlw	1
  1982  0139  00F3               	movwf	I2C_Master_Read@a
  1983  013A  3000               	movlw	0
  1984  013B  00F4               	movwf	I2C_Master_Read@a+1
  1985  013C  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1986  0141  0873               	movf	?_I2C_Master_Read,w
  1987  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0144  00A0               	movwf	??_R_RTC
  1990  0145  0820               	movf	??_R_RTC,w
  1991  0146  00BA               	movwf	_m_day
  1992                           
  1993                           ;RTC.c: 69:     month = I2C_Master_Read(1);
  1994  0147  3001               	movlw	1
  1995  0148  00F3               	movwf	I2C_Master_Read@a
  1996  0149  3000               	movlw	0
  1997  014A  00F4               	movwf	I2C_Master_Read@a+1
  1998  014B  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  1999  0150  0873               	movf	?_I2C_Master_Read,w
  2000  0151  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0152  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0153  00A0               	movwf	??_R_RTC
  2003  0154  0820               	movf	??_R_RTC,w
  2004  0155  00B9               	movwf	_month
  2005                           
  2006                           ;RTC.c: 70:     year = I2C_Master_Read(0);
  2007  0156  3000               	movlw	0
  2008  0157  00F3               	movwf	I2C_Master_Read@a
  2009  0158  00F4               	movwf	I2C_Master_Read@a+1
  2010  0159  120A  118A  23A8  120A  118A  	fcall	_I2C_Master_Read
  2011  015E  0873               	movf	?_I2C_Master_Read,w
  2012  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0161  00A0               	movwf	??_R_RTC
  2015  0162  0820               	movf	??_R_RTC,w
  2016  0163  00B8               	movwf	_year
  2017                           
  2018                           ;RTC.c: 71:     I2C_Master_Stop();
  2019  0164  120A  118A  23FF  120A  118A  	fcall	_I2C_Master_Stop
  2020  0169                     l1458:
  2021                           
  2022                           ;RTC.c: 72:     _delay((unsigned long)((50)*(8000000/4000.0)));
  2023  0169  3082               	movlw	130
  2024  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2025  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2026  016C  00A1               	movwf	??_R_RTC+1
  2027  016D  30DD               	movlw	221
  2028  016E  00A0               	movwf	??_R_RTC
  2029  016F                     u957:
  2030  016F  0BA0               	decfsz	??_R_RTC,f
  2031  0170  296F               	goto	u957
  2032  0171  0BA1               	decfsz	??_R_RTC+1,f
  2033  0172  296F               	goto	u957
  2034  0173                     l174:
  2035  0173  0008               	return
  2036  0174                     __end_of_R_RTC:
  2037                           
  2038                           	psect	text9
  2039  03F5                     __ptext9:	
  2040 ;; *************** function _I2C_Master_Write *****************
  2041 ;; Defined at:
  2042 ;;		line 66 in file "I2C.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  d               2    3[COMMON] unsigned int 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         2       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         2       0       0       0       0
  2060 ;;Total ram usage:        2 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    2
  2063 ;; This function calls:
  2064 ;;		_I2C_Master_Wait
  2065 ;; This function is called by:
  2066 ;;		_S_RTC
  2067 ;;		_R_RTC
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _I2C_Master_Write
  2073  03F5                     _I2C_Master_Write:
  2074  03F5                     l1160:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2077                           
  2078                           
  2079                           ;I2C.c: 67:     I2C_Master_Wait();
  2080  03F5  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2081  03FA                     l1162:
  2082                           
  2083                           ;I2C.c: 68:     SSPBUF = d;
  2084  03FA  0873               	movf	I2C_Master_Write@d,w
  2085  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2086  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2087  03FD  0093               	movwf	19	;volatile
  2088  03FE                     l128:
  2089  03FE  0008               	return
  2090  03FF                     __end_of_I2C_Master_Write:
  2091                           
  2092                           	psect	text10
  2093  03FF                     __ptext10:	
  2094 ;; *************** function _I2C_Master_Stop *****************
  2095 ;; Defined at:
  2096 ;;		line 56 in file "I2C.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		_I2C_Master_Wait
  2119 ;; This function is called by:
  2120 ;;		_S_RTC
  2121 ;;		_R_RTC
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _I2C_Master_Stop
  2127  03FF                     _I2C_Master_Stop:
  2128  03FF                     l1156:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2131                           
  2132                           
  2133                           ;I2C.c: 58:     I2C_Master_Wait();
  2134  03FF  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2135  0404                     l1158:
  2136                           
  2137                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  2138  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0406  1511               	bsf	17,2	;volatile
  2141  0407                     l125:
  2142  0407  0008               	return
  2143  0408                     __end_of_I2C_Master_Stop:
  2144                           
  2145                           	psect	text11
  2146  0408                     __ptext11:	
  2147 ;; *************** function _I2C_Master_Start *****************
  2148 ;; Defined at:
  2149 ;;		line 39 in file "I2C.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		_I2C_Master_Wait
  2172 ;; This function is called by:
  2173 ;;		_S_RTC
  2174 ;;		_R_RTC
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _I2C_Master_Start
  2180  0408                     _I2C_Master_Start:
  2181  0408                     l1148:	
  2182                           ;incstack = 0
  2183                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2184                           
  2185                           
  2186                           ;I2C.c: 41:     I2C_Master_Wait();
  2187  0408  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2188  040D                     l1150:
  2189                           
  2190                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2191  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2192  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2193  040F  1411               	bsf	17,0	;volatile
  2194  0410                     l119:
  2195  0410  0008               	return
  2196  0411                     __end_of_I2C_Master_Start:
  2197                           
  2198                           	psect	text12
  2199  0411                     __ptext12:	
  2200 ;; *************** function _I2C_Master_RepeatedStart *****************
  2201 ;; Defined at:
  2202 ;;		line 47 in file "I2C.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    2
  2223 ;; This function calls:
  2224 ;;		_I2C_Master_Wait
  2225 ;; This function is called by:
  2226 ;;		_R_RTC
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _I2C_Master_RepeatedStart
  2232  0411                     _I2C_Master_RepeatedStart:
  2233  0411                     l1152:	
  2234                           ;incstack = 0
  2235                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2236                           
  2237                           
  2238                           ;I2C.c: 49:     I2C_Master_Wait();
  2239  0411  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2240  0416                     l1154:
  2241                           
  2242                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2243  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0418  1491               	bsf	17,1	;volatile
  2246  0419                     l122:
  2247  0419  0008               	return
  2248  041A                     __end_of_I2C_Master_RepeatedStart:
  2249                           
  2250                           	psect	text13
  2251  03A8                     __ptext13:	
  2252 ;; *************** function _I2C_Master_Read *****************
  2253 ;; Defined at:
  2254 ;;		line 74 in file "I2C.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  a               2    3[COMMON] unsigned short 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  temp            2    7[COMMON] unsigned short 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2    3[COMMON] unsigned short 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         2       0       0       0       0
  2269 ;;      Locals:         2       0       0       0       0
  2270 ;;      Temps:          2       0       0       0       0
  2271 ;;      Totals:         6       0       0       0       0
  2272 ;;Total ram usage:        6 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    2
  2275 ;; This function calls:
  2276 ;;		_I2C_Master_Wait
  2277 ;; This function is called by:
  2278 ;;		_R_RTC
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _I2C_Master_Read
  2284  03A8                     _I2C_Master_Read:
  2285  03A8                     l1164:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2288                           
  2289                           
  2290                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2291  03A8  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2292  03AD                     l1166:
  2293                           
  2294                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2295  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2296  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2297  03AF  1591               	bsf	17,3	;volatile
  2298                           
  2299                           ;I2C.c: 79:     I2C_Master_Wait();
  2300  03B0  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2301  03B5                     l1168:
  2302                           
  2303                           ;I2C.c: 80:     temp = SSPBUF;
  2304  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  2305  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  2306  03B7  0813               	movf	19,w	;volatile
  2307  03B8  00F5               	movwf	??_I2C_Master_Read
  2308  03B9  01F6               	clrf	??_I2C_Master_Read+1
  2309  03BA  0875               	movf	??_I2C_Master_Read,w
  2310  03BB  00F7               	movwf	I2C_Master_Read@temp
  2311  03BC  0876               	movf	??_I2C_Master_Read+1,w
  2312  03BD  00F8               	movwf	I2C_Master_Read@temp+1
  2313  03BE                     l1170:
  2314                           
  2315                           ;I2C.c: 81:     I2C_Master_Wait();
  2316  03BE  120A  118A  23E8  120A  118A  	fcall	_I2C_Master_Wait
  2317  03C3                     l1172:
  2318                           
  2319                           ;I2C.c: 82:     if(a == 1){
  2320  03C3  0373               	decf	I2C_Master_Read@a,w
  2321  03C4  0474               	iorwf	I2C_Master_Read@a+1,w
  2322  03C5  1D03               	btfss	3,2
  2323  03C6  2BC8               	goto	u621
  2324  03C7  2BC9               	goto	u620
  2325  03C8                     u621:
  2326  03C8  2BCD               	goto	l131
  2327  03C9                     u620:
  2328  03C9                     l1174:
  2329                           
  2330                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2331  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2332  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2333  03CB  1291               	bcf	17,5	;volatile
  2334                           
  2335                           ;I2C.c: 84:     }else{
  2336  03CC  2BD0               	goto	l132
  2337  03CD                     l131:
  2338                           
  2339                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2340  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2341  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2342  03CF  1691               	bsf	17,5	;volatile
  2343  03D0                     l132:	
  2344                           ;I2C.c: 86:     }
  2345                           
  2346                           
  2347                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2348  03D0  1611               	bsf	17,4	;volatile
  2349  03D1                     l1176:
  2350                           
  2351                           ;I2C.c: 88:     return temp;
  2352  03D1  0878               	movf	I2C_Master_Read@temp+1,w
  2353  03D2  00F4               	movwf	?_I2C_Master_Read+1
  2354  03D3  0877               	movf	I2C_Master_Read@temp,w
  2355  03D4  00F3               	movwf	?_I2C_Master_Read
  2356  03D5                     l133:
  2357  03D5  0008               	return
  2358  03D6                     __end_of_I2C_Master_Read:
  2359                           
  2360                           	psect	text14
  2361  03E8                     __ptext14:	
  2362 ;; *************** function _I2C_Master_Wait *****************
  2363 ;; Defined at:
  2364 ;;		line 32 in file "I2C.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_I2C_Master_Start
  2389 ;;		_I2C_Master_RepeatedStart
  2390 ;;		_I2C_Master_Stop
  2391 ;;		_I2C_Master_Write
  2392 ;;		_I2C_Master_Read
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _I2C_Master_Wait
  2398  03E8                     _I2C_Master_Wait:
  2399  03E8                     l1026:	
  2400                           ;incstack = 0
  2401                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2402                           
  2403  03E8                     l113:	
  2404                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2405                           
  2406  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2407  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2408  03EA  1914               	btfsc	20,2	;volatile
  2409  03EB  2BED               	goto	u331
  2410  03EC  2BEE               	goto	u330
  2411  03ED                     u331:
  2412  03ED  2BE8               	goto	l113
  2413  03EE                     u330:
  2414  03EE                     l1028:
  2415  03EE  0811               	movf	17,w	;volatile
  2416  03EF  391F               	andlw	31
  2417  03F0  1D03               	btfss	3,2
  2418  03F1  2BF3               	goto	u341
  2419  03F2  2BF4               	goto	u340
  2420  03F3                     u341:
  2421  03F3  2BE8               	goto	l113
  2422  03F4                     u340:
  2423  03F4                     l116:
  2424  03F4  0008               	return
  2425  03F5                     __end_of_I2C_Master_Wait:
  2426                           
  2427                           	psect	text15
  2428  03D6                     __ptext15:	
  2429 ;; *************** function _ISR *****************
  2430 ;; Defined at:
  2431 ;;		line 117 in file "main.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0
  2447 ;;      Temps:          3       0       0       0       0
  2448 ;;      Totals:         3       0       0       0       0
  2449 ;;Total ram usage:        3 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		Interrupt level 1
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _ISR
  2460  03D6                     _ISR:
  2461  03D6                     i1l1262:
  2462  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2463  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2464  03D8  1E8C               	btfss	12,5	;volatile
  2465  03D9  2BDB               	goto	u64_21
  2466  03DA  2BDC               	goto	u64_20
  2467  03DB                     u64_21:
  2468  03DB  2BE1               	goto	i1l81
  2469  03DC                     u64_20:
  2470  03DC                     i1l1264:
  2471  03DC  128C               	bcf	12,5	;volatile
  2472  03DD                     i1l1266:
  2473  03DD  081A               	movf	26,w	;volatile
  2474  03DE  00F0               	movwf	??_ISR
  2475  03DF  0870               	movf	??_ISR,w
  2476  03E0  00BE               	movwf	_lr
  2477  03E1                     i1l81:
  2478  03E1  0872               	movf	??_ISR+2,w
  2479  03E2  008A               	movwf	10
  2480  03E3  0E71               	swapf	??_ISR+1,w
  2481  03E4  0083               	movwf	3
  2482  03E5  0EFE               	swapf	btemp,f
  2483  03E6  0E7E               	swapf	btemp,w
  2484  03E7  0009               	retfie
  2485  03E8                     __end_of_ISR:
  2486  007E                     btemp	set	126	;btemp
  2487  007E                     wtemp0	set	126
  2488                           
  2489                           	psect	intentry
  2490  0004                     __pintentry:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _ISR: [wreg]
  2493                           
  2494  0004                     interrupt_function:
  2495  007E                     saved_w	set	btemp
  2496  0004  00FE               	movwf	btemp
  2497  0005  0E03               	swapf	3,w
  2498  0006  00F1               	movwf	??_ISR+1
  2499  0007  080A               	movf	10,w
  2500  0008  00F2               	movwf	??_ISR+2
  2501  0009  120A  118A  2BD6   	ljmp	_ISR
  2502                           
  2503                           	psect	config
  2504                           
  2505                           ;Config register CONFIG1 @ 0x2007
  2506                           ;	Oscillator Selection bits
  2507                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2508                           ;	Watchdog Timer Enable bit
  2509                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2510                           ;	Power-up Timer Enable bit
  2511                           ;	PWRTE = OFF, PWRT disabled
  2512                           ;	RE3/MCLR pin function select bit
  2513                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2514                           ;	Code Protection bit
  2515                           ;	CP = OFF, Program memory code protection is disabled
  2516                           ;	Data Code Protection bit
  2517                           ;	CPD = OFF, Data memory code protection is disabled
  2518                           ;	Brown Out Reset Selection bits
  2519                           ;	BOREN = OFF, BOR disabled
  2520                           ;	Internal External Switchover bit
  2521                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2522                           ;	Fail-Safe Clock Monitor Enabled bit
  2523                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2524                           ;	Low Voltage Programming Enable bit
  2525                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2526                           ;	In-Circuit Debugger Mode bit
  2527                           ;	DEBUG = 0x1, unprogrammed default
  2528  2007                     	org	8199
  2529  2007  20D4               	dw	8404
  2530                           
  2531                           ;Config register CONFIG2 @ 0x2008
  2532                           ;	Brown-out Reset Selection bit
  2533                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2534                           ;	Flash Program Memory Self Write Enable bits
  2535                           ;	WRT = OFF, Write protection off
  2536  2008                     	org	8200
  2537  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     24      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup
    _I2C_Master_Init->___lldiv
    _decimal_to_bcd->___awmod
    _R_RTC->_I2C_Master_Read

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_S_RTC
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _S_RTC->_decimal_to_bcd
    _decimal_to_bcd->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5818
                                             19 BANK0      5     5      0
                    _I2C_Master_Init
                              _R_RTC
                              _S_RTC
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0     632
                                              9 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     632
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _S_RTC                                                9     4      5    3043
                                             10 BANK0      9     4      5
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       6     6      0    1300
                                              4 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _R_RTC                                                2     2      0    1511
                                              0 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _R_RTC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _S_RTC
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _decimal_to_bcd
       ___awdiv
       ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 23:15:06 2021

                                _i 007A                                 l75 02F0  
                               l69 0321                       ___awdiv@sign 0021  
                               _lr 003E                     _decimal_to_bcd 0376  
                              l110 0375                                l113 03E8  
                              l122 0419                                l131 03CD  
                              l116 03F4                                l132 03D0  
                              l133 03D5                                l125 0407  
                              l119 0410                                l128 03FE  
                              l171 00DD                                l413 01DC  
                              l174 0173                                l168 03A7  
                              l426 029D                                l296 0244  
                              _GIE 005F                                u330 03EE  
                              u331 03ED                                u340 03F4  
                              u341 03F3                                u620 03C9  
                              _ISR 03D6                                u621 03C8  
                              u710 023C                                u711 023B  
                              u800 01CE                                u720 017B  
                              u801 01CD                                u721 017A  
                              u705 022E                                u810 01D3  
                              u730 0186                                u650 01EF  
                              u811 01D2                                u731 0185  
                              u651 01EE                                u740 0197  
                              u900 0294                                u820 024A  
                              u741 0196                                u901 0293  
                              u821 0249                                u830 0255  
                              u670 0203                                u910 0353  
                              u831 0254                                u671 0202  
                              u760 01A9                                u840 0260  
                              u761 01A8                                u841 025F  
                              u665 01F4                                u690 021E  
                              u755 019B                                u691 021D  
                              u915 034E                                u780 01BA  
                              u860 0272                                u781 01B9  
                              u861 0271                                u925 038E  
                              u685 0205                                u870 027C  
                              u775 01AA                                u871 027B  
                              u855 0264                                u695 021A  
                              u785 01B6                                u937 0330  
                              u890 028F                                u795 01C2  
                              u891 028E                                u875 0278  
                              u947 00D6                                u957 016F  
                              u885 0283                       ___awmod@sign 0079  
                             ?_ISR 0070                               l1026 03E8  
                             l1028 03EE                               l1300 0180  
                             l1150 040D                               l1310 0191  
                             l1302 0182                               l1152 0411  
                             l1160 03F5                               l1320 01A9  
                             l1312 0197                               l1304 0186  
                             l1400 02A7                               l1170 03BE  
                             l1154 0416                               l1162 03FA  
                             l1322 01BA                               l1314 019A  
                             l1330 01CE                               l1306 018B  
                             l1410 02B1                               l1402 02A8  
                             l1172 03C3                               l1164 03A8  
                             l1148 0408                               l1156 03FF  
                             l1332 01D3                               l1324 01C0  
                             l1316 01A1                               l1308 018F  
                             l1340 0246                               l1420 02B6  
                             l1412 02B2                               l1404 02A9  
                             l1174 03C9                               l1166 03AD  
                             l1158 0404                               l1334 01D8  
                             l1326 01C1                               l1318 01A5  
                             l1350 025A                               l1342 024A  
                             l1270 01DD                               l1430 02C1  
                             l1422 02B7                               l1414 02B3  
                             l1406 02AA                               l1176 03D1  
                             l1168 03B5                               l1328 01C8  
                             l1360 0272                               l1352 0260  
                             l1344 024F                               l1280 020C  
                             l1272 01EF                               l1440 02DC  
                             l1432 02C3                               l1424 02B8  
                             l1416 02B4                               l1408 02AB  
                             l1370 0294                               l1362 027C  
                             l1354 0263                               l1346 0251  
                             l1338 0245                               l1450 001A  
                             l1282 021E                               l1274 01F2  
                             l1290 023C                               l1442 02E0  
                             l1434 02C5                               l1426 02BB  
                             l1418 02B5                               l1372 0299  
                             l1364 0282                               l1356 026A  
                             l1348 0255                               l1452 00CE  
                             l1284 022C                               l1276 01FF  
                             l1380 0343                               l1444 02E4  
                             l1436 02C9                               l1428 02BE  
                             l1294 0174                               l1366 0289  
                             l1358 026E                               l1286 022D  
                             l1278 0203                               l1382 0372  
                             l1446 02E8                               l1438 02D6  
                             l1462 02F1                               l1456 00DE  
                             l1296 0177                               l1368 028F  
                             l1288 0236                               l1384 0373  
                             l1376 033C                               l1448 02EC  
                             l1392 029E                               l1464 0326  
                             l1458 0169                               l1298 017B  
                             l1386 0374                               l1378 0340  
                             l1394 02A1                               l1466 032A  
                             l1388 0379                               l1396 02A3  
                             l1468 0334                               l1398 02A4  
                             _PEIE 005E                               i1l81 03E1  
 __end_of_I2C_Master_RepeatedStart 041A                               _main 02F1  
                             _hour 003B                               _year 0038  
                             btemp 007E                               start 000C  
                            ??_ISR 0070             __end_of_decimal_to_bcd 03A8  
                 ?_I2C_Master_Init 0028                   ?_I2C_Master_Read 0073  
                 ?_I2C_Master_Wait 0070                   ?_I2C_Master_Stop 0070  
                            ?_main 0070                    __end_of___awdiv 01DD  
                  __end_of___awmod 029E                    __end_of___lldiv 0245  
                  ___awdiv@divisor 0073                    ___awdiv@counter 0020  
                            _RCREG 001A                              _RCSTA 0018  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _PORTE 0009  
                            u64_20 03DC                              u64_21 03DB  
                            _TRISC 0087                              _TRISD 0088  
                            _SSPIE 0463                              _TRISE 0089  
                            _SSPIF 0063                              _TXREG 0019  
                            _TXSTA 0098                              _R_RTC 00DE  
                            _S_RTC 0017                              _m_day 003A  
                            _month 0039                              _setup 029E  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 000F  
                     __end_of_main 033C                    ?_decimal_to_bcd 0070  
                           ??_main 0033                             ?_R_RTC 0070  
                           ?_S_RTC 002A                  ?_I2C_Master_Start 0070  
                ?_I2C_Master_Write 0073                 ??_I2C_Master_Start 0073  
               ??_I2C_Master_Write 0075                   ___awdiv@dividend 0075  
                           ?_setup 0070                             i1l1262 03D6  
                           i1l1264 03DC                             i1l1266 03DD  
                           _SPBRGH 009A                             _SSPADD 0093  
                           _TRISC3 043B                             _TRISC4 043C  
                           _SSPCON 0014                             _SSPBUF 0013  
         _I2C_Master_RepeatedStart 0411                          ??___awdiv 0077  
                        ??___awmod 0077                          ??___lldiv 0073  
                 ___awdiv@quotient 0022                             _minute 003C  
                           _second 003D                    ___awmod@divisor 0073  
                  ___awmod@counter 0078                             saved_w 007E  
          __end_of__initialization 0013                      __end_of_R_RTC 0174  
                    __end_of_S_RTC 00DE                     __pcstackCOMMON 0070  
                    __end_of_setup 02F1                            ??_R_RTC 0020  
                          ??_S_RTC 002F                            ??_setup 0079  
                       __pbssBANK0 003E                         __pmaintext 02F1  
                       __pintentry 0004                            _SSPCON2 0091  
                          _SSPSTAT 0094                   ??_decimal_to_bcd 0024  
                          ___awdiv 0174                            ___awmod 0245  
                          ___lldiv 01DD                            __ptext1 029E  
                          __ptext2 033C                            __ptext3 01DD  
                          __ptext4 0017                            __ptext5 0376  
                          __ptext6 0245                            __ptext7 0174  
                          __ptext8 00DE                            __ptext9 03F5  
                     __size_of_ISR 0012                   ___awmod@dividend 0075  
         __size_of_I2C_Master_Init 003A           __size_of_I2C_Master_Read 002E  
         __size_of_I2C_Master_Wait 000D           __size_of_I2C_Master_Stop 0009  
             end_of_initialization 0013         ??_I2C_Master_RepeatedStart 0073  
                        S_RTC@hour 002B                          S_RTC@year 002E  
        __size_of_I2C_Master_Start 0009          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0020                    ___lldiv@counter 0078  
                 I2C_Master_Init@c 0028                   I2C_Master_Read@a 0073  
                        _TRISCbits 0087                        _BAUDCTLbits 0187  
              start_initialization 000F                        __end_of_ISR 03E8  
                ??_I2C_Master_Init 002C                  ??_I2C_Master_Read 0075  
                ??_I2C_Master_Wait 0073                  ??_I2C_Master_Stop 0073  
                      __pbssCOMMON 007A                          ___latbits 0002  
                    __pcstackBANK0 0020                          __pnvBANK0 0038  
                 _I2C_Master_Start 0408                   _I2C_Master_Write 03F5  
                         ?___awdiv 0073                           ?___awmod 0073  
                         ?___lldiv 0020                     __size_of_R_RTC 0096  
                   __size_of_S_RTC 00C7                     __size_of_setup 0053  
                interrupt_function 0004                           _PIE1bits 008C  
                         _PIR1bits 000C                I2C_Master_Read@temp 0077  
                      S_RTC@minute 002A                        S_RTC@second 0032  
__size_of_I2C_Master_RepeatedStart 0009                   __size_of___awdiv 0069  
                 __size_of___awmod 0059          ?_I2C_Master_RepeatedStart 0070  
                 __size_of___lldiv 0068            __size_of_decimal_to_bcd 0032  
                  _I2C_Master_Init 033C                    _I2C_Master_Read 03A8  
                  _I2C_Master_Wait 03E8                    _I2C_Master_Stop 03FF  
                         __ptext10 03FF                           __ptext11 0408  
                         __ptext12 0411                           __ptext13 03A8  
                         __ptext14 03E8                           __ptext15 03D6  
                    __size_of_main 004B               decimal_to_bcd@number 0029  
         __end_of_I2C_Master_Start 0411                         S_RTC@m_day 002C  
         __end_of_I2C_Master_Write 03FF                         _INTCONbits 000B  
                       S_RTC@month 002D                           intlevel1 0000  
                 ___lldiv@dividend 0024                         _OSCCONbits 008F  
          __end_of_I2C_Master_Init 0376            __end_of_I2C_Master_Read 03D6  
          __end_of_I2C_Master_Wait 03F5            __end_of_I2C_Master_Stop 0408  
                 ___lldiv@quotient 0074                  I2C_Master_Write@d 0073  
                      _SSPCON2bits 0091  
