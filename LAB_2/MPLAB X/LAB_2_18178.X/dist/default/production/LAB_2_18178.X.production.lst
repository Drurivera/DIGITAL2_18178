

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 08 02:21:15 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0009                     _PORTE	set	9
   283  0008                     _PORTD	set	8
   284  0007                     _PORTC	set	7
   285  0006                     _PORTB	set	6
   286  0005                     _PORTA	set	5
   287  000B                     _INTCONbits	set	11
   288  0006                     _PORTBbits	set	6
   289  0089                     _TRISE	set	137
   290  0088                     _TRISD	set	136
   291  0087                     _TRISC	set	135
   292  0086                     _TRISB	set	134
   293  0085                     _TRISA	set	133
   294  0096                     _IOCBbits	set	150
   295  008F                     _OSCCONbits	set	143
   296  0189                     _ANSELH	set	393
   297  0188                     _ANSEL	set	392
   298                           
   299                           ; #config settings
   300  0000                     
   301                           	psect	cinit
   302  000F                     start_initialization:	
   303  000F                     __initialization:	
   304                           
   305                           ; Clear objects allocated to COMMON
   306  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   307  0010                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  0010                     __end_of__initialization:	
   311  0010  0183               	clrf	3
   312  0011  120A  118A  28D0   	ljmp	_main	;jump to C main() function
   313                           
   314                           	psect	bssCOMMON
   315  0076                     __pbssCOMMON:	
   316  0076                     _counter:	
   317  0076                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:	
   321  0070                     ?_setup:	
   322  0070                     ?_initosc:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 1 bytes @ 0x0
   336  0070                     	ds	2
   337  0072                     _ISR$190:	
   338                           
   339                           ; 1 bytes @ 0x2
   340  0072                     	ds	1
   341  0073                     ??_initosc:	
   342                           
   343                           ; 1 bytes @ 0x3
   344  0073                     	ds	2
   345  0075                     initosc@IRCF:	
   346                           
   347                           ; 1 bytes @ 0x5
   348  0075                     	ds	1
   349  0076                     ??_setup:	
   350  0076                     ??_main:	
   351                           ; 1 bytes @ 0x6
   352                           
   353                           
   354                           	psect	maintext
   355  00D0                     __pmaintext:	
   356                           ; 1 bytes @ 0x6
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 60 in file "main_LAB_2.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : B00/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels required when called:    3
   382 ;; This function calls:
   383 ;;		_setup
   384 ;; This function is called by:
   385 ;;		Startup code after reset
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _main
   391  00D0                     _main:	
   392  00D0                     l728:	
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395                           
   396                           
   397                           ;main_LAB_2.c: 62:     TRISB = 0b00000111;
   398  00D0  120A  118A  2070  120A  118A  	fcall	_setup
   399  00D5                     l43:	
   400                           ;main_LAB_2.c: 68:     TRISE = 0;
   401                           
   402  00D5                     l44:	
   403                           ;main_LAB_2.c: 71: }
   404                           
   405  00D5  28D5               	goto	l43
   406  00D6  120A  118A  280C   	ljmp	start
   407  00D9                     __end_of_main:	
   408                           
   409                           	psect	text1
   410  0070                     __ptext1:	
   411 ;; *************** function _setup *****************
   412 ;; Defined at:
   413 ;;		line 79 in file "main_LAB_2.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; Hardware stack levels required when called:    2
   434 ;; This function calls:
   435 ;;		_initosc
   436 ;; This function is called by:
   437 ;;		_main
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _setup
   443  0070                     _setup:	
   444  0070                     l680:	
   445                           ;incstack = 0
   446                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;main_LAB_2.c: 81: 
   450  0070  3007               	movlw	7
   451  0071  120A  118A  2014  120A  118A  	fcall	_initosc
   452  0076                     l682:	
   453                           
   454                           ;main_LAB_2.c: 82: }
   455  0076  1683               	bsf	3,5	;RP0=1, select bank1
   456  0077  1303               	bcf	3,6	;RP1=0, select bank1
   457  0078  118F               	bcf	15,3	;volatile
   458  0079                     l684:	
   459                           
   460                           ;main_LAB_2.c: 83: 
   461  0079  110F               	bcf	15,2	;volatile
   462  007A                     l686:	
   463                           
   464                           ;main_LAB_2.c: 84: 
   465  007A  108F               	bcf	15,1	;volatile
   466  007B                     l688:	
   467                           
   468                           ;main_LAB_2.c: 85: 
   469  007B  178B               	bsf	11,7	;volatile
   470  007C                     l690:	
   471                           
   472                           ;main_LAB_2.c: 86: 
   473  007C  170B               	bsf	11,6	;volatile
   474  007D                     l692:	
   475                           
   476                           ;main_LAB_2.c: 87: void __attribute__((picinterrupt(("")))) ISR(void){
   477  007D  158B               	bsf	11,3	;volatile
   478  007E                     l694:	
   479                           
   480                           ;main_LAB_2.c: 88:     if (INTCONbits.RBIF = 1 && PORTBbits.RB0==0){
   481  007E  168B               	bsf	11,5	;volatile
   482  007F                     l696:	
   483                           
   484                           ;main_LAB_2.c: 89:         if (PORTBbits.RB0==0){
   485  007F  110B               	bcf	11,2	;volatile
   486  0080                     l698:	
   487                           
   488                           ;main_LAB_2.c: 90:             if (PORTBbits.RB0==1) {
   489  0080  100B               	bcf	11,0	;volatile
   490  0081                     l700:	
   491                           
   492                           ;main_LAB_2.c: 91:                 PORTD = PORTD -1;
   493  0081  1416               	bsf	22,0	;volatile
   494  0082                     l702:	
   495                           
   496                           ;main_LAB_2.c: 92:                 INTCONbits. RBIF = 0;
   497  0082  1496               	bsf	22,1	;volatile
   498  0083                     l704:	
   499                           
   500                           ;main_LAB_2.c: 94:         }
   501  0083  1683               	bsf	3,5	;RP0=1, select bank3
   502  0084  1703               	bsf	3,6	;RP1=1, select bank3
   503  0085  0188               	clrf	8	;volatile
   504  0086                     l706:	
   505                           
   506                           ;main_LAB_2.c: 95: }
   507  0086  3001               	movlw	1
   508  0087  0089               	movwf	9	;volatile
   509  0088                     l708:	
   510                           
   511                           ;main_LAB_2.c: 96: 
   512  0088  1683               	bsf	3,5	;RP0=1, select bank1
   513  0089  1303               	bcf	3,6	;RP1=0, select bank1
   514  008A  0185               	clrf	5	;volatile
   515  008B                     l710:	
   516                           
   517                           ;main_LAB_2.c: 97: }
   518  008B  1283               	bcf	3,5	;RP0=0, select bank0
   519  008C  1303               	bcf	3,6	;RP1=0, select bank0
   520  008D  0185               	clrf	5	;volatile
   521  008E                     l712:	
   522  008E  3007               	movlw	7
   523  008F  1683               	bsf	3,5	;RP0=1, select bank1
   524  0090  1303               	bcf	3,6	;RP1=0, select bank1
   525  0091  0086               	movwf	6	;volatile
   526  0092                     l714:	
   527  0092  1283               	bcf	3,5	;RP0=0, select bank0
   528  0093  1303               	bcf	3,6	;RP1=0, select bank0
   529  0094  0186               	clrf	6	;volatile
   530  0095                     l716:	
   531  0095  1683               	bsf	3,5	;RP0=1, select bank1
   532  0096  1303               	bcf	3,6	;RP1=0, select bank1
   533  0097  0187               	clrf	7	;volatile
   534  0098                     l718:	
   535  0098  1283               	bcf	3,5	;RP0=0, select bank0
   536  0099  1303               	bcf	3,6	;RP1=0, select bank0
   537  009A  0187               	clrf	7	;volatile
   538  009B                     l720:	
   539  009B  1683               	bsf	3,5	;RP0=1, select bank1
   540  009C  1303               	bcf	3,6	;RP1=0, select bank1
   541  009D  0188               	clrf	8	;volatile
   542  009E                     l722:	
   543  009E  1283               	bcf	3,5	;RP0=0, select bank0
   544  009F  1303               	bcf	3,6	;RP1=0, select bank0
   545  00A0  0188               	clrf	8	;volatile
   546  00A1                     l724:	
   547  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   548  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   549  00A3  0189               	clrf	9	;volatile
   550  00A4                     l726:	
   551  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   552  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   553  00A6  0189               	clrf	9	;volatile
   554  00A7                     l49:	
   555  00A7  0008               	return
   556  00A8                     __end_of_setup:	
   557                           
   558                           	psect	text2
   559  0014                     __ptext2:	
   560 ;; *************** function _initosc *****************
   561 ;; Defined at:
   562 ;;		line 15 in file "oscilador.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  IRCF            1    wreg     unsigned char 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  IRCF            1    5[COMMON] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0
   579 ;;      Totals:         3       0       0       0       0
   580 ;;Total ram usage:        3 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_setup
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _initosc
   592  0014                     _initosc:	
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _initosc: [wreg-fsr0h+status,2+status,0]
   596                           ;initosc@IRCF stored from wreg
   597  0014  00F5               	movwf	initosc@IRCF
   598  0015                     l670:	
   599                           
   600                           ;oscilador.c: 17:     switch(IRCF){
   601  0015  284C               	goto	l674
   602  0016                     l68:	
   603                           ;oscilador.c: 18:         case 0:
   604                           
   605                           
   606                           ;oscilador.c: 19:             OSCCONbits.IRCF2 = 0;
   607  0016  1683               	bsf	3,5	;RP0=1, select bank1
   608  0017  1303               	bcf	3,6	;RP1=0, select bank1
   609  0018  130F               	bcf	15,6	;volatile
   610                           
   611                           ;oscilador.c: 20:             OSCCONbits.IRCF1 = 0;
   612  0019  128F               	bcf	15,5	;volatile
   613                           
   614                           ;oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   615  001A  120F               	bcf	15,4	;volatile
   616                           
   617                           ;oscilador.c: 22:             break;
   618  001B  286E               	goto	l69
   619  001C                     l70:	
   620                           ;oscilador.c: 24:         case 1:
   621                           
   622                           
   623                           ;oscilador.c: 25:             OSCCONbits.IRCF2 = 0;
   624  001C  1683               	bsf	3,5	;RP0=1, select bank1
   625  001D  1303               	bcf	3,6	;RP1=0, select bank1
   626  001E  130F               	bcf	15,6	;volatile
   627                           
   628                           ;oscilador.c: 26:             OSCCONbits.IRCF1 = 0;
   629  001F  128F               	bcf	15,5	;volatile
   630                           
   631                           ;oscilador.c: 27:             OSCCONbits.IRCF0 = 1;
   632  0020  160F               	bsf	15,4	;volatile
   633                           
   634                           ;oscilador.c: 28:             break;
   635  0021  286E               	goto	l69
   636  0022                     l71:	
   637                           ;oscilador.c: 29:         case 2:
   638                           
   639                           
   640                           ;oscilador.c: 30:             OSCCONbits.IRCF2 = 0;
   641  0022  1683               	bsf	3,5	;RP0=1, select bank1
   642  0023  1303               	bcf	3,6	;RP1=0, select bank1
   643  0024  130F               	bcf	15,6	;volatile
   644                           
   645                           ;oscilador.c: 31:             OSCCONbits.IRCF1 = 1;
   646  0025  168F               	bsf	15,5	;volatile
   647                           
   648                           ;oscilador.c: 32:             OSCCONbits.IRCF0 = 0;
   649  0026  120F               	bcf	15,4	;volatile
   650                           
   651                           ;oscilador.c: 33:             break;
   652  0027  286E               	goto	l69
   653  0028                     l72:	
   654                           ;oscilador.c: 34:         case 3:
   655                           
   656                           
   657                           ;oscilador.c: 35:             OSCCONbits.IRCF2 = 0;
   658  0028  1683               	bsf	3,5	;RP0=1, select bank1
   659  0029  1303               	bcf	3,6	;RP1=0, select bank1
   660  002A  130F               	bcf	15,6	;volatile
   661                           
   662                           ;oscilador.c: 36:             OSCCONbits.IRCF1 = 1;
   663  002B  168F               	bsf	15,5	;volatile
   664                           
   665                           ;oscilador.c: 37:             OSCCONbits.IRCF0 = 1;
   666  002C  160F               	bsf	15,4	;volatile
   667                           
   668                           ;oscilador.c: 38:             break;
   669  002D  286E               	goto	l69
   670  002E                     l73:	
   671                           ;oscilador.c: 39:         case 4:
   672                           
   673                           
   674                           ;oscilador.c: 40:             OSCCONbits.IRCF2 = 1;
   675  002E  1683               	bsf	3,5	;RP0=1, select bank1
   676  002F  1303               	bcf	3,6	;RP1=0, select bank1
   677  0030  170F               	bsf	15,6	;volatile
   678                           
   679                           ;oscilador.c: 41:             OSCCONbits.IRCF1 = 0;
   680  0031  128F               	bcf	15,5	;volatile
   681                           
   682                           ;oscilador.c: 42:             OSCCONbits.IRCF0 = 0;
   683  0032  120F               	bcf	15,4	;volatile
   684                           
   685                           ;oscilador.c: 43:             break;
   686  0033  286E               	goto	l69
   687  0034                     l74:	
   688                           ;oscilador.c: 44:         case 5:
   689                           
   690                           
   691                           ;oscilador.c: 45:             OSCCONbits.IRCF2 = 1;
   692  0034  1683               	bsf	3,5	;RP0=1, select bank1
   693  0035  1303               	bcf	3,6	;RP1=0, select bank1
   694  0036  170F               	bsf	15,6	;volatile
   695                           
   696                           ;oscilador.c: 46:             OSCCONbits.IRCF1 = 0;
   697  0037  128F               	bcf	15,5	;volatile
   698                           
   699                           ;oscilador.c: 47:             OSCCONbits.IRCF0 = 1;
   700  0038  160F               	bsf	15,4	;volatile
   701                           
   702                           ;oscilador.c: 48:             break;
   703  0039  286E               	goto	l69
   704  003A                     l75:	
   705                           ;oscilador.c: 49:         case 6:
   706                           
   707                           
   708                           ;oscilador.c: 50:             OSCCONbits.IRCF2 = 1;
   709  003A  1683               	bsf	3,5	;RP0=1, select bank1
   710  003B  1303               	bcf	3,6	;RP1=0, select bank1
   711  003C  170F               	bsf	15,6	;volatile
   712                           
   713                           ;oscilador.c: 51:             OSCCONbits.IRCF1 = 1;
   714  003D  168F               	bsf	15,5	;volatile
   715                           
   716                           ;oscilador.c: 52:             OSCCONbits.IRCF0 = 0;
   717  003E  120F               	bcf	15,4	;volatile
   718                           
   719                           ;oscilador.c: 53:             break;
   720  003F  286E               	goto	l69
   721  0040                     l76:	
   722                           ;oscilador.c: 54:         case 7:
   723                           
   724                           
   725                           ;oscilador.c: 55:             OSCCONbits.IRCF2 = 1;
   726  0040  1683               	bsf	3,5	;RP0=1, select bank1
   727  0041  1303               	bcf	3,6	;RP1=0, select bank1
   728  0042  170F               	bsf	15,6	;volatile
   729                           
   730                           ;oscilador.c: 56:             OSCCONbits.IRCF1 = 1;
   731  0043  168F               	bsf	15,5	;volatile
   732                           
   733                           ;oscilador.c: 57:             OSCCONbits.IRCF0 = 1;
   734  0044  160F               	bsf	15,4	;volatile
   735                           
   736                           ;oscilador.c: 58:             break;
   737  0045  286E               	goto	l69
   738  0046                     l77:	
   739                           ;oscilador.c: 59:         default:
   740                           
   741                           
   742                           ;oscilador.c: 60:             OSCCONbits.IRCF2 = 1;
   743  0046  1683               	bsf	3,5	;RP0=1, select bank1
   744  0047  1303               	bcf	3,6	;RP1=0, select bank1
   745  0048  170F               	bsf	15,6	;volatile
   746                           
   747                           ;oscilador.c: 61:             OSCCONbits.IRCF1 = 1;
   748  0049  168F               	bsf	15,5	;volatile
   749                           
   750                           ;oscilador.c: 62:             OSCCONbits.IRCF0 = 0;
   751  004A  120F               	bcf	15,4	;volatile
   752                           
   753                           ;oscilador.c: 63:             break;
   754  004B  286E               	goto	l69
   755  004C                     l674:	
   756  004C  0875               	movf	initosc@IRCF,w
   757  004D  00F3               	movwf	??_initosc
   758  004E  01F4               	clrf	??_initosc+1
   759                           
   760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   761                           ; Switch size 1, requested type "simple"
   762                           ; Number of cases is 1, Range of values is 0 to 0
   763                           ; switch strategies available:
   764                           ; Name         Instructions Cycles
   765                           ; simple_byte            4     3 (average)
   766                           ; direct_byte           11     8 (fixed)
   767                           ; jumptable            260     6 (fixed)
   768                           ;	Chosen strategy is simple_byte
   769  004F  0874               	movf	??_initosc+1,w
   770  0050  3A00               	xorlw	0	; case 0
   771  0051  1903               	skipnz
   772  0052  2854               	goto	l802
   773  0053  2846               	goto	l77
   774  0054                     l802:	
   775                           
   776                           ; Switch size 1, requested type "simple"
   777                           ; Number of cases is 8, Range of values is 0 to 7
   778                           ; switch strategies available:
   779                           ; Name         Instructions Cycles
   780                           ; simple_byte           25    13 (average)
   781                           ; direct_byte           32     8 (fixed)
   782                           ; jumptable            260     6 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  0054  0873               	movf	??_initosc,w
   785  0055  3A00               	xorlw	0	; case 0
   786  0056  1903               	skipnz
   787  0057  2816               	goto	l68
   788  0058  3A01               	xorlw	1	; case 1
   789  0059  1903               	skipnz
   790  005A  281C               	goto	l70
   791  005B  3A03               	xorlw	3	; case 2
   792  005C  1903               	skipnz
   793  005D  2822               	goto	l71
   794  005E  3A01               	xorlw	1	; case 3
   795  005F  1903               	skipnz
   796  0060  2828               	goto	l72
   797  0061  3A07               	xorlw	7	; case 4
   798  0062  1903               	skipnz
   799  0063  282E               	goto	l73
   800  0064  3A01               	xorlw	1	; case 5
   801  0065  1903               	skipnz
   802  0066  2834               	goto	l74
   803  0067  3A03               	xorlw	3	; case 6
   804  0068  1903               	skipnz
   805  0069  283A               	goto	l75
   806  006A  3A01               	xorlw	1	; case 7
   807  006B  1903               	skipnz
   808  006C  2840               	goto	l76
   809  006D  2846               	goto	l77
   810  006E                     l69:	
   811                           
   812                           ;oscilador.c: 65:     OSCCONbits.SCS = 1;
   813  006E  140F               	bsf	15,0	;volatile
   814  006F                     l78:	
   815  006F  0008               	return
   816  0070                     __end_of_initosc:	
   817                           
   818                           	psect	text3
   819  00A8                     __ptext3:	
   820 ;; *************** function _ISR *****************
   821 ;; Defined at:
   822 ;;		line 123 in file "main_LAB_2.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          2       0       0       0       0
   839 ;;      Totals:         3       0       0       0       0
   840 ;;Total ram usage:        3 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		Interrupt level 1
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _ISR
   851  00A8                     _ISR:	
   852  00A8                     i1l766:	
   853  00A8  01F2               	clrf	_ISR$190
   854  00A9                     i1l768:	
   855  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   856  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   857  00AB  1806               	btfsc	6,0	;volatile
   858  00AC  28AE               	goto	u5_21
   859  00AD  28AF               	goto	u5_20
   860  00AE                     u5_21:	
   861  00AE  28B1               	goto	i1l772
   862  00AF                     u5_20:	
   863  00AF                     i1l770:	
   864  00AF  01F2               	clrf	_ISR$190
   865  00B0  0AF2               	incf	_ISR$190,f
   866  00B1                     i1l772:	
   867  00B1  080B               	movf	11,w	;volatile
   868  00B2  0672               	xorwf	_ISR$190,w
   869  00B3  39FE               	andlw	-2
   870  00B4  0672               	xorwf	_ISR$190,w
   871  00B5  008B               	movwf	11	;volatile
   872  00B6  080B               	movf	11,w	;volatile
   873  00B7  3901               	andlw	1
   874  00B8  3A00               	xorlw	0
   875  00B9  1903               	skipnz
   876  00BA  28BC               	goto	u6_21
   877  00BB  28BD               	goto	u6_20
   878  00BC                     u6_21:	
   879  00BC  28C9               	goto	i1l62
   880  00BD                     u6_20:	
   881  00BD                     i1l774:	
   882  00BD  1806               	btfsc	6,0	;volatile
   883  00BE  28C0               	goto	u7_21
   884  00BF  28C1               	goto	u7_20
   885  00C0                     u7_21:	
   886  00C0  28C9               	goto	i1l62
   887  00C1                     u7_20:	
   888  00C1                     i1l776:	
   889  00C1  1C06               	btfss	6,0	;volatile
   890  00C2  28C4               	goto	u8_21
   891  00C3  28C5               	goto	u8_20
   892  00C4                     u8_21:	
   893  00C4  28C9               	goto	i1l62
   894  00C5                     u8_20:	
   895  00C5                     i1l778:	
   896  00C5  0808               	movf	8,w	;volatile
   897  00C6  3EFF               	addlw	255
   898  00C7  0088               	movwf	8	;volatile
   899  00C8                     i1l780:	
   900  00C8  100B               	bcf	11,0	;volatile
   901  00C9                     i1l62:	
   902  00C9  0871               	movf	??_ISR+1,w
   903  00CA  008A               	movwf	10
   904  00CB  0E70               	swapf	??_ISR^(0+4294967168),w
   905  00CC  0083               	movwf	3
   906  00CD  0EFE               	swapf	btemp,f
   907  00CE  0E7E               	swapf	btemp,w
   908  00CF  0009               	retfie
   909  00D0                     __end_of_ISR:	
   910  007E                     btemp	set	126	;btemp
   911  007E                     wtemp0	set	126
   912                           
   913                           	psect	intentry
   914  0004                     __pintentry:	
   915                           ;incstack = 0
   916                           ; Regs used in _ISR: [wreg+status,2+status,0]
   917                           
   918  0004                     interrupt_function:	
   919  007E                     saved_w	set	btemp
   920  0004  00FE               	movwf	btemp
   921  0005  0E03               	swapf	3,w
   922  0006  00F0               	movwf	??_ISR
   923  0007  080A               	movf	10,w
   924  0008  00F1               	movwf	??_ISR+1
   925  0009  120A  118A  28A8   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_initosc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                            _initosc
 ---------------------------------------------------------------------------------
 (2) _initosc                                              3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      24
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _initosc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 08 02:21:15 2021

            __CFG_CP$OFF 0000                       l43 00D5                       l44 00D5  
                     l70 001C                       l71 0022                       l72 0028  
                     l73 002E                       l49 00A7                       l74 0034  
                     l75 003A                       l76 0040                       l68 0016  
                     l77 0046                       l69 006E                       l78 006F  
                    l700 0081                      l710 008B                      l702 0082  
                    l720 009B                      l712 008E                      l704 0083  
                    l802 0054                      l722 009E                      l714 0092  
                    l706 0086                      l724 00A1                      l716 0095  
                    l708 0088                      l670 0015                      l726 00A4  
                    l718 0098                      l680 0070                      l728 00D0  
                    l674 004C                      l690 007C                      l682 0076  
                    l692 007D                      l684 0079                      l694 007E  
                    l686 007A                      l696 007F                      l688 007B  
                    l698 0080             __CFG_CPD$OFF 0000                      _ISR 00A8  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   i1l62 00C9                     u5_20 00AF                     u5_21 00AE  
                   u6_20 00BD                     u6_21 00BC                     u7_20 00C1  
                   u7_21 00C0                     u8_20 00C5                     u8_21 00C4  
           __CFG_WRT$OFF 0000                     _main 00D0                     btemp 007E  
                   start 000C            __CFG_IESO$OFF 0000                    ??_ISR 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  i1l770 00AF                    i1l780 00C8                    i1l772 00B1  
                  i1l774 00BD                    i1l766 00A8                    i1l776 00C1  
                  i1l768 00A9                    i1l778 00C5                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
         __CFG_FCMEN$OFF 0000          __end_of_initosc 0070                    _setup 0070  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 000F  
           __end_of_main 00D9                   ??_main 0076                   ?_setup 0070  
                 _ANSELH 0189           __CFG_PWRTE$OFF 0000                ??_initosc 0073  
                 saved_w 007E              initosc@IRCF 0075  __end_of__initialization 0010  
         __pcstackCOMMON 0070            __end_of_setup 00A8                  ??_setup 0076  
             __pmaintext 00D0               __pintentry 0004                  _ISR$190 0072  
                __ptext1 0070                  __ptext2 0014                  __ptext3 00A8  
           __size_of_ISR 0028                  _counter 0076                  _initosc 0014  
   end_of_initialization 0010                _PORTBbits 0006      start_initialization 000F  
            __end_of_ISR 00D0              __pbssCOMMON 0076                ___latbits 0002  
               ?_initosc 0070           __size_of_setup 0038        interrupt_function 0004  
               _IOCBbits 0096         __size_of_initosc 005C        __CFG_BOR4V$BOR40V 0000  
          __size_of_main 0009               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
