

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 23 19:48:55 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  000B                     _INTCONbits	set	11
   283  000C                     _PIR1bits	set	12
   284  0009                     _PORTE	set	9
   285  0008                     _PORTD	set	8
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  0008                     _PORTDbits	set	8
   290  001F                     _ADCON0bits	set	31
   291  008C                     _PIE1bits	set	140
   292  009E                     _ADRESL	set	158
   293  0089                     _TRISE	set	137
   294  0087                     _TRISC	set	135
   295  0088                     _TRISD	set	136
   296  0086                     _TRISB	set	134
   297  0085                     _TRISA	set	133
   298  009F                     _ADCON1bits	set	159
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           ; #config settings
   303  0000                     
   304                           	psect	cinit
   305  000F                     start_initialization:	
   306  000F                     __initialization:	
   307                           
   308                           ; Clear objects allocated to COMMON
   309  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   310  0010                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  0010                     __end_of__initialization:	
   314  0010  0183               	clrf	3
   315  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	bssCOMMON
   318  0073                     __pbssCOMMON:	
   319  0073                     _ADC1SL3:	
   320  0073                     	ds	1
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:	
   324  0070                     ?_setup:	
   325  0070                     ?_ADCInicio:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_main:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_ISR:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	3
   340  0073                     ??_setup:	
   341  0073                     ??_ADCInicio:	
   342                           ; 1 bytes @ 0x3
   343                           
   344  0073                     ??_main:	
   345                           ; 1 bytes @ 0x3
   346                           
   347                           
   348                           	psect	maintext
   349  0014                     __pmaintext:	
   350                           ; 1 bytes @ 0x3
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 59 in file "main_slave3.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  1    wreg      void 
   363 ;; Registers used:
   364 ;;		wreg, status,2, status,0, pclath, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : B00/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   370 ;;      Params:         0       0       0       0       0
   371 ;;      Locals:         0       0       0       0       0
   372 ;;      Temps:          0       0       0       0       0
   373 ;;      Totals:         0       0       0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels required when called:    2
   376 ;; This function calls:
   377 ;;		_ADCInicio
   378 ;;		_setup
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _main
   386  0014                     _main:	
   387  0014                     l686:	
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   390                           
   391                           
   392                           ;main_slave3.c: 60:     PORTA = 0;
   393  0014  120A  118A  2064  120A  118A  	fcall	_setup
   394  0019                     l45:	
   395                           ;main_slave3.c: 64:     PORTE = 0;
   396                           
   397                           
   398                           ;main_slave3.c: 65: 
   399  0019  120A  118A  2079  120A  118A  	fcall	_ADCInicio
   400  001E                     l688:	
   401                           
   402                           ;main_slave3.c: 66: }
   403  001E  1683               	bsf	3,5	;RP0=1, select bank1
   404  001F  1303               	bcf	3,6	;RP1=0, select bank1
   405  0020  179F               	bsf	31,7	;volatile
   406  0021                     l690:	
   407                           
   408                           ;main_slave3.c: 67: 
   409  0021  1283               	bcf	3,5	;RP0=0, select bank0
   410  0022  1303               	bcf	3,6	;RP1=0, select bank0
   411  0023  141F               	bsf	31,0	;volatile
   412  0024                     l692:	
   413                           
   414                           ;main_slave3.c: 68: 
   415  0024  149F               	bsf	31,1	;volatile
   416  0025                     l46:	
   417                           ;main_slave3.c: 69:  void __attribute__((picinterrupt(("")))) ISR(void) {
   418                           
   419  0025  189F               	btfsc	31,1	;volatile
   420  0026  2828               	goto	u11
   421  0027  2829               	goto	u10
   422  0028                     u11:	
   423  0028  2825               	goto	l46
   424  0029                     u10:	
   425  0029                     l694:	
   426                           
   427                           ;main_slave3.c: 70:     if (PIR1bits.ADIF == 1) {
   428  0029  3033               	movlw	51
   429  002A  0273               	subwf	_ADC1SL3,w
   430  002B  1803               	skipnc
   431  002C  282E               	goto	u21
   432  002D  282F               	goto	u20
   433  002E                     u21:	
   434  002E  2832               	goto	l698
   435  002F                     u20:	
   436  002F                     l696:	
   437                           
   438                           ;main_slave3.c: 71:         ADC1SL3 = ADRESL ;
   439  002F  1008               	bcf	8,0	;volatile
   440                           
   441                           ;main_slave3.c: 72:         PIR1bits.ADIF=0;
   442  0030  1088               	bcf	8,1	;volatile
   443                           
   444                           ;main_slave3.c: 73:         return;
   445  0031  1508               	bsf	8,2	;volatile
   446  0032                     l698:	
   447  0032  304A               	movlw	74
   448  0033  0273               	subwf	_ADC1SL3,w
   449  0034  1C03               	skipc
   450  0035  2837               	goto	u31
   451  0036  2838               	goto	u30
   452  0037                     u31:	
   453  0037  283B               	goto	l702
   454  0038                     u30:	
   455  0038                     l700:	
   456  0038  1408               	bsf	8,0	;volatile
   457  0039  1088               	bcf	8,1	;volatile
   458  003A  1108               	bcf	8,2	;volatile
   459  003B                     l702:	
   460  003B  3033               	movlw	51
   461  003C  0273               	subwf	_ADC1SL3,w
   462  003D  1C03               	skipc
   463  003E  2840               	goto	u41
   464  003F  2841               	goto	u40
   465  0040                     u41:	
   466  0040  2819               	goto	l45
   467  0041                     u40:	
   468  0041                     l704:	
   469  0041  304A               	movlw	74
   470  0042  0273               	subwf	_ADC1SL3,w
   471  0043  1803               	skipnc
   472  0044  2846               	goto	u51
   473  0045  2847               	goto	u50
   474  0046                     u51:	
   475  0046  2819               	goto	l45
   476  0047                     u50:	
   477  0047                     l706:	
   478  0047  1008               	bcf	8,0	;volatile
   479  0048  1488               	bsf	8,1	;volatile
   480  0049  1108               	bcf	8,2	;volatile
   481  004A  2819               	goto	l45
   482  004B  120A  118A  280C   	ljmp	start
   483  004E                     __end_of_main:	
   484                           
   485                           	psect	text1
   486  0064                     __ptext1:	
   487 ;; *************** function _setup *****************
   488 ;; Defined at:
   489 ;;		line 95 in file "main_slave3.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _setup
   519  0064                     _setup:	
   520  0064                     l668:	
   521                           ;incstack = 0
   522                           ; Regs used in _setup: [wreg+status,2]
   523                           
   524  0064  3001               	movlw	1
   525  0065  1683               	bsf	3,5	;RP0=1, select bank3
   526  0066  1703               	bsf	3,6	;RP1=1, select bank3
   527  0067  0088               	movwf	8	;volatile
   528  0068                     l670:	
   529  0068  0189               	clrf	9	;volatile
   530  0069                     l672:	
   531  0069  3001               	movlw	1
   532  006A  1683               	bsf	3,5	;RP0=1, select bank1
   533  006B  1303               	bcf	3,6	;RP1=0, select bank1
   534  006C  0085               	movwf	5	;volatile
   535  006D  0186               	clrf	6	;volatile
   536  006E  0188               	clrf	8	;volatile
   537  006F  0187               	clrf	7	;volatile
   538  0070  0189               	clrf	9	;volatile
   539  0071  1283               	bcf	3,5	;RP0=0, select bank0
   540  0072  1303               	bcf	3,6	;RP1=0, select bank0
   541  0073  0185               	clrf	5	;volatile
   542  0074  0186               	clrf	6	;volatile
   543  0075  0187               	clrf	7	;volatile
   544  0076  0188               	clrf	8	;volatile
   545  0077  0189               	clrf	9	;volatile
   546  0078                     l57:	
   547  0078  0008               	return
   548  0079                     __end_of_setup:	
   549                           
   550                           	psect	text2
   551  0079                     __ptext2:	
   552 ;; *************** function _ADCInicio *****************
   553 ;; Defined at:
   554 ;;		line 21 in file "adc.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _ADCInicio
   584  0079                     _ADCInicio:	
   585  0079                     l674:	
   586                           ;incstack = 0
   587                           ; Regs used in _ADCInicio: [wreg+status,2+status,0]
   588                           
   589                           
   590                           ;adc.c: 22:     INTCONbits.GIE = 1;
   591  0079  178B               	bsf	11,7	;volatile
   592                           
   593                           ;adc.c: 23:     INTCONbits.PEIE = 1;
   594  007A  170B               	bsf	11,6	;volatile
   595                           
   596                           ;adc.c: 24:     PIE1bits.ADIE = 1;
   597  007B  1683               	bsf	3,5	;RP0=1, select bank1
   598  007C  1303               	bcf	3,6	;RP1=0, select bank1
   599  007D  170C               	bsf	12,6	;volatile
   600                           
   601                           ;adc.c: 25:     PIR1bits.ADIF = 0;
   602  007E  1283               	bcf	3,5	;RP0=0, select bank0
   603  007F  1303               	bcf	3,6	;RP1=0, select bank0
   604  0080  130C               	bcf	12,6	;volatile
   605  0081                     l676:	
   606                           
   607                           ;adc.c: 26:     ADCON0bits.ADCS = 01;
   608  0081  081F               	movf	31,w	;volatile
   609  0082  393F               	andlw	-193
   610  0083  3840               	iorlw	64
   611  0084  009F               	movwf	31	;volatile
   612                           
   613                           ;adc.c: 27:     ADCON0bits.CHS = 0000;
   614  0085  30C3               	movlw	-61
   615  0086  059F               	andwf	31,f	;volatile
   616  0087                     l678:	
   617                           
   618                           ;adc.c: 28:     ADCON0bits.ADON = 1;
   619  0087  141F               	bsf	31,0	;volatile
   620  0088                     l680:	
   621                           
   622                           ;adc.c: 29:     ADCON1bits.ADFM = 0;
   623  0088  1683               	bsf	3,5	;RP0=1, select bank1
   624  0089  1303               	bcf	3,6	;RP1=0, select bank1
   625  008A  139F               	bcf	31,7	;volatile
   626  008B                     l682:	
   627                           
   628                           ;adc.c: 30:     ADCON1bits.VCFG1 = 0;
   629  008B  129F               	bcf	31,5	;volatile
   630  008C                     l684:	
   631                           
   632                           ;adc.c: 31:     ADCON1bits.VCFG0 = 0;
   633  008C  121F               	bcf	31,4	;volatile
   634  008D                     l76:	
   635  008D  0008               	return
   636  008E                     __end_of_ADCInicio:	
   637                           
   638                           	psect	text3
   639  004E                     __ptext3:	
   640 ;; *************** function _ISR *****************
   641 ;; Defined at:
   642 ;;		line 114 in file "main_slave3.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          3       0       0       0       0
   659 ;;      Totals:         3       0       0       0       0
   660 ;;Total ram usage:        3 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		Interrupt level 1
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _ISR
   671  004E                     _ISR:	
   672  004E                     i1l708:	
   673  004E  1283               	bcf	3,5	;RP0=0, select bank0
   674  004F  1303               	bcf	3,6	;RP1=0, select bank0
   675  0050  1F0C               	btfss	12,6	;volatile
   676  0051  2853               	goto	u6_21
   677  0052  2854               	goto	u6_20
   678  0053                     u6_21:	
   679  0053  285D               	goto	i1l63
   680  0054                     u6_20:	
   681  0054                     i1l710:	
   682  0054  1683               	bsf	3,5	;RP0=1, select bank1
   683  0055  1303               	bcf	3,6	;RP1=0, select bank1
   684  0056  081E               	movf	30,w	;volatile
   685  0057  00F0               	movwf	??_ISR
   686  0058  0870               	movf	??_ISR,w
   687  0059  00F3               	movwf	_ADC1SL3
   688  005A                     i1l712:	
   689  005A  1283               	bcf	3,5	;RP0=0, select bank0
   690  005B  1303               	bcf	3,6	;RP1=0, select bank0
   691  005C  130C               	bcf	12,6	;volatile
   692  005D                     i1l63:	
   693  005D  0872               	movf	??_ISR+2,w
   694  005E  008A               	movwf	10
   695  005F  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   696  0060  0083               	movwf	3
   697  0061  0EFE               	swapf	btemp,f
   698  0062  0E7E               	swapf	btemp,w
   699  0063  0009               	retfie
   700  0064                     __end_of_ISR:	
   701  007E                     btemp	set	126	;btemp
   702  007E                     wtemp0	set	126
   703                           
   704                           	psect	intentry
   705  0004                     __pintentry:	
   706                           ;incstack = 0
   707                           ; Regs used in _ISR: [wreg]
   708                           
   709  0004                     interrupt_function:	
   710  007E                     saved_w	set	btemp
   711  0004  00FE               	movwf	btemp
   712  0005  0E03               	swapf	3,w
   713  0006  00F1               	movwf	??_ISR+1
   714  0007  080A               	movf	10,w
   715  0008  00F2               	movwf	??_ISR+2
   716  0009  120A  118A  284E   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _ADCInicio
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCInicio                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInicio
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 23 19:48:55 2021

      __size_of_ADCInicio 0015               __CFG_CP$OFF 0000                        l45 0019  
                      l46 0025                        l57 0078                        l76 008D  
                      u10 0029                        u11 0028                        u20 002F  
                      u21 002E                        u30 0038                        u31 0037  
                      u40 0041                        u41 0040                        u50 0047  
                      u51 0046                       l700 0038                       l702 003B  
                     l704 0041                       l706 0047                       l670 0068  
                     l680 0088                       l672 0069                       l682 008B  
                     l674 0079                       l690 0021                       l684 008C  
                     l676 0081                       l668 0064                       l692 0024  
                     l678 0087                       l694 0029                       l686 0014  
                     l696 002F                       l688 001E                       l698 0032  
            __CFG_CPD$OFF 0000                       _ISR 004E              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      i1l63 005D                      u6_20 0054  
                    u6_21 0053              __CFG_WRT$OFF 0000                      _main 0014  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_ISR 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l710 0054                     i1l712 005A  
                   i1l708 004E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
                   _setup 0064         __end_of_ADCInicio 008E            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 004E  
                  ??_main 0073                    _ADRESL 009E                    ?_setup 0070  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                    saved_w 007E  
 __end_of__initialization 0010            __pcstackCOMMON 0070             __end_of_setup 0079  
                 ??_setup 0073                __pmaintext 0014                   _ADC1SL3 0073  
              __pintentry 0004                 _ADCInicio 0079                   __ptext1 0064  
                 __ptext2 0079                   __ptext3 004E              __size_of_ISR 0016  
    end_of_initialization 0010                ?_ADCInicio 0070                 _PORTDbits 0008  
     start_initialization 000F               __end_of_ISR 0064               ??_ADCInicio 0073  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0073                 ___latbits 0002  
          __size_of_setup 0015         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 003A                _INTCONbits 000B  
                intlevel1 0000  
