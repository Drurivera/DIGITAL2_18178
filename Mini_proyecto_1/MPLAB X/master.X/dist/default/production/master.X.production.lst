

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 24 23:14:28 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457                           
   458                           	psect	strings
   459  0003                     __pstrings:	
   460  0003                     stringtab:	
   461  0003                     __stringtab:	
   462                           
   463                           ;	String table - string pointers are 1 byte each
   464  0003  1BFF               	btfsc	btemp+1,7
   465  0004  280D               	ljmp	stringcode
   466  0005  1383               	bcf	3,7
   467  0006  187F               	btfsc	btemp+1,0
   468  0007  1783               	bsf	3,7
   469  0008  0800               	movf	0,w
   470  0009  0A84               	incf	4,f
   471  000A  1903               	skipnz
   472  000B  0AFF               	incf	btemp+1,f
   473  000C  0008               	return
   474  000D                     stringcode:	
   475  000D                     stringdir:	
   476  000D  3000               	movlw	high stringdir
   477  000E  008A               	movwf	10
   478  000F  0804               	movf	4,w
   479  0010  0A84               	incf	4,f
   480  0011  0782               	addwf	2,f
   481  0012                     __stringbase:	
   482  0012  3400               	retlw	0
   483  0013                     __end_of__stringtab:	
   484  0013                     _dpowers:	
   485  0013  3401               	retlw	1
   486  0014  3400               	retlw	0
   487  0015  340A               	retlw	10
   488  0016  3400               	retlw	0
   489  0017  3464               	retlw	100
   490  0018  3400               	retlw	0
   491  0019  34E8               	retlw	232
   492  001A  3403               	retlw	3
   493  001B  3410               	retlw	16
   494  001C  3427               	retlw	39
   495  001D                     __end_of_dpowers:	
   496  001D                     STR_1:	
   497  001D  3453               	retlw	83	;'S'
   498  001E  3431               	retlw	49	;'1'
   499  001F  3420               	retlw	32	;' '
   500  0020  3420               	retlw	32	;' '
   501  0021  3420               	retlw	32	;' '
   502  0022  3420               	retlw	32	;' '
   503  0023  3420               	retlw	32	;' '
   504  0024  3453               	retlw	83	;'S'
   505  0025  3432               	retlw	50	;'2'
   506  0026  3420               	retlw	32	;' '
   507  0027  3420               	retlw	32	;' '
   508  0028  3420               	retlw	32	;' '
   509  0029  3420               	retlw	32	;' '
   510  002A  3420               	retlw	32	;' '
   511  002B  3453               	retlw	83	;'S'
   512  002C  3433               	retlw	51	;'3'
   513  002D  3400               	retlw	0
   514  002E                     STR_2:	
   515  002E  3425               	retlw	37	;'%'
   516  002F  342E               	retlw	46	;'.'
   517  0030  3433               	retlw	51	;'3'
   518  0031  3469               	retlw	105	;'i'
   519  0032  3400               	retlw	0
   520  0033                     STR_5:	
   521  0033  3420               	retlw	32	;' '
   522  0034  3420               	retlw	32	;' '
   523  0035  3420               	retlw	32	;' '
   524  0036  3400               	retlw	0
   525  0037                     STR_3:	
   526  0037  3420               	retlw	32	;' '
   527  0038  3456               	retlw	86	;'V'
   528  0039  3420               	retlw	32	;' '
   529  003A  3400               	retlw	0
   530  003B                     STR_7:	
   531  003B  3443               	retlw	67	;'C'
   532  003C  3420               	retlw	32	;' '
   533  003D  3400               	retlw	0
   534  002E                     
   535                           ; #config settings
   536  0000                     
   537                           	psect	nvBANK0
   538  004B                     __pnvBANK0:	
   539  004B                     _SSb1:	
   540  004B                     	ds	1
   541  0018                     _RCSTA	set	24
   542  0009                     _PORTE	set	9
   543  0007                     _PORTC	set	7
   544  0005                     _PORTA	set	5
   545  0006                     _PORTB	set	6
   546  0005                     _PORTAbits	set	5
   547  0013                     _SSPBUF	set	19
   548  000B                     _INTCONbits	set	11
   549  0014                     _SSPCONbits	set	20
   550  0019                     _TXREG	set	25
   551  001A                     _RCREG	set	26
   552  000C                     _PIR1bits	set	12
   553  0018                     _RCSTAbits	set	24
   554  0007                     _PORTCbits	set	7
   555  0008                     _PORTD	set	8
   556  008F                     _OSCCONbits	set	143
   557  0098                     _TXSTA	set	152
   558  009A                     _SPBRGH	set	154
   559  0089                     _TRISE	set	137
   560  0087                     _TRISC	set	135
   561  0088                     _TRISD	set	136
   562  0086                     _TRISB	set	134
   563  0085                     _TRISA	set	133
   564  0085                     _TRISAbits	set	133
   565  008C                     _PIE1bits	set	140
   566  0087                     _TRISCbits	set	135
   567  0094                     _SSPSTATbits	set	148
   568  0098                     _TXSTAbits	set	152
   569  0099                     _SPBRG	set	153
   570  0187                     _BAUDCTLbits	set	391
   571  0189                     _ANSELH	set	393
   572  0188                     _ANSEL	set	392
   573                           
   574                           	psect	cinit
   575  07F3                     start_initialization:	
   576  07F3                     __initialization:	
   577                           
   578                           ; Clear objects allocated to BANK0
   579  07F3  1383               	bcf	3,7	;select IRP bank0
   580  07F4  3039               	movlw	low __pbssBANK0
   581  07F5  0084               	movwf	4
   582  07F6  304B               	movlw	low (__pbssBANK0+18)
   583  07F7  120A  118A  21CA  120A  118A  	fcall	clear_ram0
   584  07FC                     end_of_initialization:	
   585                           ;End of C runtime variable initialization code
   586                           
   587  07FC                     __end_of__initialization:	
   588  07FC  0183               	clrf	3
   589  07FD  120A  118A  2E62   	ljmp	_main	;jump to C main() function
   590                           
   591                           	psect	bssBANK0
   592  0039                     __pbssBANK0:	
   593  0039                     _ADC1SL3:	
   594  0039                     	ds	1
   595  003A                     _SL2:	
   596  003A                     	ds	1
   597  003B                     _ADC1SL1:	
   598  003B                     	ds	1
   599  003C                     _PSL3:	
   600  003C                     	ds	5
   601  0041                     _PSL2:	
   602  0041                     	ds	5
   603  0046                     _PSL1:	
   604  0046                     	ds	5
   605                           
   606                           	psect	clrtext
   607  01CA                     clear_ram0:	
   608                           ;	Called with FSR containing the base address, and
   609                           ;	W with the last address+1
   610                           
   611  01CA  0064               	clrwdt	;clear the watchdog before getting into this loop
   612  01CB                     clrloop0:	
   613  01CB  0180               	clrf	0	;clear RAM location pointed to by FSR
   614  01CC  0A84               	incf	4,f	;increment pointer
   615  01CD  0604               	xorwf	4,w	;XOR with final address
   616  01CE  1903               	btfsc	3,2	;have we reached the end yet?
   617  01CF  3400               	retlw	0	;all done for this memory range, return
   618  01D0  0604               	xorwf	4,w	;XOR again to restore value
   619  01D1  29CB               	goto	clrloop0	;do the next byte
   620                           
   621                           	psect	cstackCOMMON
   622  0070                     __pcstackCOMMON:	
   623  0070                     ?_isdigit:	
   624  0070                     ?_LCD_ready:	
   625                           ; 1 bit 
   626                           
   627  0070                     ??_LCD_ready:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_LCD_lat:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_LCD_lat:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_setup:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ??_setup:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ??_isdigit:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_LCD_cmd:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_dwr:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_inicio:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_SPIMaster:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ??_SPIMaster:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_spiRead:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ??_spiRead:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_spiWrite:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ??_spiWrite:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_main:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?___bmul:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?___wmul:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?___lwdiv:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ?___aldiv:	
   685                           ; 2 bytes @ 0x0
   686                           
   687  0070                     spiWrite@data:	
   688                           ; 4 bytes @ 0x0
   689                           
   690  0070                     ___bmul@multiplicand:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     _isdigit$1130:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ___wmul@multiplier:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ___lwdiv@divisor:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0070                     ___aldiv@divisor:	
   703                           ; 2 bytes @ 0x0
   704                           
   705                           
   706                           ; 4 bytes @ 0x0
   707  0070                     	ds	1
   708  0071                     ??___bmul:	
   709  0071                     isdigit@c:	
   710                           ; 1 bytes @ 0x1
   711                           
   712                           
   713                           ; 1 bytes @ 0x1
   714  0071                     	ds	1
   715  0072                     ??_LCD_cmd:	
   716  0072                     ??_LCD_dwr:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     LCD_cmd@x:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     LCD_dwr@x:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ___bmul@product:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ___wmul@multiplicand:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ___lwdiv@dividend:	
   732                           ; 2 bytes @ 0x2
   733                           
   734                           
   735                           ; 2 bytes @ 0x2
   736  0072                     	ds	1
   737  0073                     ?_LCD_msg:	
   738  0073                     ??_inicio:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ___bmul@multiplier:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     LCD_msg@c:	
   745                           ; 1 bytes @ 0x3
   746                           
   747                           
   748                           ; 2 bytes @ 0x3
   749  0073                     	ds	1
   750  0074                     ??___wmul:	
   751  0074                     ??___lwdiv:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ___wmul@product:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ___aldiv@dividend:	
   758                           ; 2 bytes @ 0x4
   759                           
   760                           
   761                           ; 4 bytes @ 0x4
   762  0074                     	ds	1
   763  0075                     ??_LCD_msg:	
   764  0075                     ___lwdiv@quotient:	
   765                           ; 1 bytes @ 0x5
   766                           
   767                           
   768                           ; 2 bytes @ 0x5
   769  0075                     	ds	1
   770  0076                     ?___awdiv:	
   771  0076                     ___awdiv@divisor:	
   772                           ; 2 bytes @ 0x6
   773                           
   774                           
   775                           ; 2 bytes @ 0x6
   776  0076                     	ds	1
   777  0077                     ___lwdiv@counter:	
   778                           
   779                           ; 1 bytes @ 0x7
   780  0077                     	ds	1
   781  0078                     ??___aldiv:	
   782  0078                     ?___lwmod:	
   783                           ; 1 bytes @ 0x8
   784                           
   785  0078                     ___awdiv@dividend:	
   786                           ; 2 bytes @ 0x8
   787                           
   788  0078                     ___lwmod@divisor:	
   789                           ; 2 bytes @ 0x8
   790                           
   791                           
   792                           ; 2 bytes @ 0x8
   793  0078                     	ds	2
   794  007A                     ??___awdiv:	
   795  007A                     ___lwmod@dividend:	
   796                           ; 1 bytes @ 0xA
   797                           
   798                           
   799                           ; 2 bytes @ 0xA
   800  007A                     	ds	2
   801  007C                     ??___lwmod:	
   802                           
   803                           ; 1 bytes @ 0xC
   804  007C                     	ds	1
   805  007D                     ___lwmod@counter:	
   806                           
   807                           ; 1 bytes @ 0xD
   808  007D                     	ds	1
   809                           
   810                           	psect	cstackBANK0
   811  0020                     __pcstackBANK0:	
   812  0020                     ?_sprintf:	
   813  0020                     sprintf@f:	
   814                           ; 2 bytes @ 0x0
   815                           
   816  0020                     ___aldiv@counter:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0020                     ___awdiv@counter:	
   820                           ; 1 bytes @ 0x0
   821                           
   822                           
   823                           ; 1 bytes @ 0x0
   824  0020                     	ds	1
   825  0021                     ___aldiv@sign:	
   826  0021                     ___awdiv@sign:	
   827                           ; 1 bytes @ 0x1
   828                           
   829                           
   830                           ; 1 bytes @ 0x1
   831  0021                     	ds	1
   832  0022                     ___awdiv@quotient:	
   833  0022                     ___aldiv@quotient:	
   834                           ; 2 bytes @ 0x2
   835                           
   836                           
   837                           ; 4 bytes @ 0x2
   838  0022                     	ds	1
   839  0023                     ??_sprintf:	
   840                           
   841                           ; 1 bytes @ 0x3
   842  0023                     	ds	3
   843  0026                     ?_UART_INIT:	
   844  0026                     sprintf@ap:	
   845                           ; 1 bytes @ 0x6
   846                           
   847  0026                     UART_INIT@baudrate:	
   848                           ; 1 bytes @ 0x6
   849                           
   850                           
   851                           ; 4 bytes @ 0x6
   852  0026                     	ds	1
   853  0027                     sprintf@flag:	
   854                           
   855                           ; 1 bytes @ 0x7
   856  0027                     	ds	1
   857  0028                     sprintf@val:	
   858                           
   859                           ; 2 bytes @ 0x8
   860  0028                     	ds	2
   861  002A                     ??_UART_INIT:	
   862  002A                     sprintf@sp:	
   863                           ; 1 bytes @ 0xA
   864                           
   865                           
   866                           ; 1 bytes @ 0xA
   867  002A                     	ds	1
   868  002B                     sprintf@prec:	
   869                           
   870                           ; 1 bytes @ 0xB
   871  002B                     	ds	1
   872  002C                     sprintf@c:	
   873                           
   874                           ; 1 bytes @ 0xC
   875  002C                     	ds	10
   876  0036                     ??_main:	
   877                           
   878                           ; 1 bytes @ 0x16
   879  0036                     	ds	3
   880                           
   881                           	psect	maintext
   882  0662                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 63 in file "main_m.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : B00/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         0       0       0       0       0
   904 ;;      Temps:          0       3       0       0       0
   905 ;;      Totals:         0       3       0       0       0
   906 ;;Total ram usage:        3 bytes
   907 ;; Hardware stack levels required when called:    3
   908 ;; This function calls:
   909 ;;		_LCD_cmd
   910 ;;		_LCD_msg
   911 ;;		_SPIMaster
   912 ;;		_UART_INIT
   913 ;;		___awdiv
   914 ;;		___wmul
   915 ;;		_inicio
   916 ;;		_setup
   917 ;;		_spiRead
   918 ;;		_spiWrite
   919 ;;		_sprintf
   920 ;; This function is called by:
   921 ;;		Startup code after reset
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _main
   927  0662                     _main:	
   928  0662                     l1786:	
   929                           ;incstack = 0
   930                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   931                           
   932                           
   933                           ;main_m.c: 65:     setup();
   934  0662  120A  118A  22E1  120A  118A  	fcall	_setup
   935                           
   936                           ;main_m.c: 66:     SPIMaster();
   937  0667  120A  118A  2236  120A  118A  	fcall	_SPIMaster
   938                           
   939                           ;main_m.c: 67:     UART_INIT(9600);
   940  066C  3000               	movlw	0
   941  066D  1283               	bcf	3,5	;RP0=0, select bank0
   942  066E  1303               	bcf	3,6	;RP1=0, select bank0
   943  066F  00A9               	movwf	UART_INIT@baudrate+3
   944  0670  3000               	movlw	0
   945  0671  00A8               	movwf	UART_INIT@baudrate+2
   946  0672  3025               	movlw	37
   947  0673  00A7               	movwf	UART_INIT@baudrate+1
   948  0674  3080               	movlw	128
   949  0675  00A6               	movwf	UART_INIT@baudrate
   950  0676  120A  118A  2396  120A  118A  	fcall	_UART_INIT
   951                           
   952                           ;main_m.c: 68:     inicio();
   953  067B  120A  118A  224E  120A  118A  	fcall	_inicio
   954  0680                     l1788:	
   955                           
   956                           ;main_m.c: 72:     LCD_msg("S1     S2     S3");
   957  0680  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   958  0681  00F3               	movwf	LCD_msg@c
   959  0682  3080               	movlw	128
   960  0683  00F4               	movwf	LCD_msg@c+1
   961  0684  120A  118A  2292  120A  118A  	fcall	_LCD_msg
   962  0689                     l1790:	
   963                           
   964                           ;main_m.c: 77:         PORTAbits.RA0 = 1;
   965  0689  1283               	bcf	3,5	;RP0=0, select bank0
   966  068A  1303               	bcf	3,6	;RP1=0, select bank0
   967  068B  1405               	bsf	5,0	;volatile
   968  068C                     l1792:	
   969                           
   970                           ;main_m.c: 78:         PORTAbits.RA1 = 1;
   971  068C  1485               	bsf	5,1	;volatile
   972  068D                     l1794:	
   973                           
   974                           ;main_m.c: 79:         PORTAbits.RA2 = 1;
   975  068D  1505               	bsf	5,2	;volatile
   976  068E                     l1796:	
   977                           
   978                           ;main_m.c: 80:         if (SSb1 == 1) {
   979  068E  034B               	decf	_SSb1,w
   980  068F  1D03               	btfss	3,2
   981  0690  2E92               	goto	u1281
   982  0691  2E93               	goto	u1280
   983  0692                     u1281:	
   984  0692  2EE9               	goto	l1816
   985  0693                     u1280:	
   986  0693                     l1798:	
   987                           
   988                           ;main_m.c: 81:             PORTAbits.RA0 = 0;
   989  0693  1005               	bcf	5,0	;volatile
   990  0694                     l1800:	
   991                           
   992                           ;main_m.c: 82:             _delay((unsigned long)((1)*(8000000/4000.0)));
   993  0694  3003               	movlw	3
   994  0695  1283               	bcf	3,5	;RP0=0, select bank0
   995  0696  1303               	bcf	3,6	;RP1=0, select bank0
   996  0697  00B7               	movwf	??_main+1
   997  0698  3097               	movlw	151
   998  0699  00B6               	movwf	??_main
   999  069A                     u1317:	
  1000  069A  0BB6               	decfsz	??_main,f
  1001  069B  2E9A               	goto	u1317
  1002  069C  0BB7               	decfsz	??_main+1,f
  1003  069D  2E9A               	goto	u1317
  1004  069E                     l1802:	
  1005                           
  1006                           ;main_m.c: 83:             spiWrite(1);
  1007  069E  3001               	movlw	1
  1008  069F  120A  118A  21C4  120A  118A  	fcall	_spiWrite
  1009  06A4                     l1804:	
  1010                           
  1011                           ;main_m.c: 84:             ADC1SL1 = spiRead();
  1012  06A4  120A  118A  21D2  120A  118A  	fcall	_spiRead
  1013  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1014  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1015  06AB  00B6               	movwf	??_main
  1016  06AC  0836               	movf	??_main,w
  1017  06AD  00BB               	movwf	_ADC1SL1
  1018  06AE                     l1806:	
  1019                           
  1020                           ;main_m.c: 85:             ADC1SL1 = (ADC1SL1 * 500) / 255;
  1021  06AE  30FF               	movlw	255
  1022  06AF  00F6               	movwf	___awdiv@divisor
  1023  06B0  3000               	movlw	0
  1024  06B1  00F7               	movwf	___awdiv@divisor+1
  1025  06B2  083B               	movf	_ADC1SL1,w
  1026  06B3  00B6               	movwf	??_main
  1027  06B4  01B7               	clrf	??_main+1
  1028  06B5  0836               	movf	??_main,w
  1029  06B6  00F0               	movwf	___wmul@multiplier
  1030  06B7  0837               	movf	??_main+1,w
  1031  06B8  00F1               	movwf	___wmul@multiplier+1
  1032  06B9  30F4               	movlw	244
  1033  06BA  00F2               	movwf	___wmul@multiplicand
  1034  06BB  3001               	movlw	1
  1035  06BC  00F3               	movwf	___wmul@multiplicand+1
  1036  06BD  120A  118A  226D  120A  118A  	fcall	___wmul
  1037  06C2  0871               	movf	?___wmul+1,w
  1038  06C3  00F9               	movwf	___awdiv@dividend+1
  1039  06C4  0870               	movf	?___wmul,w
  1040  06C5  00F8               	movwf	___awdiv@dividend
  1041  06C6  120A  118A  23F9  120A  118A  	fcall	___awdiv
  1042  06CB  0876               	movf	?___awdiv,w
  1043  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1044  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1045  06CE  00B8               	movwf	??_main+2
  1046  06CF  0838               	movf	??_main+2,w
  1047  06D0  00BB               	movwf	_ADC1SL1
  1048  06D1                     l1808:	
  1049                           
  1050                           ;main_m.c: 86:             PORTAbits.RA0 = 1;
  1051  06D1  1405               	bsf	5,0	;volatile
  1052  06D2                     l1810:	
  1053                           
  1054                           ;main_m.c: 87:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1055  06D2  3002               	movlw	2
  1056  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1057  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1058  06D5  00B8               	movwf	??_main+2
  1059  06D6  3004               	movlw	4
  1060  06D7  00B7               	movwf	??_main+1
  1061  06D8  30B9               	movlw	185
  1062  06D9  00B6               	movwf	??_main
  1063  06DA                     u1327:	
  1064  06DA  0BB6               	decfsz	??_main,f
  1065  06DB  2EDA               	goto	u1327
  1066  06DC  0BB7               	decfsz	??_main+1,f
  1067  06DD  2EDA               	goto	u1327
  1068  06DE  0BB8               	decfsz	??_main+2,f
  1069  06DF  2EDA               	goto	u1327
  1070  06E0  2EE1               	nop2
  1071  06E1                     l1812:	
  1072                           
  1073                           ;main_m.c: 88:             SSb1 = 2;
  1074  06E1  3002               	movlw	2
  1075  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1076  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1077  06E4  00B6               	movwf	??_main
  1078  06E5  0836               	movf	??_main,w
  1079  06E6  00CB               	movwf	_SSb1
  1080  06E7                     l1814:	
  1081                           
  1082                           ;main_m.c: 89:             PORTB=1;
  1083  06E7  3001               	movlw	1
  1084  06E8  0086               	movwf	6	;volatile
  1085  06E9                     l1816:	
  1086                           
  1087                           ;main_m.c: 91:         if (SSb1 == 2) {
  1088  06E9  3002               	movlw	2
  1089  06EA  064B               	xorwf	_SSb1,w
  1090  06EB  1D03               	btfss	3,2
  1091  06EC  2EEE               	goto	u1291
  1092  06ED  2EEF               	goto	u1290
  1093  06EE                     u1291:	
  1094  06EE  2F22               	goto	l1834
  1095  06EF                     u1290:	
  1096  06EF                     l1818:	
  1097                           
  1098                           ;main_m.c: 92:             PORTAbits.RA1 = 0;
  1099  06EF  1085               	bcf	5,1	;volatile
  1100  06F0                     l1820:	
  1101                           
  1102                           ;main_m.c: 93:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1103  06F0  3003               	movlw	3
  1104  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1105  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1106  06F3  00B7               	movwf	??_main+1
  1107  06F4  3097               	movlw	151
  1108  06F5  00B6               	movwf	??_main
  1109  06F6                     u1337:	
  1110  06F6  0BB6               	decfsz	??_main,f
  1111  06F7  2EF6               	goto	u1337
  1112  06F8  0BB7               	decfsz	??_main+1,f
  1113  06F9  2EF6               	goto	u1337
  1114  06FA                     l1822:	
  1115                           
  1116                           ;main_m.c: 94:             spiWrite(1);
  1117  06FA  3001               	movlw	1
  1118  06FB  120A  118A  21C4  120A  118A  	fcall	_spiWrite
  1119  0700                     l1824:	
  1120                           
  1121                           ;main_m.c: 95:             SL2 = spiRead();
  1122  0700  120A  118A  21D2  120A  118A  	fcall	_spiRead
  1123  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0707  00B6               	movwf	??_main
  1126  0708  0836               	movf	??_main,w
  1127  0709  00BA               	movwf	_SL2
  1128  070A                     l1826:	
  1129                           
  1130                           ;main_m.c: 96:             PORTAbits.RA1 = 1;
  1131  070A  1485               	bsf	5,1	;volatile
  1132  070B                     l1828:	
  1133                           
  1134                           ;main_m.c: 97:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1135  070B  3002               	movlw	2
  1136  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1137  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1138  070E  00B8               	movwf	??_main+2
  1139  070F  3004               	movlw	4
  1140  0710  00B7               	movwf	??_main+1
  1141  0711  30B9               	movlw	185
  1142  0712  00B6               	movwf	??_main
  1143  0713                     u1347:	
  1144  0713  0BB6               	decfsz	??_main,f
  1145  0714  2F13               	goto	u1347
  1146  0715  0BB7               	decfsz	??_main+1,f
  1147  0716  2F13               	goto	u1347
  1148  0717  0BB8               	decfsz	??_main+2,f
  1149  0718  2F13               	goto	u1347
  1150  0719  2F1A               	nop2
  1151  071A                     l1830:	
  1152                           
  1153                           ;main_m.c: 98:             SSb1 = 3;
  1154  071A  3003               	movlw	3
  1155  071B  1283               	bcf	3,5	;RP0=0, select bank0
  1156  071C  1303               	bcf	3,6	;RP1=0, select bank0
  1157  071D  00B6               	movwf	??_main
  1158  071E  0836               	movf	??_main,w
  1159  071F  00CB               	movwf	_SSb1
  1160  0720                     l1832:	
  1161                           
  1162                           ;main_m.c: 99:             PORTB=2;
  1163  0720  3002               	movlw	2
  1164  0721  0086               	movwf	6	;volatile
  1165  0722                     l1834:	
  1166                           
  1167                           ;main_m.c: 101:         if (SSb1 == 3) {
  1168  0722  3003               	movlw	3
  1169  0723  064B               	xorwf	_SSb1,w
  1170  0724  1D03               	btfss	3,2
  1171  0725  2F27               	goto	u1301
  1172  0726  2F28               	goto	u1300
  1173  0727                     u1301:	
  1174  0727  2F7A               	goto	l1852
  1175  0728                     u1300:	
  1176  0728                     l1836:	
  1177                           
  1178                           ;main_m.c: 102:             PORTAbits.RA2 = 0;
  1179  0728  1105               	bcf	5,2	;volatile
  1180  0729                     l1838:	
  1181                           
  1182                           ;main_m.c: 103:             _delay((unsigned long)((1)*(8000000/4000.0)));
  1183  0729  3003               	movlw	3
  1184  072A  1283               	bcf	3,5	;RP0=0, select bank0
  1185  072B  1303               	bcf	3,6	;RP1=0, select bank0
  1186  072C  00B7               	movwf	??_main+1
  1187  072D  3097               	movlw	151
  1188  072E  00B6               	movwf	??_main
  1189  072F                     u1357:	
  1190  072F  0BB6               	decfsz	??_main,f
  1191  0730  2F2F               	goto	u1357
  1192  0731  0BB7               	decfsz	??_main+1,f
  1193  0732  2F2F               	goto	u1357
  1194  0733                     l1840:	
  1195                           
  1196                           ;main_m.c: 104:             spiWrite(1);
  1197  0733  3001               	movlw	1
  1198  0734  120A  118A  21C4  120A  118A  	fcall	_spiWrite
  1199  0739                     l1842:	
  1200                           
  1201                           ;main_m.c: 105:             ADC1SL3 = spiRead();
  1202  0739  120A  118A  21D2  120A  118A  	fcall	_spiRead
  1203  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1204  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0740  00B6               	movwf	??_main
  1206  0741  0836               	movf	??_main,w
  1207  0742  00B9               	movwf	_ADC1SL3
  1208  0743                     l1844:	
  1209                           
  1210                           ;main_m.c: 106:             ADC1SL3 = (ADC1SL3 * 125) / 250;
  1211  0743  30FA               	movlw	250
  1212  0744  00F6               	movwf	___awdiv@divisor
  1213  0745  3000               	movlw	0
  1214  0746  00F7               	movwf	___awdiv@divisor+1
  1215  0747  0839               	movf	_ADC1SL3,w
  1216  0748  00B6               	movwf	??_main
  1217  0749  01B7               	clrf	??_main+1
  1218  074A  0836               	movf	??_main,w
  1219  074B  00F0               	movwf	___wmul@multiplier
  1220  074C  0837               	movf	??_main+1,w
  1221  074D  00F1               	movwf	___wmul@multiplier+1
  1222  074E  307D               	movlw	125
  1223  074F  00F2               	movwf	___wmul@multiplicand
  1224  0750  3000               	movlw	0
  1225  0751  00F3               	movwf	___wmul@multiplicand+1
  1226  0752  120A  118A  226D  120A  118A  	fcall	___wmul
  1227  0757  0871               	movf	?___wmul+1,w
  1228  0758  00F9               	movwf	___awdiv@dividend+1
  1229  0759  0870               	movf	?___wmul,w
  1230  075A  00F8               	movwf	___awdiv@dividend
  1231  075B  120A  118A  23F9  120A  118A  	fcall	___awdiv
  1232  0760  0876               	movf	?___awdiv,w
  1233  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0763  00B8               	movwf	??_main+2
  1236  0764  0838               	movf	??_main+2,w
  1237  0765  00B9               	movwf	_ADC1SL3
  1238  0766                     l1846:	
  1239                           
  1240                           ;main_m.c: 108:             PORTAbits.RA2 = 1;
  1241  0766  1505               	bsf	5,2	;volatile
  1242  0767                     l1848:	
  1243                           
  1244                           ;main_m.c: 109:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1245  0767  3002               	movlw	2
  1246  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1248  076A  00B8               	movwf	??_main+2
  1249  076B  3004               	movlw	4
  1250  076C  00B7               	movwf	??_main+1
  1251  076D  30B9               	movlw	185
  1252  076E  00B6               	movwf	??_main
  1253  076F                     u1367:	
  1254  076F  0BB6               	decfsz	??_main,f
  1255  0770  2F6F               	goto	u1367
  1256  0771  0BB7               	decfsz	??_main+1,f
  1257  0772  2F6F               	goto	u1367
  1258  0773  0BB8               	decfsz	??_main+2,f
  1259  0774  2F6F               	goto	u1367
  1260  0775  2F76               	nop2
  1261  0776                     l1850:	
  1262                           
  1263                           ;main_m.c: 110:             SSb1 = 1;
  1264  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0778  01CB               	clrf	_SSb1
  1267  0779  0ACB               	incf	_SSb1,f
  1268  077A                     l1852:	
  1269                           
  1270                           ;main_m.c: 112:         LCD_cmd(0xC0);
  1271  077A  30C0               	movlw	192
  1272  077B  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  1273  0780                     l1854:	
  1274                           
  1275                           ;main_m.c: 114:         sprintf(PSL1, "%.3i", ADC1SL1);
  1276  0780  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1277  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0783  00B6               	movwf	??_main
  1280  0784  0836               	movf	??_main,w
  1281  0785  00A0               	movwf	sprintf@f
  1282  0786  083B               	movf	_ADC1SL1,w
  1283  0787  00B7               	movwf	??_main+1
  1284  0788  01B8               	clrf	??_main+2
  1285  0789  0837               	movf	??_main+1,w
  1286  078A  00A1               	movwf	?_sprintf+1
  1287  078B  0838               	movf	??_main+2,w
  1288  078C  00A2               	movwf	?_sprintf+2
  1289  078D  3046               	movlw	(low (_PSL1| 0))& (0+255)
  1290  078E  120A  118A  24FF  120A  118A  	fcall	_sprintf
  1291  0793                     l1856:	
  1292                           
  1293                           ;main_m.c: 115:          LCD_msg(PSL1);
  1294  0793  3046               	movlw	(low (_PSL1| 0))& (0+255)
  1295  0794  00F3               	movwf	LCD_msg@c
  1296  0795  3000               	movlw	0
  1297  0796  00F4               	movwf	LCD_msg@c+1
  1298  0797  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1299  079C                     l1858:	
  1300                           
  1301                           ;main_m.c: 116:          LCD_msg(" V ");
  1302  079C  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1303  079D  00F3               	movwf	LCD_msg@c
  1304  079E  3080               	movlw	128
  1305  079F  00F4               	movwf	LCD_msg@c+1
  1306  07A0  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1307  07A5                     l1860:	
  1308                           
  1309                           ;main_m.c: 117:         sprintf(PSL2, "%.3i", SL2);
  1310  07A5  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1311  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1312  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1313  07A8  00B6               	movwf	??_main
  1314  07A9  0836               	movf	??_main,w
  1315  07AA  00A0               	movwf	sprintf@f
  1316  07AB  083A               	movf	_SL2,w
  1317  07AC  00B7               	movwf	??_main+1
  1318  07AD  01B8               	clrf	??_main+2
  1319  07AE  0837               	movf	??_main+1,w
  1320  07AF  00A1               	movwf	?_sprintf+1
  1321  07B0  0838               	movf	??_main+2,w
  1322  07B1  00A2               	movwf	?_sprintf+2
  1323  07B2  3041               	movlw	(low (_PSL2| 0))& (0+255)
  1324  07B3  120A  118A  24FF  120A  118A  	fcall	_sprintf
  1325  07B8                     l1862:	
  1326                           
  1327                           ;main_m.c: 118:          LCD_msg(PSL2);
  1328  07B8  3041               	movlw	(low (_PSL2| 0))& (0+255)
  1329  07B9  00F3               	movwf	LCD_msg@c
  1330  07BA  3000               	movlw	0
  1331  07BB  00F4               	movwf	LCD_msg@c+1
  1332  07BC  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1333  07C1                     l1864:	
  1334                           
  1335                           ;main_m.c: 119:          LCD_msg("   ");
  1336  07C1  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1337  07C2  00F3               	movwf	LCD_msg@c
  1338  07C3  3080               	movlw	128
  1339  07C4  00F4               	movwf	LCD_msg@c+1
  1340  07C5  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1341  07CA                     l1866:	
  1342                           
  1343                           ;main_m.c: 120:         sprintf(PSL3, "%.3i", ADC1SL3);
  1344  07CA  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1345  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1346  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1347  07CD  00B6               	movwf	??_main
  1348  07CE  0836               	movf	??_main,w
  1349  07CF  00A0               	movwf	sprintf@f
  1350  07D0  0839               	movf	_ADC1SL3,w
  1351  07D1  00B7               	movwf	??_main+1
  1352  07D2  01B8               	clrf	??_main+2
  1353  07D3  0837               	movf	??_main+1,w
  1354  07D4  00A1               	movwf	?_sprintf+1
  1355  07D5  0838               	movf	??_main+2,w
  1356  07D6  00A2               	movwf	?_sprintf+2
  1357  07D7  303C               	movlw	(low (_PSL3| 0))& (0+255)
  1358  07D8  120A  118A  24FF  120A  118A  	fcall	_sprintf
  1359  07DD                     l1868:	
  1360                           
  1361                           ;main_m.c: 121:          LCD_msg(PSL3);
  1362  07DD  303C               	movlw	(low (_PSL3| 0))& (0+255)
  1363  07DE  00F3               	movwf	LCD_msg@c
  1364  07DF  3000               	movlw	0
  1365  07E0  00F4               	movwf	LCD_msg@c+1
  1366  07E1  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1367  07E6                     l1870:	
  1368                           
  1369                           ;main_m.c: 122:          LCD_msg("C ");
  1370  07E6  3029               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1371  07E7  00F3               	movwf	LCD_msg@c
  1372  07E8  3080               	movlw	128
  1373  07E9  00F4               	movwf	LCD_msg@c+1
  1374  07EA  120A  118A  2292  120A  118A  	fcall	_LCD_msg
  1375  07EF  2E89               	goto	l1790
  1376  07F0  120A  118A  2800   	ljmp	start
  1377  07F3                     __end_of_main:	
  1378                           
  1379                           	psect	text1
  1380  04FF                     __ptext1:	
  1381 ;; *************** function _sprintf *****************
  1382 ;; Defined at:
  1383 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  sp              1    wreg     PTR unsigned char 
  1386 ;;		 -> PSL3(5), PSL2(5), PSL1(5), 
  1387 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1388 ;;		 -> STR_6(5), STR_4(5), STR_2(5), 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  sp              1   10[BANK0 ] PTR unsigned char 
  1391 ;;		 -> PSL3(5), PSL2(5), PSL1(5), 
  1392 ;;  tmpval          4    0        struct .
  1393 ;;  val             2    8[BANK0 ] unsigned int 
  1394 ;;  cp              2    0        PTR const unsigned char 
  1395 ;;  len             2    0        unsigned int 
  1396 ;;  c               1   12[BANK0 ] unsigned char 
  1397 ;;  prec            1   11[BANK0 ] char 
  1398 ;;  flag            1    7[BANK0 ] unsigned char 
  1399 ;;  ap              1    6[BANK0 ] PTR void [1]
  1400 ;;		 -> ?_sprintf(2), 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  2    0[BANK0 ] int 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       3       0       0       0
  1411 ;;      Locals:         0       7       0       0       0
  1412 ;;      Temps:          0       3       0       0       0
  1413 ;;      Totals:         0      13       0       0       0
  1414 ;;Total ram usage:       13 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    1
  1417 ;; This function calls:
  1418 ;;		___bmul
  1419 ;;		___lwdiv
  1420 ;;		___lwmod
  1421 ;;		_isdigit
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _sprintf
  1429  04FF                     _sprintf:	
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1433                           ;sprintf@sp stored from wreg
  1434  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0501  00AA               	movwf	sprintf@sp
  1437  0502                     l1638:	
  1438                           
  1439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  1440  0502  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1441  0503  00A3               	movwf	??_sprintf
  1442  0504  0823               	movf	??_sprintf,w
  1443  0505  00A6               	movwf	sprintf@ap
  1444                           
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1446  0506  2E4B               	goto	l1716
  1447  0507                     l1640:	
  1448                           
  1449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1450  0507  3025               	movlw	37
  1451  0508  062C               	xorwf	sprintf@c,w
  1452  0509  1903               	btfsc	3,2
  1453  050A  2D0C               	goto	u1011
  1454  050B  2D0D               	goto	u1010
  1455  050C                     u1011:	
  1456  050C  2D19               	goto	l1646
  1457  050D                     u1010:	
  1458  050D                     l1642:	
  1459                           
  1460                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1461  050D  082C               	movf	sprintf@c,w
  1462  050E  00A3               	movwf	??_sprintf
  1463  050F  082A               	movf	sprintf@sp,w
  1464  0510  0084               	movwf	4
  1465  0511  0823               	movf	??_sprintf,w
  1466  0512  1383               	bcf	3,7	;select IRP bank0
  1467  0513  0080               	movwf	0
  1468  0514                     l1644:	
  1469  0514  3001               	movlw	1
  1470  0515  00A3               	movwf	??_sprintf
  1471  0516  0823               	movf	??_sprintf,w
  1472  0517  07AA               	addwf	sprintf@sp,f
  1473                           
  1474                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1475  0518  2E4B               	goto	l1716
  1476  0519                     l1646:	
  1477                           
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1479  0519  01A7               	clrf	sprintf@flag
  1480  051A                     l1648:	
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1483  051A  0820               	movf	sprintf@f,w
  1484  051B  0084               	movwf	4
  1485  051C  120A  118A  200D  120A  118A  	fcall	stringdir
  1486  0521  3A2E               	xorlw	46
  1487  0522  1D03               	skipz
  1488  0523  2D25               	goto	u1021
  1489  0524  2D26               	goto	u1020
  1490  0525                     u1021:	
  1491  0525  2D5D               	goto	l1662
  1492  0526                     u1020:	
  1493  0526                     l1650:	
  1494                           
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1496  0526  3001               	movlw	1
  1497  0527  00A3               	movwf	??_sprintf
  1498  0528  0823               	movf	??_sprintf,w
  1499  0529  07A0               	addwf	sprintf@f,f
  1500  052A                     l1652:	
  1501                           
  1502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1503  052A  01AB               	clrf	sprintf@prec
  1504                           
  1505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1506  052B  2D4C               	goto	l1660
  1507  052C                     l1654:	
  1508                           
  1509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1510  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1511  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1512  052E  082B               	movf	sprintf@prec,w
  1513  052F  00A3               	movwf	??_sprintf
  1514  0530  0823               	movf	??_sprintf,w
  1515  0531  00F0               	movwf	___bmul@multiplicand
  1516  0532  300A               	movlw	10
  1517  0533  120A  118A  2221  120A  118A  	fcall	___bmul
  1518  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1520  053A  00A4               	movwf	??_sprintf+1
  1521  053B  0824               	movf	??_sprintf+1,w
  1522  053C  00AB               	movwf	sprintf@prec
  1523  053D                     l1656:	
  1524                           
  1525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1526  053D  0820               	movf	sprintf@f,w
  1527  053E  0084               	movwf	4
  1528  053F  120A  118A  200D  120A  118A  	fcall	stringdir
  1529  0544  3ED0               	addlw	-48
  1530  0545  00A3               	movwf	??_sprintf
  1531  0546  0823               	movf	??_sprintf,w
  1532  0547  07AB               	addwf	sprintf@prec,f
  1533  0548                     l1658:	
  1534  0548  3001               	movlw	1
  1535  0549  00A3               	movwf	??_sprintf
  1536  054A  0823               	movf	??_sprintf,w
  1537  054B  07A0               	addwf	sprintf@f,f
  1538  054C                     l1660:	
  1539                           
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1541  054C  0820               	movf	sprintf@f,w
  1542  054D  0084               	movwf	4
  1543  054E  120A  118A  200D  120A  118A  	fcall	stringdir
  1544  0553  120A  118A  220F  120A  118A  	fcall	_isdigit
  1545  0558  1803               	btfsc	3,0
  1546  0559  2D5B               	goto	u1031
  1547  055A  2D5C               	goto	u1030
  1548  055B                     u1031:	
  1549  055B  2D2C               	goto	l1654
  1550  055C                     u1030:	
  1551  055C  2D5E               	goto	l1666
  1552  055D                     l1662:	
  1553                           
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1555  055D  01AB               	clrf	sprintf@prec
  1556  055E                     l1666:	
  1557  055E  3001               	movlw	1
  1558  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0561  07A0               	addwf	sprintf@f,f
  1561  0562  30FF               	movlw	-1
  1562  0563  0720               	addwf	sprintf@f,w
  1563  0564  0084               	movwf	4
  1564  0565  120A  118A  200D  120A  118A  	fcall	stringdir
  1565  056A  00AC               	movwf	sprintf@c
  1566  056B  00A3               	movwf	??_sprintf
  1567  056C  01A4               	clrf	??_sprintf+1
  1568                           
  1569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1570                           ; Switch size 1, requested type "simple"
  1571                           ; Number of cases is 1, Range of values is 0 to 0
  1572                           ; switch strategies available:
  1573                           ; Name         Instructions Cycles
  1574                           ; simple_byte            4     3 (average)
  1575                           ; direct_byte           11     8 (fixed)
  1576                           ; jumptable            260     6 (fixed)
  1577                           ;	Chosen strategy is simple_byte
  1578  056D  0824               	movf	??_sprintf+1,w
  1579  056E  3A00               	xorlw	0	; case 0
  1580  056F  1903               	skipnz
  1581  0570  2D72               	goto	l1902
  1582  0571  2E4B               	goto	l1716
  1583  0572                     l1902:	
  1584                           
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 3, Range of values is 0 to 105
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte           10     6 (average)
  1590                           ; jumptable            260     6 (fixed)
  1591                           ;	Chosen strategy is simple_byte
  1592  0572  0823               	movf	??_sprintf,w
  1593  0573  3A00               	xorlw	0	; case 0
  1594  0574  1903               	skipnz
  1595  0575  2E5D               	goto	l1718
  1596  0576  3A64               	xorlw	100	; case 100
  1597  0577  1903               	skipnz
  1598  0578  2D7D               	goto	l1668
  1599  0579  3A0D               	xorlw	13	; case 105
  1600  057A  1903               	skipnz
  1601  057B  2D7D               	goto	l1668
  1602  057C  2E4B               	goto	l1716
  1603  057D                     l1668:	
  1604                           
  1605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1606  057D  0826               	movf	sprintf@ap,w
  1607  057E  0084               	movwf	4
  1608  057F  1383               	bcf	3,7	;select IRP bank0
  1609  0580  0800               	movf	0,w
  1610  0581  00A8               	movwf	sprintf@val
  1611  0582  0A84               	incf	4,f
  1612  0583  0800               	movf	0,w
  1613  0584  00A9               	movwf	sprintf@val+1
  1614  0585                     l1670:	
  1615  0585  3002               	movlw	2
  1616  0586  00A3               	movwf	??_sprintf
  1617  0587  0823               	movf	??_sprintf,w
  1618  0588  07A6               	addwf	sprintf@ap,f
  1619  0589                     l1672:	
  1620                           
  1621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  1622  0589  1FA9               	btfss	sprintf@val+1,7
  1623  058A  2D8C               	goto	u1041
  1624  058B  2D8D               	goto	u1040
  1625  058C                     u1041:	
  1626  058C  2D96               	goto	l1678
  1627  058D                     u1040:	
  1628  058D                     l1674:	
  1629                           
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  1631  058D  3003               	movlw	3
  1632  058E  00A3               	movwf	??_sprintf
  1633  058F  0823               	movf	??_sprintf,w
  1634  0590  04A7               	iorwf	sprintf@flag,f
  1635  0591                     l1676:	
  1636                           
  1637                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  1638  0591  09A8               	comf	sprintf@val,f
  1639  0592  09A9               	comf	sprintf@val+1,f
  1640  0593  0AA8               	incf	sprintf@val,f
  1641  0594  1903               	skipnz
  1642  0595  0AA9               	incf	sprintf@val+1,f
  1643  0596                     l1678:	
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
  1646  0596  082B               	movf	sprintf@prec,w
  1647  0597  1D03               	btfss	3,2
  1648  0598  2D9A               	goto	u1051
  1649  0599  2D9B               	goto	u1050
  1650  059A                     u1051:	
  1651  059A  2DA5               	goto	l1684
  1652  059B                     u1050:	
  1653  059B                     l1680:	
  1654  059B  0828               	movf	sprintf@val,w
  1655  059C  0429               	iorwf	sprintf@val+1,w
  1656  059D  1D03               	btfss	3,2
  1657  059E  2DA0               	goto	u1061
  1658  059F  2DA1               	goto	u1060
  1659  05A0                     u1061:	
  1660  05A0  2DA5               	goto	l1684
  1661  05A1                     u1060:	
  1662  05A1                     l1682:	
  1663                           
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  1665  05A1  3001               	movlw	1
  1666  05A2  00A3               	movwf	??_sprintf
  1667  05A3  0823               	movf	??_sprintf,w
  1668  05A4  07AB               	addwf	sprintf@prec,f
  1669  05A5                     l1684:	
  1670                           
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1672  05A5  01AC               	clrf	sprintf@c
  1673  05A6  0AAC               	incf	sprintf@c,f
  1674  05A7                     l1688:	
  1675                           
  1676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  1677  05A7  082C               	movf	sprintf@c,w
  1678  05A8  00A3               	movwf	??_sprintf
  1679  05A9  0723               	addwf	??_sprintf,w
  1680  05AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1681  05AB  0084               	movwf	4
  1682  05AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1683  05B1  00A4               	movwf	??_sprintf+1
  1684  05B2  120A  118A  200D  120A  118A  	fcall	stringdir
  1685  05B7  00A5               	movwf	??_sprintf+2
  1686  05B8  0825               	movf	??_sprintf+2,w
  1687  05B9  0229               	subwf	sprintf@val+1,w
  1688  05BA  1D03               	skipz
  1689  05BB  2DBE               	goto	u1075
  1690  05BC  0824               	movf	??_sprintf+1,w
  1691  05BD  0228               	subwf	sprintf@val,w
  1692  05BE                     u1075:	
  1693  05BE  1803               	skipnc
  1694  05BF  2DC1               	goto	u1071
  1695  05C0  2DC2               	goto	u1070
  1696  05C1                     u1071:	
  1697  05C1  2DC3               	goto	l1692
  1698  05C2                     u1070:	
  1699  05C2  2DCD               	goto	l1694
  1700  05C3                     l1692:	
  1701  05C3  3001               	movlw	1
  1702  05C4  00A3               	movwf	??_sprintf
  1703  05C5  0823               	movf	??_sprintf,w
  1704  05C6  07AC               	addwf	sprintf@c,f
  1705  05C7  3005               	movlw	5
  1706  05C8  062C               	xorwf	sprintf@c,w
  1707  05C9  1D03               	btfss	3,2
  1708  05CA  2DCC               	goto	u1081
  1709  05CB  2DCD               	goto	u1080
  1710  05CC                     u1081:	
  1711  05CC  2DA7               	goto	l1688
  1712  05CD                     u1080:	
  1713  05CD                     l1694:	
  1714                           
  1715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  1716  05CD  082B               	movf	sprintf@prec,w
  1717  05CE  00A3               	movwf	??_sprintf
  1718  05CF  01A4               	clrf	??_sprintf+1
  1719  05D0  1BA3               	btfsc	??_sprintf,7
  1720  05D1  03A4               	decf	??_sprintf+1,f
  1721  05D2  0824               	movf	??_sprintf+1,w
  1722  05D3  3A80               	xorlw	128
  1723  05D4  3C80               	sublw	128
  1724  05D5  1D03               	skipz
  1725  05D6  2DD9               	goto	u1095
  1726  05D7  0823               	movf	??_sprintf,w
  1727  05D8  022C               	subwf	sprintf@c,w
  1728  05D9                     u1095:	
  1729  05D9  1803               	skipnc
  1730  05DA  2DDC               	goto	u1091
  1731  05DB  2DDD               	goto	u1090
  1732  05DC                     u1091:	
  1733  05DC  2DDE               	goto	l1698
  1734  05DD                     u1090:	
  1735  05DD                     l1696:	
  1736  05DD  2DF8               	goto	l1702
  1737  05DE                     l1698:	
  1738  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1739  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1740  05E0  082B               	movf	sprintf@prec,w
  1741  05E1  00A3               	movwf	??_sprintf
  1742  05E2  01A4               	clrf	??_sprintf+1
  1743  05E3  1BA3               	btfsc	??_sprintf,7
  1744  05E4  03A4               	decf	??_sprintf+1,f
  1745  05E5  0824               	movf	??_sprintf+1,w
  1746  05E6  3A80               	xorlw	128
  1747  05E7  00A5               	movwf	??_sprintf+2
  1748  05E8  3080               	movlw	128
  1749  05E9  0225               	subwf	??_sprintf+2,w
  1750  05EA  1D03               	skipz
  1751  05EB  2DEE               	goto	u1105
  1752  05EC  082C               	movf	sprintf@c,w
  1753  05ED  0223               	subwf	??_sprintf,w
  1754  05EE                     u1105:	
  1755  05EE  1803               	skipnc
  1756  05EF  2DF1               	goto	u1101
  1757  05F0  2DF2               	goto	u1100
  1758  05F1                     u1101:	
  1759  05F1  2DF8               	goto	l1702
  1760  05F2                     u1100:	
  1761  05F2                     l1700:	
  1762                           
  1763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  1764  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1765  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1766  05F4  082C               	movf	sprintf@c,w
  1767  05F5  00A3               	movwf	??_sprintf
  1768  05F6  0823               	movf	??_sprintf,w
  1769  05F7  00AB               	movwf	sprintf@prec
  1770  05F8                     l1702:	
  1771                           
  1772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  1773  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1774  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1775  05FA  0827               	movf	sprintf@flag,w
  1776  05FB  3903               	andlw	3
  1777  05FC  1903               	btfsc	3,2
  1778  05FD  2DFF               	goto	u1111
  1779  05FE  2E00               	goto	u1110
  1780  05FF                     u1111:	
  1781  05FF  2E42               	goto	l1714
  1782  0600                     u1110:	
  1783  0600                     l1704:	
  1784                           
  1785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  1786  0600  302D               	movlw	45
  1787  0601  00A3               	movwf	??_sprintf
  1788  0602  082A               	movf	sprintf@sp,w
  1789  0603  0084               	movwf	4
  1790  0604  0823               	movf	??_sprintf,w
  1791  0605  1383               	bcf	3,7	;select IRP bank0
  1792  0606  0080               	movwf	0
  1793  0607                     l1706:	
  1794  0607  3001               	movlw	1
  1795  0608  00A3               	movwf	??_sprintf
  1796  0609  0823               	movf	??_sprintf,w
  1797  060A  07AA               	addwf	sprintf@sp,f
  1798  060B  2E42               	goto	l1714
  1799  060C                     l1708:	
  1800                           
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  1802  060C  300A               	movlw	10
  1803  060D  00F8               	movwf	___lwmod@divisor
  1804  060E  3000               	movlw	0
  1805  060F  00F9               	movwf	___lwmod@divisor+1
  1806  0610  082B               	movf	sprintf@prec,w
  1807  0611  00A3               	movwf	??_sprintf
  1808  0612  0723               	addwf	??_sprintf,w
  1809  0613  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1810  0614  0084               	movwf	4
  1811  0615  120A  118A  200D  120A  118A  	fcall	stringdir
  1812  061A  00F0               	movwf	___lwdiv@divisor
  1813  061B  120A  118A  200D  120A  118A  	fcall	stringdir
  1814  0620  00F1               	movwf	___lwdiv@divisor+1
  1815  0621  0829               	movf	sprintf@val+1,w
  1816  0622  00F3               	movwf	___lwdiv@dividend+1
  1817  0623  0828               	movf	sprintf@val,w
  1818  0624  00F2               	movwf	___lwdiv@dividend
  1819  0625  120A  118A  2352  120A  118A  	fcall	___lwdiv
  1820  062A  0871               	movf	?___lwdiv+1,w
  1821  062B  00FB               	movwf	___lwmod@dividend+1
  1822  062C  0870               	movf	?___lwdiv,w
  1823  062D  00FA               	movwf	___lwmod@dividend
  1824  062E  120A  118A  2318  120A  118A  	fcall	___lwmod
  1825  0633  0878               	movf	?___lwmod,w
  1826  0634  3E30               	addlw	48
  1827  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0637  00A4               	movwf	??_sprintf+1
  1830  0638  0824               	movf	??_sprintf+1,w
  1831  0639  00AC               	movwf	sprintf@c
  1832  063A                     l1710:	
  1833                           
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  1835  063A  082C               	movf	sprintf@c,w
  1836  063B  00A3               	movwf	??_sprintf
  1837  063C  082A               	movf	sprintf@sp,w
  1838  063D  0084               	movwf	4
  1839  063E  0823               	movf	??_sprintf,w
  1840  063F  1383               	bcf	3,7	;select IRP bank0
  1841  0640  0080               	movwf	0
  1842  0641  2E07               	goto	l1706
  1843  0642                     l1714:	
  1844                           
  1845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  1846  0642  30FF               	movlw	255
  1847  0643  00A3               	movwf	??_sprintf
  1848  0644  0823               	movf	??_sprintf,w
  1849  0645  07AB               	addwf	sprintf@prec,f
  1850  0646  0A2B               	incf	sprintf@prec,w
  1851  0647  1D03               	btfss	3,2
  1852  0648  2E4A               	goto	u1121
  1853  0649  2E4B               	goto	u1120
  1854  064A                     u1121:	
  1855  064A  2E0C               	goto	l1708
  1856  064B                     u1120:	
  1857  064B                     l1716:	
  1858                           
  1859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1860  064B  3001               	movlw	1
  1861  064C  07A0               	addwf	sprintf@f,f
  1862  064D  30FF               	movlw	-1
  1863  064E  0720               	addwf	sprintf@f,w
  1864  064F  0084               	movwf	4
  1865  0650  120A  118A  200D  120A  118A  	fcall	stringdir
  1866  0655  00A3               	movwf	??_sprintf
  1867  0656  0823               	movf	??_sprintf,w
  1868  0657  00AC               	movwf	sprintf@c
  1869  0658  082C               	movf	sprintf@c,w
  1870  0659  1D03               	btfss	3,2
  1871  065A  2E5C               	goto	u1131
  1872  065B  2E5D               	goto	u1130
  1873  065C                     u1131:	
  1874  065C  2D07               	goto	l1640
  1875  065D                     u1130:	
  1876  065D                     l1718:	
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  1879  065D  082A               	movf	sprintf@sp,w
  1880  065E  0084               	movwf	4
  1881  065F  1383               	bcf	3,7	;select IRP bank0
  1882  0660  0180               	clrf	0
  1883  0661                     l317:	
  1884  0661  0008               	return
  1885  0662                     __end_of_sprintf:	
  1886                           
  1887                           	psect	text2
  1888  020F                     __ptext2:	
  1889 ;; *************** function _isdigit *****************
  1890 ;; Defined at:
  1891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  c               1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  c               1    1[COMMON] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;		None               void
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         2       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         2       0       0       0       0
  1909 ;;Total ram usage:        2 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_sprintf
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _isdigit
  1920  020F                     _isdigit:	
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1924                           ;isdigit@c stored from wreg
  1925  020F  00F1               	movwf	isdigit@c
  1926  0210                     l1430:	
  1927  0210  01F0               	clrf	_isdigit$1130
  1928  0211                     l1432:	
  1929  0211  303A               	movlw	58
  1930  0212  0271               	subwf	isdigit@c,w
  1931  0213  1803               	skipnc
  1932  0214  2A16               	goto	u691
  1933  0215  2A17               	goto	u690
  1934  0216                     u691:	
  1935  0216  2A1F               	goto	l1438
  1936  0217                     u690:	
  1937  0217                     l1434:	
  1938  0217  3030               	movlw	48
  1939  0218  0271               	subwf	isdigit@c,w
  1940  0219  1C03               	skipc
  1941  021A  2A1C               	goto	u701
  1942  021B  2A1D               	goto	u700
  1943  021C                     u701:	
  1944  021C  2A1F               	goto	l1438
  1945  021D                     u700:	
  1946  021D                     l1436:	
  1947  021D  01F0               	clrf	_isdigit$1130
  1948  021E  0AF0               	incf	_isdigit$1130,f
  1949  021F                     l1438:	
  1950  021F  0C70               	rrf	_isdigit$1130,w
  1951  0220                     l768:	
  1952  0220  0008               	return
  1953  0221                     __end_of_isdigit:	
  1954                           
  1955                           	psect	text3
  1956  0318                     __ptext3:	
  1957 ;; *************** function ___lwmod *****************
  1958 ;; Defined at:
  1959 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  divisor         2    8[COMMON] unsigned int 
  1962 ;;  dividend        2   10[COMMON] unsigned int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  counter         1   13[COMMON] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  2    8[COMMON] unsigned int 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         4       0       0       0       0
  1975 ;;      Locals:         1       0       0       0       0
  1976 ;;      Temps:          1       0       0       0       0
  1977 ;;      Totals:         6       0       0       0       0
  1978 ;;Total ram usage:        6 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_sprintf
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function ___lwmod
  1989  0318                     ___lwmod:	
  1990  0318                     l1522:	
  1991                           ;incstack = 0
  1992                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1993                           
  1994  0318  0878               	movf	___lwmod@divisor,w
  1995  0319  0479               	iorwf	___lwmod@divisor+1,w
  1996  031A  1903               	btfsc	3,2
  1997  031B  2B1D               	goto	u901
  1998  031C  2B1E               	goto	u900
  1999  031D                     u901:	
  2000  031D  2B4D               	goto	l1540
  2001  031E                     u900:	
  2002  031E                     l1524:	
  2003  031E  01FD               	clrf	___lwmod@counter
  2004  031F  0AFD               	incf	___lwmod@counter,f
  2005  0320  2B2C               	goto	l1530
  2006  0321                     l1526:	
  2007  0321  3001               	movlw	1
  2008  0322                     u915:	
  2009  0322  1003               	clrc
  2010  0323  0DF8               	rlf	___lwmod@divisor,f
  2011  0324  0DF9               	rlf	___lwmod@divisor+1,f
  2012  0325  3EFF               	addlw	-1
  2013  0326  1D03               	skipz
  2014  0327  2B22               	goto	u915
  2015  0328                     l1528:	
  2016  0328  3001               	movlw	1
  2017  0329  00FC               	movwf	??___lwmod
  2018  032A  087C               	movf	??___lwmod,w
  2019  032B  07FD               	addwf	___lwmod@counter,f
  2020  032C                     l1530:	
  2021  032C  1FF9               	btfss	___lwmod@divisor+1,7
  2022  032D  2B2F               	goto	u921
  2023  032E  2B30               	goto	u920
  2024  032F                     u921:	
  2025  032F  2B21               	goto	l1526
  2026  0330                     u920:	
  2027  0330                     l1532:	
  2028  0330  0879               	movf	___lwmod@divisor+1,w
  2029  0331  027B               	subwf	___lwmod@dividend+1,w
  2030  0332  1D03               	skipz
  2031  0333  2B36               	goto	u935
  2032  0334  0878               	movf	___lwmod@divisor,w
  2033  0335  027A               	subwf	___lwmod@dividend,w
  2034  0336                     u935:	
  2035  0336  1C03               	skipc
  2036  0337  2B39               	goto	u931
  2037  0338  2B3A               	goto	u930
  2038  0339                     u931:	
  2039  0339  2B40               	goto	l1536
  2040  033A                     u930:	
  2041  033A                     l1534:	
  2042  033A  0878               	movf	___lwmod@divisor,w
  2043  033B  02FA               	subwf	___lwmod@dividend,f
  2044  033C  0879               	movf	___lwmod@divisor+1,w
  2045  033D  1C03               	skipc
  2046  033E  03FB               	decf	___lwmod@dividend+1,f
  2047  033F  02FB               	subwf	___lwmod@dividend+1,f
  2048  0340                     l1536:	
  2049  0340  3001               	movlw	1
  2050  0341                     u945:	
  2051  0341  1003               	clrc
  2052  0342  0CF9               	rrf	___lwmod@divisor+1,f
  2053  0343  0CF8               	rrf	___lwmod@divisor,f
  2054  0344  3EFF               	addlw	-1
  2055  0345  1D03               	skipz
  2056  0346  2B41               	goto	u945
  2057  0347                     l1538:	
  2058  0347  3001               	movlw	1
  2059  0348  02FD               	subwf	___lwmod@counter,f
  2060  0349  1D03               	btfss	3,2
  2061  034A  2B4C               	goto	u951
  2062  034B  2B4D               	goto	u950
  2063  034C                     u951:	
  2064  034C  2B30               	goto	l1532
  2065  034D                     u950:	
  2066  034D                     l1540:	
  2067  034D  087B               	movf	___lwmod@dividend+1,w
  2068  034E  00F9               	movwf	?___lwmod+1
  2069  034F  087A               	movf	___lwmod@dividend,w
  2070  0350  00F8               	movwf	?___lwmod
  2071  0351                     l603:	
  2072  0351  0008               	return
  2073  0352                     __end_of___lwmod:	
  2074                           
  2075                           	psect	text4
  2076  0352                     __ptext4:	
  2077 ;; *************** function ___lwdiv *****************
  2078 ;; Defined at:
  2079 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  divisor         2    0[COMMON] unsigned int 
  2082 ;;  dividend        2    2[COMMON] unsigned int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  quotient        2    5[COMMON] unsigned int 
  2085 ;;  counter         1    7[COMMON] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2    0[COMMON] unsigned int 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2095 ;;      Params:         4       0       0       0       0
  2096 ;;      Locals:         3       0       0       0       0
  2097 ;;      Temps:          1       0       0       0       0
  2098 ;;      Totals:         8       0       0       0       0
  2099 ;;Total ram usage:        8 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_sprintf
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           
  2109                           ;psect for function ___lwdiv
  2110  0352                     ___lwdiv:	
  2111  0352                     l1496:	
  2112                           ;incstack = 0
  2113                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2114                           
  2115  0352  01F5               	clrf	___lwdiv@quotient
  2116  0353  01F6               	clrf	___lwdiv@quotient+1
  2117  0354                     l1498:	
  2118  0354  0870               	movf	___lwdiv@divisor,w
  2119  0355  0471               	iorwf	___lwdiv@divisor+1,w
  2120  0356  1903               	btfsc	3,2
  2121  0357  2B59               	goto	u831
  2122  0358  2B5A               	goto	u830
  2123  0359                     u831:	
  2124  0359  2B91               	goto	l1518
  2125  035A                     u830:	
  2126  035A                     l1500:	
  2127  035A  01F7               	clrf	___lwdiv@counter
  2128  035B  0AF7               	incf	___lwdiv@counter,f
  2129  035C  2B68               	goto	l1506
  2130  035D                     l1502:	
  2131  035D  3001               	movlw	1
  2132  035E                     u845:	
  2133  035E  1003               	clrc
  2134  035F  0DF0               	rlf	___lwdiv@divisor,f
  2135  0360  0DF1               	rlf	___lwdiv@divisor+1,f
  2136  0361  3EFF               	addlw	-1
  2137  0362  1D03               	skipz
  2138  0363  2B5E               	goto	u845
  2139  0364                     l1504:	
  2140  0364  3001               	movlw	1
  2141  0365  00F4               	movwf	??___lwdiv
  2142  0366  0874               	movf	??___lwdiv,w
  2143  0367  07F7               	addwf	___lwdiv@counter,f
  2144  0368                     l1506:	
  2145  0368  1FF1               	btfss	___lwdiv@divisor+1,7
  2146  0369  2B6B               	goto	u851
  2147  036A  2B6C               	goto	u850
  2148  036B                     u851:	
  2149  036B  2B5D               	goto	l1502
  2150  036C                     u850:	
  2151  036C                     l1508:	
  2152  036C  3001               	movlw	1
  2153  036D                     u865:	
  2154  036D  1003               	clrc
  2155  036E  0DF5               	rlf	___lwdiv@quotient,f
  2156  036F  0DF6               	rlf	___lwdiv@quotient+1,f
  2157  0370  3EFF               	addlw	-1
  2158  0371  1D03               	skipz
  2159  0372  2B6D               	goto	u865
  2160  0373  0871               	movf	___lwdiv@divisor+1,w
  2161  0374  0273               	subwf	___lwdiv@dividend+1,w
  2162  0375  1D03               	skipz
  2163  0376  2B79               	goto	u875
  2164  0377  0870               	movf	___lwdiv@divisor,w
  2165  0378  0272               	subwf	___lwdiv@dividend,w
  2166  0379                     u875:	
  2167  0379  1C03               	skipc
  2168  037A  2B7C               	goto	u871
  2169  037B  2B7D               	goto	u870
  2170  037C                     u871:	
  2171  037C  2B84               	goto	l1514
  2172  037D                     u870:	
  2173  037D                     l1510:	
  2174  037D  0870               	movf	___lwdiv@divisor,w
  2175  037E  02F2               	subwf	___lwdiv@dividend,f
  2176  037F  0871               	movf	___lwdiv@divisor+1,w
  2177  0380  1C03               	skipc
  2178  0381  03F3               	decf	___lwdiv@dividend+1,f
  2179  0382  02F3               	subwf	___lwdiv@dividend+1,f
  2180  0383                     l1512:	
  2181  0383  1475               	bsf	___lwdiv@quotient,0
  2182  0384                     l1514:	
  2183  0384  3001               	movlw	1
  2184  0385                     u885:	
  2185  0385  1003               	clrc
  2186  0386  0CF1               	rrf	___lwdiv@divisor+1,f
  2187  0387  0CF0               	rrf	___lwdiv@divisor,f
  2188  0388  3EFF               	addlw	-1
  2189  0389  1D03               	skipz
  2190  038A  2B85               	goto	u885
  2191  038B                     l1516:	
  2192  038B  3001               	movlw	1
  2193  038C  02F7               	subwf	___lwdiv@counter,f
  2194  038D  1D03               	btfss	3,2
  2195  038E  2B90               	goto	u891
  2196  038F  2B91               	goto	u890
  2197  0390                     u891:	
  2198  0390  2B6C               	goto	l1508
  2199  0391                     u890:	
  2200  0391                     l1518:	
  2201  0391  0876               	movf	___lwdiv@quotient+1,w
  2202  0392  00F1               	movwf	?___lwdiv+1
  2203  0393  0875               	movf	___lwdiv@quotient,w
  2204  0394  00F0               	movwf	?___lwdiv
  2205  0395                     l593:	
  2206  0395  0008               	return
  2207  0396                     __end_of___lwdiv:	
  2208                           
  2209                           	psect	text5
  2210  0221                     __ptext5:	
  2211 ;; *************** function ___bmul *****************
  2212 ;; Defined at:
  2213 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  multiplier      1    wreg     unsigned char 
  2216 ;;  multiplicand    1    0[COMMON] unsigned char 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  multiplier      1    3[COMMON] unsigned char 
  2219 ;;  product         1    2[COMMON] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         1       0       0       0       0
  2230 ;;      Locals:         2       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         4       0       0       0       0
  2233 ;;Total ram usage:        4 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_sprintf
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function ___bmul
  2244  0221                     ___bmul:	
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2248                           ;___bmul@multiplier stored from wreg
  2249  0221  00F3               	movwf	___bmul@multiplier
  2250  0222                     l1442:	
  2251  0222  01F2               	clrf	___bmul@product
  2252  0223                     l1444:	
  2253  0223  1C73               	btfss	___bmul@multiplier,0
  2254  0224  2A26               	goto	u711
  2255  0225  2A27               	goto	u710
  2256  0226                     u711:	
  2257  0226  2A2B               	goto	l1448
  2258  0227                     u710:	
  2259  0227                     l1446:	
  2260  0227  0870               	movf	___bmul@multiplicand,w
  2261  0228  00F1               	movwf	??___bmul
  2262  0229  0871               	movf	??___bmul,w
  2263  022A  07F2               	addwf	___bmul@product,f
  2264  022B                     l1448:	
  2265  022B  1003               	clrc
  2266  022C  0DF0               	rlf	___bmul@multiplicand,f
  2267  022D                     l1450:	
  2268  022D  1003               	clrc
  2269  022E  0CF3               	rrf	___bmul@multiplier,f
  2270  022F  0873               	movf	___bmul@multiplier,w
  2271  0230  1D03               	btfss	3,2
  2272  0231  2A33               	goto	u721
  2273  0232  2A34               	goto	u720
  2274  0233                     u721:	
  2275  0233  2A23               	goto	l1444
  2276  0234                     u720:	
  2277  0234                     l1452:	
  2278  0234  0872               	movf	___bmul@product,w
  2279  0235                     l347:	
  2280  0235  0008               	return
  2281  0236                     __end_of___bmul:	
  2282                           
  2283                           	psect	text6
  2284  01C4                     __ptext6:	
  2285 ;; *************** function _spiWrite *****************
  2286 ;; Defined at:
  2287 ;;		line 61 in file "SPI.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  data            1    wreg     unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  data            1    0[COMMON] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0
  2302 ;;      Locals:         1       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_main
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function _spiWrite
  2316  01C4                     _spiWrite:	
  2317                           
  2318                           ;incstack = 0
  2319                           ; Regs used in _spiWrite: [wreg]
  2320                           ;spiWrite@data stored from wreg
  2321  01C4  00F0               	movwf	spiWrite@data
  2322  01C5                     l1594:	
  2323                           
  2324                           ;SPI.c: 62:     SSPBUF = data;
  2325  01C5  0870               	movf	spiWrite@data,w
  2326  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2327  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2328  01C8  0093               	movwf	19	;volatile
  2329  01C9                     l104:	
  2330  01C9  0008               	return
  2331  01CA                     __end_of_spiWrite:	
  2332                           
  2333                           	psect	text7
  2334  01D2                     __ptext7:	
  2335 ;; *************** function _spiRead *****************
  2336 ;; Defined at:
  2337 ;;		line 56 in file "SPI.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_main
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _spiRead
  2366  01D2                     _spiRead:	
  2367  01D2                     l1588:	
  2368                           ;incstack = 0
  2369                           ; Regs used in _spiRead: [wreg]
  2370                           
  2371  01D2                     l98:	
  2372                           ;SPI.c: 57:     while (!SSPSTATbits.BF);
  2373                           
  2374  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2375  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2376  01D4  1C14               	btfss	20,0	;volatile
  2377  01D5  29D7               	goto	u1001
  2378  01D6  29D8               	goto	u1000
  2379  01D7                     u1001:	
  2380  01D7  29D2               	goto	l98
  2381  01D8                     u1000:	
  2382  01D8                     l1590:	
  2383                           
  2384                           ;SPI.c: 58:     return (SSPBUF);
  2385  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2386  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2387  01DA  0813               	movf	19,w	;volatile
  2388  01DB                     l101:	
  2389  01DB  0008               	return
  2390  01DC                     __end_of_spiRead:	
  2391                           
  2392                           	psect	text8
  2393  02E1                     __ptext8:	
  2394 ;; *************** function _setup *****************
  2395 ;; Defined at:
  2396 ;;		line 130 in file "main_m.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _setup
  2425  02E1                     _setup:	
  2426  02E1                     l1596:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _setup: [wreg+status,2+status,0]
  2429                           
  2430                           
  2431                           ;main_m.c: 132:     ANSEL = 0b00000000;
  2432  02E1  1683               	bsf	3,5	;RP0=1, select bank3
  2433  02E2  1703               	bsf	3,6	;RP1=1, select bank3
  2434  02E3  0188               	clrf	8	;volatile
  2435                           
  2436                           ;main_m.c: 133:     ANSELH = 0b00000000;
  2437  02E4  0189               	clrf	9	;volatile
  2438                           
  2439                           ;main_m.c: 134:     TRISA = 0b00000000;
  2440  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2441  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2442  02E7  0185               	clrf	5	;volatile
  2443                           
  2444                           ;main_m.c: 135:     TRISB = 0b00000000;
  2445  02E8  0186               	clrf	6	;volatile
  2446                           
  2447                           ;main_m.c: 136:     TRISD = 0b00000000;
  2448  02E9  0188               	clrf	8	;volatile
  2449  02EA                     l1598:	
  2450                           
  2451                           ;main_m.c: 137:     TRISC = 0b10010000;
  2452  02EA  3090               	movlw	144
  2453  02EB  0087               	movwf	7	;volatile
  2454  02EC                     l1600:	
  2455                           
  2456                           ;main_m.c: 138:     TRISE = 0;
  2457  02EC  0189               	clrf	9	;volatile
  2458  02ED                     l1602:	
  2459                           
  2460                           ;main_m.c: 139:     SSb1 = 1;
  2461  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2462  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2463  02EF  01CB               	clrf	_SSb1
  2464  02F0  0ACB               	incf	_SSb1,f
  2465  02F1                     l1604:	
  2466                           
  2467                           ;main_m.c: 140:     PORTA = 0b00000000;
  2468  02F1  0185               	clrf	5	;volatile
  2469  02F2                     l1606:	
  2470                           
  2471                           ;main_m.c: 141:     PORTB = 0;
  2472  02F2  0186               	clrf	6	;volatile
  2473  02F3                     l1608:	
  2474                           
  2475                           ;main_m.c: 142:     PORTC = 0;
  2476  02F3  0187               	clrf	7	;volatile
  2477  02F4                     l1610:	
  2478                           
  2479                           ;main_m.c: 143:     PORTD = 0;
  2480  02F4  0188               	clrf	8	;volatile
  2481  02F5                     l1612:	
  2482                           
  2483                           ;main_m.c: 144:     PORTE = 0;
  2484  02F5  0189               	clrf	9	;volatile
  2485  02F6                     l1614:	
  2486                           
  2487                           ;main_m.c: 146:     INTCONbits.PEIE = 1;
  2488  02F6  170B               	bsf	11,6	;volatile
  2489  02F7                     l1616:	
  2490                           
  2491                           ;main_m.c: 147:     INTCONbits.GIE = 1;
  2492  02F7  178B               	bsf	11,7	;volatile
  2493  02F8                     l1618:	
  2494                           
  2495                           ;main_m.c: 148:     PIR1bits.SSPIF = 0;
  2496  02F8  118C               	bcf	12,3	;volatile
  2497  02F9                     l1620:	
  2498                           
  2499                           ;main_m.c: 149:     PIE1bits.SSPIE = 1;
  2500  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2501  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2502  02FB  158C               	bsf	12,3	;volatile
  2503  02FC                     l1622:	
  2504                           
  2505                           ;main_m.c: 150:     PIR1bits.TXIF = 0;
  2506  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2507  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2508  02FE  120C               	bcf	12,4	;volatile
  2509  02FF                     l1624:	
  2510                           
  2511                           ;main_m.c: 151:     SPBRGH = 0;
  2512  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0300  1303               	bcf	3,6	;RP1=0, select bank1
  2514  0301  019A               	clrf	26	;volatile
  2515                           
  2516                           ;main_m.c: 152:     SPBRG = 25;
  2517  0302  3019               	movlw	25
  2518  0303  0099               	movwf	25	;volatile
  2519                           
  2520                           ;main_m.c: 153:     TXSTA = 0b00100100;
  2521  0304  3024               	movlw	36
  2522  0305  0098               	movwf	24	;volatile
  2523                           
  2524                           ;main_m.c: 154:     RCSTA = 0b10010000;
  2525  0306  3090               	movlw	144
  2526  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0309  0098               	movwf	24	;volatile
  2529  030A                     l1626:	
  2530                           
  2531                           ;main_m.c: 155:     BAUDCTLbits.BRG16 = 0;
  2532  030A  1683               	bsf	3,5	;RP0=1, select bank3
  2533  030B  1703               	bsf	3,6	;RP1=1, select bank3
  2534  030C  1187               	bcf	7,3	;volatile
  2535  030D                     l1628:	
  2536                           
  2537                           ;main_m.c: 156:     OSCCONbits.IRCF = 0b110;
  2538  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2539  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2540  030F  080F               	movf	15,w	;volatile
  2541  0310  398F               	andlw	-113
  2542  0311  3860               	iorlw	96
  2543  0312  008F               	movwf	15	;volatile
  2544  0313                     l1630:	
  2545                           
  2546                           ;main_m.c: 157:     OSCCONbits.OSTS = 0;
  2547  0313  118F               	bcf	15,3	;volatile
  2548  0314                     l1632:	
  2549                           
  2550                           ;main_m.c: 158:     OSCCONbits.HTS = 0;
  2551  0314  110F               	bcf	15,2	;volatile
  2552  0315                     l1634:	
  2553                           
  2554                           ;main_m.c: 159:     OSCCONbits.LTS = 0;
  2555  0315  108F               	bcf	15,1	;volatile
  2556  0316                     l1636:	
  2557                           
  2558                           ;main_m.c: 160:     OSCCONbits.SCS = 1;
  2559  0316  140F               	bsf	15,0	;volatile
  2560  0317                     l196:	
  2561  0317  0008               	return
  2562  0318                     __end_of_setup:	
  2563                           
  2564                           	psect	text9
  2565  024E                     __ptext9:	
  2566 ;; *************** function _inicio *****************
  2567 ;; Defined at:
  2568 ;;		line 57 in file "LCD.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0, pclath, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2582 ;;      Params:         0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    2
  2589 ;; This function calls:
  2590 ;;		_LCD_cmd
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           
  2597                           ;psect for function _inicio
  2598  024E                     _inicio:	
  2599  024E                     l1552:	
  2600                           ;incstack = 0
  2601                           ; Regs used in _inicio: [wreg+status,2+status,0+pclath+cstack]
  2602                           
  2603                           
  2604                           ;LCD.c: 58:     LCD_cmd(0x38);
  2605  024E  3038               	movlw	56
  2606  024F  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  2607                           
  2608                           ;LCD.c: 59:     LCD_cmd(0x0C);
  2609  0254  300C               	movlw	12
  2610  0255  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  2611                           
  2612                           ;LCD.c: 60:     LCD_cmd(0x01);
  2613  025A  3001               	movlw	1
  2614  025B  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  2615                           
  2616                           ;LCD.c: 61:     LCD_cmd(0x06);
  2617  0260  3006               	movlw	6
  2618  0261  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  2619                           
  2620                           ;LCD.c: 62:     LCD_cmd(0x80);
  2621  0266  3080               	movlw	128
  2622  0267  120A  118A  21FD  120A  118A  	fcall	_LCD_cmd
  2623  026C                     l32:	
  2624  026C  0008               	return
  2625  026D                     __end_of_inicio:	
  2626                           
  2627                           	psect	text10
  2628  01FD                     __ptext10:	
  2629 ;; *************** function _LCD_cmd *****************
  2630 ;; Defined at:
  2631 ;;		line 16 in file "LCD.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  x               1    wreg     unsigned char 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  x               1    2[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, pclath, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         1       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0
  2648 ;;      Totals:         1       0       0       0       0
  2649 ;;Total ram usage:        1 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    1
  2652 ;; This function calls:
  2653 ;;		_LCD_lat
  2654 ;;		_LCD_ready
  2655 ;; This function is called by:
  2656 ;;		_inicio
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _LCD_cmd
  2663  01FD                     _LCD_cmd:	
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  2667                           ;LCD_cmd@x stored from wreg
  2668  01FD  00F2               	movwf	LCD_cmd@x
  2669  01FE                     l1410:	
  2670                           
  2671                           ;LCD.c: 17:     LCD_ready();
  2672  01FE  120A  118A  22B8  120A  118A  	fcall	_LCD_ready
  2673  0203                     l1412:	
  2674                           
  2675                           ;LCD.c: 18:     PORTD = x;
  2676  0203  0872               	movf	LCD_cmd@x,w
  2677  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2678  0205  1303               	bcf	3,6	;RP1=0, select bank0
  2679  0206  0088               	movwf	8	;volatile
  2680  0207                     l1414:	
  2681                           
  2682                           ;LCD.c: 19:     PORTCbits.RC0 = 0;
  2683  0207  1007               	bcf	7,0	;volatile
  2684  0208                     l1416:	
  2685                           
  2686                           ;LCD.c: 20:     PORTCbits.RC1 = 0;
  2687  0208  1087               	bcf	7,1	;volatile
  2688  0209                     l1418:	
  2689                           
  2690                           ;LCD.c: 21:     LCD_lat();
  2691  0209  120A  118A  21DC  120A  118A  	fcall	_LCD_lat
  2692  020E                     l13:	
  2693  020E  0008               	return
  2694  020F                     __end_of_LCD_cmd:	
  2695                           
  2696                           	psect	text11
  2697  026D                     __ptext11:	
  2698 ;; *************** function ___wmul *****************
  2699 ;; Defined at:
  2700 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  multiplier      2    0[COMMON] unsigned int 
  2703 ;;  multiplicand    2    2[COMMON] unsigned int 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  product         2    4[COMMON] unsigned int 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    0[COMMON] unsigned int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         4       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0
  2718 ;;      Totals:         6       0       0       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           
  2729                           ;psect for function ___wmul
  2730  026D                     ___wmul:	
  2731  026D                     l1728:	
  2732                           ;incstack = 0
  2733                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2734                           
  2735  026D  01F4               	clrf	___wmul@product
  2736  026E  01F5               	clrf	___wmul@product+1
  2737  026F                     l1730:	
  2738  026F  1C70               	btfss	___wmul@multiplier,0
  2739  0270  2A72               	goto	u1141
  2740  0271  2A73               	goto	u1140
  2741  0272                     u1141:	
  2742  0272  2A79               	goto	l321
  2743  0273                     u1140:	
  2744  0273                     l1732:	
  2745  0273  0872               	movf	___wmul@multiplicand,w
  2746  0274  07F4               	addwf	___wmul@product,f
  2747  0275  1803               	skipnc
  2748  0276  0AF5               	incf	___wmul@product+1,f
  2749  0277  0873               	movf	___wmul@multiplicand+1,w
  2750  0278  07F5               	addwf	___wmul@product+1,f
  2751  0279                     l321:	
  2752  0279  3001               	movlw	1
  2753  027A                     u1155:	
  2754  027A  1003               	clrc
  2755  027B  0DF2               	rlf	___wmul@multiplicand,f
  2756  027C  0DF3               	rlf	___wmul@multiplicand+1,f
  2757  027D  3EFF               	addlw	-1
  2758  027E  1D03               	skipz
  2759  027F  2A7A               	goto	u1155
  2760  0280                     l1734:	
  2761  0280  3001               	movlw	1
  2762  0281                     u1165:	
  2763  0281  1003               	clrc
  2764  0282  0CF1               	rrf	___wmul@multiplier+1,f
  2765  0283  0CF0               	rrf	___wmul@multiplier,f
  2766  0284  3EFF               	addlw	-1
  2767  0285  1D03               	skipz
  2768  0286  2A81               	goto	u1165
  2769  0287                     l1736:	
  2770  0287  0870               	movf	___wmul@multiplier,w
  2771  0288  0471               	iorwf	___wmul@multiplier+1,w
  2772  0289  1D03               	btfss	3,2
  2773  028A  2A8C               	goto	u1171
  2774  028B  2A8D               	goto	u1170
  2775  028C                     u1171:	
  2776  028C  2A6F               	goto	l1730
  2777  028D                     u1170:	
  2778  028D                     l1738:	
  2779  028D  0875               	movf	___wmul@product+1,w
  2780  028E  00F1               	movwf	?___wmul+1
  2781  028F  0874               	movf	___wmul@product,w
  2782  0290  00F0               	movwf	?___wmul
  2783  0291                     l323:	
  2784  0291  0008               	return
  2785  0292                     __end_of___wmul:	
  2786                           
  2787                           	psect	text12
  2788  03F9                     __ptext12:	
  2789 ;; *************** function ___awdiv *****************
  2790 ;; Defined at:
  2791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  divisor         2    6[COMMON] int 
  2794 ;;  dividend        2    8[COMMON] int 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  quotient        2    2[BANK0 ] int 
  2797 ;;  sign            1    1[BANK0 ] unsigned char 
  2798 ;;  counter         1    0[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2    6[COMMON] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         4       0       0       0       0
  2809 ;;      Locals:         0       4       0       0       0
  2810 ;;      Temps:          1       0       0       0       0
  2811 ;;      Totals:         5       4       0       0       0
  2812 ;;Total ram usage:        9 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function ___awdiv
  2823  03F9                     ___awdiv:	
  2824  03F9                     l1742:	
  2825                           ;incstack = 0
  2826                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2827                           
  2828  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2829  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2830  03FB  01A1               	clrf	___awdiv@sign
  2831  03FC                     l1744:	
  2832  03FC  1FF7               	btfss	___awdiv@divisor+1,7
  2833  03FD  2BFF               	goto	u1181
  2834  03FE  2C00               	goto	u1180
  2835  03FF                     u1181:	
  2836  03FF  2C07               	goto	l1750
  2837  0400                     u1180:	
  2838  0400                     l1746:	
  2839  0400  09F6               	comf	___awdiv@divisor,f
  2840  0401  09F7               	comf	___awdiv@divisor+1,f
  2841  0402  0AF6               	incf	___awdiv@divisor,f
  2842  0403  1903               	skipnz
  2843  0404  0AF7               	incf	___awdiv@divisor+1,f
  2844  0405                     l1748:	
  2845  0405  01A1               	clrf	___awdiv@sign
  2846  0406  0AA1               	incf	___awdiv@sign,f
  2847  0407                     l1750:	
  2848  0407  1FF9               	btfss	___awdiv@dividend+1,7
  2849  0408  2C0A               	goto	u1191
  2850  0409  2C0B               	goto	u1190
  2851  040A                     u1191:	
  2852  040A  2C14               	goto	l1756
  2853  040B                     u1190:	
  2854  040B                     l1752:	
  2855  040B  09F8               	comf	___awdiv@dividend,f
  2856  040C  09F9               	comf	___awdiv@dividend+1,f
  2857  040D  0AF8               	incf	___awdiv@dividend,f
  2858  040E  1903               	skipnz
  2859  040F  0AF9               	incf	___awdiv@dividend+1,f
  2860  0410                     l1754:	
  2861  0410  3001               	movlw	1
  2862  0411  00FA               	movwf	??___awdiv
  2863  0412  087A               	movf	??___awdiv,w
  2864  0413  06A1               	xorwf	___awdiv@sign,f
  2865  0414                     l1756:	
  2866  0414  01A2               	clrf	___awdiv@quotient
  2867  0415  01A3               	clrf	___awdiv@quotient+1
  2868  0416                     l1758:	
  2869  0416  0876               	movf	___awdiv@divisor,w
  2870  0417  0477               	iorwf	___awdiv@divisor+1,w
  2871  0418  1903               	btfsc	3,2
  2872  0419  2C1B               	goto	u1201
  2873  041A  2C1C               	goto	u1200
  2874  041B                     u1201:	
  2875  041B  2C53               	goto	l1778
  2876  041C                     u1200:	
  2877  041C                     l1760:	
  2878  041C  01A0               	clrf	___awdiv@counter
  2879  041D  0AA0               	incf	___awdiv@counter,f
  2880  041E  2C2A               	goto	l1766
  2881  041F                     l1762:	
  2882  041F  3001               	movlw	1
  2883  0420                     u1215:	
  2884  0420  1003               	clrc
  2885  0421  0DF6               	rlf	___awdiv@divisor,f
  2886  0422  0DF7               	rlf	___awdiv@divisor+1,f
  2887  0423  3EFF               	addlw	-1
  2888  0424  1D03               	skipz
  2889  0425  2C20               	goto	u1215
  2890  0426                     l1764:	
  2891  0426  3001               	movlw	1
  2892  0427  00FA               	movwf	??___awdiv
  2893  0428  087A               	movf	??___awdiv,w
  2894  0429  07A0               	addwf	___awdiv@counter,f
  2895  042A                     l1766:	
  2896  042A  1FF7               	btfss	___awdiv@divisor+1,7
  2897  042B  2C2D               	goto	u1221
  2898  042C  2C2E               	goto	u1220
  2899  042D                     u1221:	
  2900  042D  2C1F               	goto	l1762
  2901  042E                     u1220:	
  2902  042E                     l1768:	
  2903  042E  3001               	movlw	1
  2904  042F                     u1235:	
  2905  042F  1003               	clrc
  2906  0430  0DA2               	rlf	___awdiv@quotient,f
  2907  0431  0DA3               	rlf	___awdiv@quotient+1,f
  2908  0432  3EFF               	addlw	-1
  2909  0433  1D03               	skipz
  2910  0434  2C2F               	goto	u1235
  2911  0435  0877               	movf	___awdiv@divisor+1,w
  2912  0436  0279               	subwf	___awdiv@dividend+1,w
  2913  0437  1D03               	skipz
  2914  0438  2C3B               	goto	u1245
  2915  0439  0876               	movf	___awdiv@divisor,w
  2916  043A  0278               	subwf	___awdiv@dividend,w
  2917  043B                     u1245:	
  2918  043B  1C03               	skipc
  2919  043C  2C3E               	goto	u1241
  2920  043D  2C3F               	goto	u1240
  2921  043E                     u1241:	
  2922  043E  2C46               	goto	l1774
  2923  043F                     u1240:	
  2924  043F                     l1770:	
  2925  043F  0876               	movf	___awdiv@divisor,w
  2926  0440  02F8               	subwf	___awdiv@dividend,f
  2927  0441  0877               	movf	___awdiv@divisor+1,w
  2928  0442  1C03               	skipc
  2929  0443  03F9               	decf	___awdiv@dividend+1,f
  2930  0444  02F9               	subwf	___awdiv@dividend+1,f
  2931  0445                     l1772:	
  2932  0445  1422               	bsf	___awdiv@quotient,0
  2933  0446                     l1774:	
  2934  0446  3001               	movlw	1
  2935  0447                     u1255:	
  2936  0447  1003               	clrc
  2937  0448  0CF7               	rrf	___awdiv@divisor+1,f
  2938  0449  0CF6               	rrf	___awdiv@divisor,f
  2939  044A  3EFF               	addlw	-1
  2940  044B  1D03               	skipz
  2941  044C  2C47               	goto	u1255
  2942  044D                     l1776:	
  2943  044D  3001               	movlw	1
  2944  044E  02A0               	subwf	___awdiv@counter,f
  2945  044F  1D03               	btfss	3,2
  2946  0450  2C52               	goto	u1261
  2947  0451  2C53               	goto	u1260
  2948  0452                     u1261:	
  2949  0452  2C2E               	goto	l1768
  2950  0453                     u1260:	
  2951  0453                     l1778:	
  2952  0453  0821               	movf	___awdiv@sign,w
  2953  0454  1903               	btfsc	3,2
  2954  0455  2C57               	goto	u1271
  2955  0456  2C58               	goto	u1270
  2956  0457                     u1271:	
  2957  0457  2C5D               	goto	l1782
  2958  0458                     u1270:	
  2959  0458                     l1780:	
  2960  0458  09A2               	comf	___awdiv@quotient,f
  2961  0459  09A3               	comf	___awdiv@quotient+1,f
  2962  045A  0AA2               	incf	___awdiv@quotient,f
  2963  045B  1903               	skipnz
  2964  045C  0AA3               	incf	___awdiv@quotient+1,f
  2965  045D                     l1782:	
  2966  045D  0823               	movf	___awdiv@quotient+1,w
  2967  045E  00F7               	movwf	?___awdiv+1
  2968  045F  0822               	movf	___awdiv@quotient,w
  2969  0460  00F6               	movwf	?___awdiv
  2970  0461                     l474:	
  2971  0461  0008               	return
  2972  0462                     __end_of___awdiv:	
  2973                           
  2974                           	psect	text13
  2975  0396                     __ptext13:	
  2976 ;; *************** function _UART_INIT *****************
  2977 ;; Defined at:
  2978 ;;		line 16 in file "eusart.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  baudrate        4    6[BANK0 ] const long 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      unsigned char 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       4       0       0       0
  2993 ;;      Locals:         0       0       0       0       0
  2994 ;;      Temps:          0      12       0       0       0
  2995 ;;      Totals:         0      16       0       0       0
  2996 ;;Total ram usage:       16 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    1
  2999 ;; This function calls:
  3000 ;;		___aldiv
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _UART_INIT
  3008  0396                     _UART_INIT:	
  3009  0396                     l1554:	
  3010                           ;incstack = 0
  3011                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  3012                           
  3013                           
  3014                           ;eusart.c: 17:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  3015  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3016  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3017  0398  0826               	movf	UART_INIT@baudrate,w
  3018  0399  00AA               	movwf	??_UART_INIT
  3019  039A  0827               	movf	UART_INIT@baudrate+1,w
  3020  039B  00AB               	movwf	??_UART_INIT+1
  3021  039C  0828               	movf	UART_INIT@baudrate+2,w
  3022  039D  00AC               	movwf	??_UART_INIT+2
  3023  039E  0829               	movf	UART_INIT@baudrate+3,w
  3024  039F  00AD               	movwf	??_UART_INIT+3
  3025  03A0  3004               	movlw	4
  3026  03A1                     u975:	
  3027  03A1  1003               	clrc
  3028  03A2  0DAA               	rlf	??_UART_INIT,f
  3029  03A3  0DAB               	rlf	??_UART_INIT+1,f
  3030  03A4  0DAC               	rlf	??_UART_INIT+2,f
  3031  03A5  0DAD               	rlf	??_UART_INIT+3,f
  3032  03A6                     u970:	
  3033  03A6  3EFF               	addlw	-1
  3034  03A7  1D03               	skipz
  3035  03A8  2BA1               	goto	u975
  3036  03A9  082D               	movf	??_UART_INIT+3,w
  3037  03AA  00F3               	movwf	___aldiv@divisor+3
  3038  03AB  082C               	movf	??_UART_INIT+2,w
  3039  03AC  00F2               	movwf	___aldiv@divisor+2
  3040  03AD  082B               	movf	??_UART_INIT+1,w
  3041  03AE  00F1               	movwf	___aldiv@divisor+1
  3042  03AF  082A               	movf	??_UART_INIT,w
  3043  03B0  00F0               	movwf	___aldiv@divisor
  3044  03B1  0826               	movf	UART_INIT@baudrate,w
  3045  03B2  00AE               	movwf	??_UART_INIT+4
  3046  03B3  0827               	movf	UART_INIT@baudrate+1,w
  3047  03B4  00AF               	movwf	??_UART_INIT+5
  3048  03B5  0828               	movf	UART_INIT@baudrate+2,w
  3049  03B6  00B0               	movwf	??_UART_INIT+6
  3050  03B7  0829               	movf	UART_INIT@baudrate+3,w
  3051  03B8  00B1               	movwf	??_UART_INIT+7
  3052  03B9  3004               	movlw	4
  3053  03BA                     u985:	
  3054  03BA  1003               	clrc
  3055  03BB  0DAE               	rlf	??_UART_INIT+4,f
  3056  03BC  0DAF               	rlf	??_UART_INIT+5,f
  3057  03BD  0DB0               	rlf	??_UART_INIT+6,f
  3058  03BE  0DB1               	rlf	??_UART_INIT+7,f
  3059  03BF                     u980:	
  3060  03BF  3EFF               	addlw	-1
  3061  03C0  1D03               	skipz
  3062  03C1  2BBA               	goto	u985
  3063  03C2  3000               	movlw	0
  3064  03C3  00B2               	movwf	??_UART_INIT+8
  3065  03C4  3012               	movlw	18
  3066  03C5  00B3               	movwf	??_UART_INIT+9
  3067  03C6  307A               	movlw	122
  3068  03C7  00B4               	movwf	??_UART_INIT+10
  3069  03C8  3000               	movlw	0
  3070  03C9  00B5               	movwf	??_UART_INIT+11
  3071  03CA  082E               	movf	??_UART_INIT+4,w
  3072  03CB  02B2               	subwf	??_UART_INIT+8,f
  3073  03CC  082F               	movf	??_UART_INIT+5,w
  3074  03CD  1C03               	skipc
  3075  03CE  0F2F               	incfsz	??_UART_INIT+5,w
  3076  03CF  2BD1               	goto	u991
  3077  03D0  2BD2               	goto	u992
  3078  03D1                     u991:	
  3079  03D1  02B3               	subwf	??_UART_INIT+9,f
  3080  03D2                     u992:	
  3081  03D2  0830               	movf	??_UART_INIT+6,w
  3082  03D3  1C03               	skipc
  3083  03D4  0F30               	incfsz	??_UART_INIT+6,w
  3084  03D5  2BD7               	goto	u993
  3085  03D6  2BD8               	goto	u994
  3086  03D7                     u993:	
  3087  03D7  02B4               	subwf	??_UART_INIT+10,f
  3088  03D8                     u994:	
  3089  03D8  0831               	movf	??_UART_INIT+7,w
  3090  03D9  1C03               	skipc
  3091  03DA  0F31               	incfsz	??_UART_INIT+7,w
  3092  03DB  2BDD               	goto	u995
  3093  03DC  2BDE               	goto	u996
  3094  03DD                     u995:	
  3095  03DD  02B5               	subwf	??_UART_INIT+11,f
  3096  03DE                     u996:	
  3097  03DE  0835               	movf	??_UART_INIT+11,w
  3098  03DF  00F7               	movwf	___aldiv@dividend+3
  3099  03E0  0834               	movf	??_UART_INIT+10,w
  3100  03E1  00F6               	movwf	___aldiv@dividend+2
  3101  03E2  0833               	movf	??_UART_INIT+9,w
  3102  03E3  00F5               	movwf	___aldiv@dividend+1
  3103  03E4  0832               	movf	??_UART_INIT+8,w
  3104  03E5  00F4               	movwf	___aldiv@dividend
  3105  03E6  120A  118A  2462  120A  118A  	fcall	___aldiv
  3106  03EB  0870               	movf	?___aldiv,w
  3107  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3108  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  3109  03EE  0099               	movwf	25	;volatile
  3110  03EF                     l1556:	
  3111                           
  3112                           ;eusart.c: 18:     TXSTAbits.BRGH = 1;
  3113  03EF  1518               	bsf	24,2	;volatile
  3114  03F0                     l1558:	
  3115                           
  3116                           ;eusart.c: 19:     TXSTAbits.TXEN = 1;
  3117  03F0  1698               	bsf	24,5	;volatile
  3118  03F1                     l1560:	
  3119                           
  3120                           ;eusart.c: 20:     TXSTAbits.SYNC = 0;
  3121  03F1  1218               	bcf	24,4	;volatile
  3122  03F2                     l1562:	
  3123                           
  3124                           ;eusart.c: 21:     TXSTAbits.TX9 = 0;
  3125  03F2  1318               	bcf	24,6	;volatile
  3126  03F3                     l1564:	
  3127                           
  3128                           ;eusart.c: 23:     RCSTAbits.CREN = 1;
  3129  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3130  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3131  03F5  1618               	bsf	24,4	;volatile
  3132  03F6                     l1566:	
  3133                           
  3134                           ;eusart.c: 24:     RCSTAbits.SPEN = 1;
  3135  03F6  1798               	bsf	24,7	;volatile
  3136  03F7                     l1568:	
  3137                           
  3138                           ;eusart.c: 25:     RCSTAbits.RX9 = 0;
  3139  03F7  1318               	bcf	24,6	;volatile
  3140  03F8                     l51:	
  3141  03F8  0008               	return
  3142  03F9                     __end_of_UART_INIT:	
  3143                           
  3144                           	psect	text14
  3145  0462                     __ptext14:	
  3146 ;; *************** function ___aldiv *****************
  3147 ;; Defined at:
  3148 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  divisor         4    0[COMMON] long 
  3151 ;;  dividend        4    4[COMMON] long 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  quotient        4    2[BANK0 ] long 
  3154 ;;  sign            1    1[BANK0 ] unsigned char 
  3155 ;;  counter         1    0[BANK0 ] unsigned char 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  4    0[COMMON] long 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         8       0       0       0       0
  3166 ;;      Locals:         0       6       0       0       0
  3167 ;;      Temps:          1       0       0       0       0
  3168 ;;      Totals:         9       6       0       0       0
  3169 ;;Total ram usage:       15 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_UART_INIT
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function ___aldiv
  3180  0462                     ___aldiv:	
  3181  0462                     l1456:	
  3182                           ;incstack = 0
  3183                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3184                           
  3185  0462  1283               	bcf	3,5	;RP0=0, select bank0
  3186  0463  1303               	bcf	3,6	;RP1=0, select bank0
  3187  0464  01A1               	clrf	___aldiv@sign
  3188  0465                     l1458:	
  3189  0465  1FF3               	btfss	___aldiv@divisor+3,7
  3190  0466  2C68               	goto	u731
  3191  0467  2C69               	goto	u730
  3192  0468                     u731:	
  3193  0468  2C76               	goto	l386
  3194  0469                     u730:	
  3195  0469                     l1460:	
  3196  0469  09F0               	comf	___aldiv@divisor,f
  3197  046A  09F1               	comf	___aldiv@divisor+1,f
  3198  046B  09F2               	comf	___aldiv@divisor+2,f
  3199  046C  09F3               	comf	___aldiv@divisor+3,f
  3200  046D  0AF0               	incf	___aldiv@divisor,f
  3201  046E  1903               	skipnz
  3202  046F  0AF1               	incf	___aldiv@divisor+1,f
  3203  0470  1903               	skipnz
  3204  0471  0AF2               	incf	___aldiv@divisor+2,f
  3205  0472  1903               	skipnz
  3206  0473  0AF3               	incf	___aldiv@divisor+3,f
  3207  0474  01A1               	clrf	___aldiv@sign
  3208  0475  0AA1               	incf	___aldiv@sign,f
  3209  0476                     l386:	
  3210  0476  1FF7               	btfss	___aldiv@dividend+3,7
  3211  0477  2C79               	goto	u741
  3212  0478  2C7A               	goto	u740
  3213  0479                     u741:	
  3214  0479  2C89               	goto	l1466
  3215  047A                     u740:	
  3216  047A                     l1462:	
  3217  047A  09F4               	comf	___aldiv@dividend,f
  3218  047B  09F5               	comf	___aldiv@dividend+1,f
  3219  047C  09F6               	comf	___aldiv@dividend+2,f
  3220  047D  09F7               	comf	___aldiv@dividend+3,f
  3221  047E  0AF4               	incf	___aldiv@dividend,f
  3222  047F  1903               	skipnz
  3223  0480  0AF5               	incf	___aldiv@dividend+1,f
  3224  0481  1903               	skipnz
  3225  0482  0AF6               	incf	___aldiv@dividend+2,f
  3226  0483  1903               	skipnz
  3227  0484  0AF7               	incf	___aldiv@dividend+3,f
  3228  0485                     l1464:	
  3229  0485  3001               	movlw	1
  3230  0486  00F8               	movwf	??___aldiv
  3231  0487  0878               	movf	??___aldiv,w
  3232  0488  06A1               	xorwf	___aldiv@sign,f
  3233  0489                     l1466:	
  3234  0489  3000               	movlw	0
  3235  048A  00A5               	movwf	___aldiv@quotient+3
  3236  048B  3000               	movlw	0
  3237  048C  00A4               	movwf	___aldiv@quotient+2
  3238  048D  3000               	movlw	0
  3239  048E  00A3               	movwf	___aldiv@quotient+1
  3240  048F  3000               	movlw	0
  3241  0490  00A2               	movwf	___aldiv@quotient
  3242  0491                     l1468:	
  3243  0491  0873               	movf	___aldiv@divisor+3,w
  3244  0492  0472               	iorwf	___aldiv@divisor+2,w
  3245  0493  0471               	iorwf	___aldiv@divisor+1,w
  3246  0494  0470               	iorwf	___aldiv@divisor,w
  3247  0495  1903               	skipnz
  3248  0496  2C98               	goto	u751
  3249  0497  2C99               	goto	u750
  3250  0498                     u751:	
  3251  0498  2CE6               	goto	l1488
  3252  0499                     u750:	
  3253  0499                     l1470:	
  3254  0499  01A0               	clrf	___aldiv@counter
  3255  049A  0AA0               	incf	___aldiv@counter,f
  3256  049B  2CA9               	goto	l1474
  3257  049C                     l1472:	
  3258  049C  3001               	movlw	1
  3259  049D  00F8               	movwf	??___aldiv
  3260  049E                     u765:	
  3261  049E  1003               	clrc
  3262  049F  0DF0               	rlf	___aldiv@divisor,f
  3263  04A0  0DF1               	rlf	___aldiv@divisor+1,f
  3264  04A1  0DF2               	rlf	___aldiv@divisor+2,f
  3265  04A2  0DF3               	rlf	___aldiv@divisor+3,f
  3266  04A3  0BF8               	decfsz	??___aldiv,f
  3267  04A4  2C9E               	goto	u765
  3268  04A5  3001               	movlw	1
  3269  04A6  00F8               	movwf	??___aldiv
  3270  04A7  0878               	movf	??___aldiv,w
  3271  04A8  07A0               	addwf	___aldiv@counter,f
  3272  04A9                     l1474:	
  3273  04A9  1FF3               	btfss	___aldiv@divisor+3,7
  3274  04AA  2CAC               	goto	u771
  3275  04AB  2CAD               	goto	u770
  3276  04AC                     u771:	
  3277  04AC  2C9C               	goto	l1472
  3278  04AD                     u770:	
  3279  04AD                     l1476:	
  3280  04AD  3001               	movlw	1
  3281  04AE  00F8               	movwf	??___aldiv
  3282  04AF                     u785:	
  3283  04AF  1003               	clrc
  3284  04B0  0DA2               	rlf	___aldiv@quotient,f
  3285  04B1  0DA3               	rlf	___aldiv@quotient+1,f
  3286  04B2  0DA4               	rlf	___aldiv@quotient+2,f
  3287  04B3  0DA5               	rlf	___aldiv@quotient+3,f
  3288  04B4  0BF8               	decfsz	??___aldiv,f
  3289  04B5  2CAF               	goto	u785
  3290  04B6                     l1478:	
  3291  04B6  0873               	movf	___aldiv@divisor+3,w
  3292  04B7  0277               	subwf	___aldiv@dividend+3,w
  3293  04B8  1D03               	skipz
  3294  04B9  2CC4               	goto	u795
  3295  04BA  0872               	movf	___aldiv@divisor+2,w
  3296  04BB  0276               	subwf	___aldiv@dividend+2,w
  3297  04BC  1D03               	skipz
  3298  04BD  2CC4               	goto	u795
  3299  04BE  0871               	movf	___aldiv@divisor+1,w
  3300  04BF  0275               	subwf	___aldiv@dividend+1,w
  3301  04C0  1D03               	skipz
  3302  04C1  2CC4               	goto	u795
  3303  04C2  0870               	movf	___aldiv@divisor,w
  3304  04C3  0274               	subwf	___aldiv@dividend,w
  3305  04C4                     u795:	
  3306  04C4  1C03               	skipc
  3307  04C5  2CC7               	goto	u791
  3308  04C6  2CC8               	goto	u790
  3309  04C7                     u791:	
  3310  04C7  2CD7               	goto	l1484
  3311  04C8                     u790:	
  3312  04C8                     l1480:	
  3313  04C8  0870               	movf	___aldiv@divisor,w
  3314  04C9  02F4               	subwf	___aldiv@dividend,f
  3315  04CA  0871               	movf	___aldiv@divisor+1,w
  3316  04CB  1C03               	skipc
  3317  04CC  0F71               	incfsz	___aldiv@divisor+1,w
  3318  04CD  02F5               	subwf	___aldiv@dividend+1,f
  3319  04CE  0872               	movf	___aldiv@divisor+2,w
  3320  04CF  1C03               	skipc
  3321  04D0  0F72               	incfsz	___aldiv@divisor+2,w
  3322  04D1  02F6               	subwf	___aldiv@dividend+2,f
  3323  04D2  0873               	movf	___aldiv@divisor+3,w
  3324  04D3  1C03               	skipc
  3325  04D4  0F73               	incfsz	___aldiv@divisor+3,w
  3326  04D5  02F7               	subwf	___aldiv@dividend+3,f
  3327  04D6                     l1482:	
  3328  04D6  1422               	bsf	___aldiv@quotient,0
  3329  04D7                     l1484:	
  3330  04D7  3001               	movlw	1
  3331  04D8                     u805:	
  3332  04D8  1003               	clrc
  3333  04D9  0CF3               	rrf	___aldiv@divisor+3,f
  3334  04DA  0CF2               	rrf	___aldiv@divisor+2,f
  3335  04DB  0CF1               	rrf	___aldiv@divisor+1,f
  3336  04DC  0CF0               	rrf	___aldiv@divisor,f
  3337  04DD  3EFF               	addlw	-1
  3338  04DE  1D03               	skipz
  3339  04DF  2CD8               	goto	u805
  3340  04E0                     l1486:	
  3341  04E0  3001               	movlw	1
  3342  04E1  02A0               	subwf	___aldiv@counter,f
  3343  04E2  1D03               	btfss	3,2
  3344  04E3  2CE5               	goto	u811
  3345  04E4  2CE6               	goto	u810
  3346  04E5                     u811:	
  3347  04E5  2CAD               	goto	l1476
  3348  04E6                     u810:	
  3349  04E6                     l1488:	
  3350  04E6  0821               	movf	___aldiv@sign,w
  3351  04E7  1903               	btfsc	3,2
  3352  04E8  2CEA               	goto	u821
  3353  04E9  2CEB               	goto	u820
  3354  04EA                     u821:	
  3355  04EA  2CF6               	goto	l1492
  3356  04EB                     u820:	
  3357  04EB                     l1490:	
  3358  04EB  09A2               	comf	___aldiv@quotient,f
  3359  04EC  09A3               	comf	___aldiv@quotient+1,f
  3360  04ED  09A4               	comf	___aldiv@quotient+2,f
  3361  04EE  09A5               	comf	___aldiv@quotient+3,f
  3362  04EF  0AA2               	incf	___aldiv@quotient,f
  3363  04F0  1903               	skipnz
  3364  04F1  0AA3               	incf	___aldiv@quotient+1,f
  3365  04F2  1903               	skipnz
  3366  04F3  0AA4               	incf	___aldiv@quotient+2,f
  3367  04F4  1903               	skipnz
  3368  04F5  0AA5               	incf	___aldiv@quotient+3,f
  3369  04F6                     l1492:	
  3370  04F6  0825               	movf	___aldiv@quotient+3,w
  3371  04F7  00F3               	movwf	?___aldiv+3
  3372  04F8  0824               	movf	___aldiv@quotient+2,w
  3373  04F9  00F2               	movwf	?___aldiv+2
  3374  04FA  0823               	movf	___aldiv@quotient+1,w
  3375  04FB  00F1               	movwf	?___aldiv+1
  3376  04FC  0822               	movf	___aldiv@quotient,w
  3377  04FD  00F0               	movwf	?___aldiv
  3378  04FE                     l396:	
  3379  04FE  0008               	return
  3380  04FF                     __end_of___aldiv:	
  3381                           
  3382                           	psect	text15
  3383  0236                     __ptext15:	
  3384 ;; *************** function _SPIMaster *****************
  3385 ;; Defined at:
  3386 ;;		line 20 in file "SPI.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _SPIMaster
  3415  0236                     _SPIMaster:	
  3416  0236                     l1570:	
  3417                           ;incstack = 0
  3418                           ; Regs used in _SPIMaster: [wreg+status,2+status,0]
  3419                           
  3420                           
  3421                           ;SPI.c: 22:     SSPSTATbits.SMP = 0;
  3422  0236  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0237  1303               	bcf	3,6	;RP1=0, select bank1
  3424  0238  1394               	bcf	20,7	;volatile
  3425                           
  3426                           ;SPI.c: 23:     SSPSTATbits.CKE = 0;
  3427  0239  1314               	bcf	20,6	;volatile
  3428                           
  3429                           ;SPI.c: 24:     SSPCONbits.SSPEN = 1;
  3430  023A  1283               	bcf	3,5	;RP0=0, select bank0
  3431  023B  1303               	bcf	3,6	;RP1=0, select bank0
  3432  023C  1694               	bsf	20,5	;volatile
  3433                           
  3434                           ;SPI.c: 25:     SSPCONbits.CKP = 1;
  3435  023D  1614               	bsf	20,4	;volatile
  3436  023E                     l1572:	
  3437                           
  3438                           ;SPI.c: 26:     SSPCONbits.SSPM = 0b0010;
  3439  023E  0814               	movf	20,w	;volatile
  3440  023F  39F0               	andlw	-16
  3441  0240  3802               	iorlw	2
  3442  0241  0094               	movwf	20	;volatile
  3443  0242                     l1574:	
  3444                           
  3445                           ;SPI.c: 28:     TRISCbits.TRISC5 = 0;
  3446  0242  1683               	bsf	3,5	;RP0=1, select bank1
  3447  0243  1303               	bcf	3,6	;RP1=0, select bank1
  3448  0244  1287               	bcf	7,5	;volatile
  3449  0245                     l1576:	
  3450                           
  3451                           ;SPI.c: 29:     TRISCbits.TRISC4 = 1;
  3452  0245  1607               	bsf	7,4	;volatile
  3453  0246                     l1578:	
  3454                           
  3455                           ;SPI.c: 30:     TRISCbits.TRISC3 = 0;
  3456  0246  1187               	bcf	7,3	;volatile
  3457  0247                     l1580:	
  3458                           
  3459                           ;SPI.c: 32:     PIE1bits.SSPIE = 1;
  3460  0247  158C               	bsf	12,3	;volatile
  3461  0248                     l1582:	
  3462                           
  3463                           ;SPI.c: 33:     INTCONbits.PEIE = 1;
  3464  0248  170B               	bsf	11,6	;volatile
  3465  0249                     l1584:	
  3466                           
  3467                           ;SPI.c: 34:     INTCONbits.GIE = 1;
  3468  0249  178B               	bsf	11,7	;volatile
  3469  024A                     l1586:	
  3470                           
  3471                           ;SPI.c: 35:     PIR1bits.SSPIF = 0;
  3472  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3473  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3474  024C  118C               	bcf	12,3	;volatile
  3475  024D                     l92:	
  3476  024D  0008               	return
  3477  024E                     __end_of_SPIMaster:	
  3478                           
  3479                           	psect	text16
  3480  0292                     __ptext16:	
  3481 ;; *************** function _LCD_msg *****************
  3482 ;; Defined at:
  3483 ;;		line 52 in file "LCD.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  c               2    3[COMMON] PTR unsigned char 
  3486 ;;		 -> STR_7(3), PSL3(5), STR_5(4), PSL2(5), 
  3487 ;;		 -> STR_3(4), PSL1(5), STR_1(17), 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         2       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         2       0       0       0       0
  3503 ;;Total ram usage:        2 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    2
  3506 ;; This function calls:
  3507 ;;		_LCD_dwr
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _LCD_msg
  3515  0292                     _LCD_msg:	
  3516  0292                     l1544:	
  3517                           ;incstack = 0
  3518                           ; Regs used in _LCD_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3519                           
  3520                           
  3521                           ;LCD.c: 53:     while(*c != 0)
  3522  0292  2AA7               	goto	l1550
  3523  0293                     l1546:	
  3524                           
  3525                           ;LCD.c: 54:         LCD_dwr(*c++);
  3526  0293  0874               	movf	LCD_msg@c+1,w
  3527  0294  00FF               	movwf	btemp+1
  3528  0295  0873               	movf	LCD_msg@c,w
  3529  0296  0084               	movwf	4
  3530  0297  120A  118A  2003  120A  118A  	fcall	stringtab
  3531  029C  120A  118A  21EB  120A  118A  	fcall	_LCD_dwr
  3532  02A1                     l1548:	
  3533  02A1  3001               	movlw	1
  3534  02A2  07F3               	addwf	LCD_msg@c,f
  3535  02A3  1803               	skipnc
  3536  02A4  0AF4               	incf	LCD_msg@c+1,f
  3537  02A5  3000               	movlw	0
  3538  02A6  07F4               	addwf	LCD_msg@c+1,f
  3539  02A7                     l1550:	
  3540                           
  3541                           ;LCD.c: 53:     while(*c != 0)
  3542  02A7  0874               	movf	LCD_msg@c+1,w
  3543  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3544  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3545  02AA  00FF               	movwf	btemp+1
  3546  02AB  0873               	movf	LCD_msg@c,w
  3547  02AC  0084               	movwf	4
  3548  02AD  120A  118A  2003  120A  118A  	fcall	stringtab
  3549  02B2  3A00               	xorlw	0
  3550  02B3  1D03               	skipz
  3551  02B4  2AB6               	goto	u961
  3552  02B5  2AB7               	goto	u960
  3553  02B6                     u961:	
  3554  02B6  2A93               	goto	l1546
  3555  02B7                     u960:	
  3556  02B7                     l29:	
  3557  02B7  0008               	return
  3558  02B8                     __end_of_LCD_msg:	
  3559                           
  3560                           	psect	text17
  3561  01EB                     __ptext17:	
  3562 ;; *************** function _LCD_dwr *****************
  3563 ;; Defined at:
  3564 ;;		line 44 in file "LCD.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  x               1    wreg     unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  x               1    2[COMMON] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3578 ;;      Params:         0       0       0       0       0
  3579 ;;      Locals:         1       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0
  3581 ;;      Totals:         1       0       0       0       0
  3582 ;;Total ram usage:        1 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    1
  3585 ;; This function calls:
  3586 ;;		_LCD_lat
  3587 ;;		_LCD_ready
  3588 ;; This function is called by:
  3589 ;;		_LCD_msg
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _LCD_dwr
  3595  01EB                     _LCD_dwr:	
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _LCD_dwr: [wreg+status,2+status,0+pclath+cstack]
  3599                           ;LCD_dwr@x stored from wreg
  3600  01EB  00F2               	movwf	LCD_dwr@x
  3601  01EC                     l1420:	
  3602                           
  3603                           ;LCD.c: 45:     LCD_ready();
  3604  01EC  120A  118A  22B8  120A  118A  	fcall	_LCD_ready
  3605  01F1                     l1422:	
  3606                           
  3607                           ;LCD.c: 46:     PORTD = x;
  3608  01F1  0872               	movf	LCD_dwr@x,w
  3609  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3610  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3611  01F4  0088               	movwf	8	;volatile
  3612  01F5                     l1424:	
  3613                           
  3614                           ;LCD.c: 47:     PORTCbits.RC0 = 1;
  3615  01F5  1407               	bsf	7,0	;volatile
  3616  01F6                     l1426:	
  3617                           
  3618                           ;LCD.c: 48:     PORTCbits.RC1 = 0;
  3619  01F6  1087               	bcf	7,1	;volatile
  3620  01F7                     l1428:	
  3621                           
  3622                           ;LCD.c: 49:     LCD_lat();
  3623  01F7  120A  118A  21DC  120A  118A  	fcall	_LCD_lat
  3624  01FC                     l23:	
  3625  01FC  0008               	return
  3626  01FD                     __end_of_LCD_dwr:	
  3627                           
  3628                           	psect	text18
  3629  02B8                     __ptext18:	
  3630 ;; *************** function _LCD_ready *****************
  3631 ;; Defined at:
  3632 ;;		line 29 in file "LCD.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;		None
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;		None
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      void 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         0       0       0       0       0
  3647 ;;      Locals:         0       0       0       0       0
  3648 ;;      Temps:          2       0       0       0       0
  3649 ;;      Totals:         2       0       0       0       0
  3650 ;;Total ram usage:        2 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_LCD_cmd
  3656 ;;		_LCD_dwr
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function _LCD_ready
  3662  02B8                     _LCD_ready:	
  3663  02B8                     l1384:	
  3664                           ;incstack = 0
  3665                           ; Regs used in _LCD_ready: [wreg+status,2+status,0]
  3666                           
  3667                           
  3668                           ;LCD.c: 30:     PORTD = 0xFF;
  3669  02B8  30FF               	movlw	255
  3670  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3671  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3672  02BB  0088               	movwf	8	;volatile
  3673  02BC                     l1386:	
  3674                           
  3675                           ;LCD.c: 31:     PORTD &= 0x80;
  3676  02BC  3080               	movlw	128
  3677  02BD  00F0               	movwf	??_LCD_ready
  3678  02BE  0870               	movf	??_LCD_ready,w
  3679  02BF  0588               	andwf	8,f	;volatile
  3680  02C0                     l1388:	
  3681                           
  3682                           ;LCD.c: 32:     PORTCbits.RC0 = 0;
  3683  02C0  1007               	bcf	7,0	;volatile
  3684  02C1                     l1390:	
  3685                           
  3686                           ;LCD.c: 33:     PORTCbits.RC1 = 1;
  3687  02C1  1487               	bsf	7,1	;volatile
  3688  02C2                     l1392:	
  3689                           
  3690                           ;LCD.c: 34:     PORTCbits.RC2 = 0;
  3691  02C2  1107               	bcf	7,2	;volatile
  3692  02C3                     l1394:	
  3693                           
  3694                           ;LCD.c: 35:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3695  02C3  3027               	movlw	39
  3696  02C4  00F1               	movwf	??_LCD_ready+1
  3697  02C5  30F5               	movlw	245
  3698  02C6  00F0               	movwf	??_LCD_ready
  3699  02C7                     u1377:	
  3700  02C7  0BF0               	decfsz	??_LCD_ready,f
  3701  02C8  2AC7               	goto	u1377
  3702  02C9  0BF1               	decfsz	??_LCD_ready+1,f
  3703  02CA  2AC7               	goto	u1377
  3704  02CB                     l1396:	
  3705                           
  3706                           ;LCD.c: 36:     PORTCbits.RC2 = 1;
  3707  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3708  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  3709  02CD  1507               	bsf	7,2	;volatile
  3710                           
  3711                           ;LCD.c: 37:     if (PORTD == 0x80){
  3712  02CE  3080               	movlw	128
  3713  02CF  0608               	xorwf	8,w	;volatile
  3714  02D0  1D03               	btfss	3,2
  3715  02D1  2AD3               	goto	u681
  3716  02D2  2AD4               	goto	u680
  3717  02D3                     u681:	
  3718  02D3  2AE0               	goto	l20
  3719  02D4                     u680:	
  3720  02D4                     l1398:	
  3721                           
  3722                           ;LCD.c: 38:         PORTCbits.RC2 = 0;
  3723  02D4  1107               	bcf	7,2	;volatile
  3724  02D5                     l1400:	
  3725                           
  3726                           ;LCD.c: 39:         _delay((unsigned long)((30)*(4000000/4000.0)));
  3727  02D5  3027               	movlw	39
  3728  02D6  00F1               	movwf	??_LCD_ready+1
  3729  02D7  30F5               	movlw	245
  3730  02D8  00F0               	movwf	??_LCD_ready
  3731  02D9                     u1387:	
  3732  02D9  0BF0               	decfsz	??_LCD_ready,f
  3733  02DA  2AD9               	goto	u1387
  3734  02DB  0BF1               	decfsz	??_LCD_ready+1,f
  3735  02DC  2AD9               	goto	u1387
  3736  02DD                     l1402:	
  3737                           
  3738                           ;LCD.c: 40:         PORTCbits.RC2 = 1;
  3739  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3740  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3741  02DF  1507               	bsf	7,2	;volatile
  3742  02E0                     l20:	
  3743  02E0  0008               	return
  3744  02E1                     __end_of_LCD_ready:	
  3745                           
  3746                           	psect	text19
  3747  01DC                     __ptext19:	
  3748 ;; *************** function _LCD_lat *****************
  3749 ;; Defined at:
  3750 ;;		line 24 in file "LCD.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0
  3766 ;;      Temps:          2       0       0       0       0
  3767 ;;      Totals:         2       0       0       0       0
  3768 ;;Total ram usage:        2 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_LCD_cmd
  3774 ;;		_LCD_dwr
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function _LCD_lat
  3780  01DC                     _LCD_lat:	
  3781  01DC                     l1404:	
  3782                           ;incstack = 0
  3783                           ; Regs used in _LCD_lat: [wreg]
  3784                           
  3785                           
  3786                           ;LCD.c: 25:     PORTCbits.RC2 = 1;
  3787  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3788  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3789  01DE  1507               	bsf	7,2	;volatile
  3790  01DF                     l1406:	
  3791                           
  3792                           ;LCD.c: 26:    _delay((unsigned long)((30)*(4000000/4000.0)));
  3793  01DF  3027               	movlw	39
  3794  01E0  00F1               	movwf	??_LCD_lat+1
  3795  01E1  30F5               	movlw	245
  3796  01E2  00F0               	movwf	??_LCD_lat
  3797  01E3                     u1397:	
  3798  01E3  0BF0               	decfsz	??_LCD_lat,f
  3799  01E4  29E3               	goto	u1397
  3800  01E5  0BF1               	decfsz	??_LCD_lat+1,f
  3801  01E6  29E3               	goto	u1397
  3802  01E7                     l1408:	
  3803                           
  3804                           ;LCD.c: 27:    PORTCbits.RC2 = 0;
  3805  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  3806  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  3807  01E9  1107               	bcf	7,2	;volatile
  3808  01EA                     l16:	
  3809  01EA  0008               	return
  3810  01EB                     __end_of_LCD_lat:	
  3811  007E                     btemp	set	126	;btemp
  3812  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         18
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> PSL3(BANK0[5]), PSL2(BANK0[5]), PSL1(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_msg@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_7(CODE[3]), PSL3(BANK0[5]), STR_5(CODE[4]), PSL2(BANK0[5]), 
		 -> STR_3(CODE[4]), PSL1(BANK0[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _inicio->_LCD_cmd
    _LCD_cmd->_LCD_lat
    _LCD_cmd->_LCD_ready
    ___awdiv->___wmul
    _UART_INIT->___aldiv
    _LCD_msg->_LCD_dwr
    _LCD_dwr->_LCD_lat
    _LCD_dwr->_LCD_ready

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4152
                                             22 BANK0      3     3      0
                            _LCD_cmd
                            _LCD_msg
                          _SPIMaster
                          _UART_INIT
                            ___awdiv
                             ___wmul
                             _inicio
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1915
                                              0 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0      22
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _LCD_lat
                          _LCD_ready
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SPIMaster                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_msg                                              2     0      2     599
                                              3 COMMON     2     0      2
                            _LCD_dwr
 ---------------------------------------------------------------------------------
 (2) _LCD_dwr                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _LCD_lat
                          _LCD_ready
 ---------------------------------------------------------------------------------
 (3) _LCD_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cmd
     _LCD_lat
     _LCD_ready
   _LCD_msg
     _LCD_dwr
       _LCD_lat
       _LCD_ready
   _SPIMaster
   _UART_INIT
     ___aldiv
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _inicio
     _LCD_cmd
       _LCD_lat
       _LCD_ready
   _setup
   _spiRead
   _spiWrite
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 24 23:14:28 2021

                       pc 0002            ___bmul@product 0072               __CFG_CP$OFF 0000  
             _SSPSTATbits 0094                        l20 02E0                        l13 020E  
                      l23 01FC                        l16 01EA                        l32 026C  
                      l51 03F8                        l29 02B7                        l92 024D  
                      l98 01D2              ___awdiv@sign 0021                        fsr 0004  
     ___wmul@multiplicand 0072              spiWrite@data 0070                       l101 01DB  
                     l104 01C9                       l321 0279                       l323 0291  
                     l317 0661                       l347 0235                       l603 0351  
                     l196 0317                       l386 0476                       l474 0461  
                     l396 04FE                       l593 0395                       l768 0220  
                     _SL2 003A              __CFG_CPD$OFF 0000                       u700 021D  
                     u701 021C                       u710 0227                       u711 0226  
                     u720 0234                       u721 0233                       u810 04E6  
                     u730 0469                       u811 04E5                       u731 0468  
                     u820 04EB                       u740 047A                       u900 031E  
                     u821 04EA                       u805 04D8                       u741 0479  
                     u901 031D                       u750 0499                       u830 035A  
                     u751 0498                       u831 0359                       u680 02D4  
                     u920 0330                       u681 02D3                       u921 032F  
                     u770 04AD                       u850 036C                       u930 033A  
                     u690 0217                       u771 04AC                       u851 036B  
                     u931 0339                       u915 0322                       u691 0216  
                     u765 049E                       u845 035E                       u790 04C8  
                     u870 037D                       u950 034D                       u791 04C7  
                     u871 037C                       u951 034C                       u935 0336  
                     u960 02B7                       u961 02B6                       u785 04AF  
                     u865 036D                       u945 0341                       u970 03A6  
                     u890 0391                       u795 04C4                       u891 0390  
                     u875 0379                       u980 03BF                       u885 0385  
                     u991 03D1                       u975 03A1                       u992 03D2  
                     u993 03D7                       u985 03BA                       u994 03D8  
                     u995 03DD                       u996 03DE                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000           __end_of_LCD_cmd 020F  
         __end_of_LCD_lat 01EB           __end_of_LCD_dwr 01FD           __end_of_LCD_msg 02B8  
                    l1400 02D5                      l1402 02DD                      l1410 01FE  
                    l1404 01DC                      l1420 01EC                      l1412 0203  
                    l1500 035A                      l1406 01DF                      l1422 01F1  
                    l1414 0207                      l1510 037D                      l1502 035D  
                    l1430 0210                      l1408 01E7                      l1424 01F5  
                    l1416 0208                      l1600 02EC                      l1512 0383  
                    l1504 0364                      l1432 0211                      l1426 01F6  
                    l1418 0209                      l1610 02F4                      l1602 02ED  
                    l1450 022D                      l1442 0222                      l1514 0384  
                    l1506 0368                      l1530 032C                      l1522 0318  
                    l1434 0217                      l1428 01F7                      l1460 0469  
                    l1620 02F9                      l1612 02F5                      l1604 02F1  
                    l1452 0234                      l1444 0223                      l1516 038B  
                    l1508 036C                      l1532 0330                      l1524 031E  
                    l1540 034D                      l1436 021D                      l1700 05F2  
                    l1390 02C1                      l1550 02A7                      l1470 0499  
                    l1462 047A                      l1630 0313                      l1622 02FC  
                    l1614 02F6                      l1606 02F2                      l1446 0227  
                    l1518 0391                      l1534 033A                      l1526 0321  
                    l1438 021F                      l1710 063A                      l1702 05F8  
                    l1392 02C2                      l1384 02B8                      l1544 0292  
                    l1480 04C8                      l1472 049C                      l1464 0485  
                    l1456 0462                      l1560 03F1                      l1552 024E  
                    l1632 0314                      l1624 02FF                      l1616 02F7  
                    l1608 02F3                      l1448 022B                      l1536 0340  
                    l1528 0328                      l1704 0600                      l1640 0507  
                    l1800 0694                      l1394 02C3                      l1386 02BC  
                    l1546 0293                      l1570 0236                      l1490 04EB  
                    l1482 04D6                      l1474 04A9                      l1466 0489  
                    l1458 0465                      l1562 03F2                      l1554 0396  
                    l1730 026F                      l1634 0315                      l1626 030A  
                    l1618 02F8                      l1538 0347                      l1706 0607  
                    l1714 0642                      l1650 0526                      l1642 050D  
                    l1810 06D2                      l1802 069E                      l1396 02CB  
                    l1388 02C0                      l1548 02A1                      l1580 0247  
                    l1572 023E                      l1492 04F6                      l1484 04D7  
                    l1476 04AD                      l1468 0491                      l1564 03F3  
                    l1556 03EF                      l1732 0273                      l1636 0316  
                    l1628 030D                      l1708 060C                      l1660 054C  
                    l1652 052A                      l1644 0514                      l1716 064B  
                    l1820 06F0                      l1812 06E1                      l1804 06A4  
                    l1398 02D4                      l1582 0248                      l1574 0242  
                    l1486 04E0                      l1478 04B6                      l1566 03F6  
                    l1558 03F0                      l1750 0407                      l1742 03F9  
                    l1734 0280                      l1590 01D8                      l1670 0585  
                    l1718 065D                      l1902 0572                      l1654 052C  
                    l1662 055D                      l1646 0519                      l1638 0502  
                    l1830 071A                      l1822 06FA                      l1814 06E7  
                    l1806 06AE                      l1584 0249                      l1576 0245  
                    l1488 04E6                      l1568 03F7                      l1760 041C  
                    l1752 040B                      l1744 03FC                      l1736 0287  
                    l1728 026D                      l1496 0352                      l1680 059B  
                    l1672 0589                      l1656 053D                      l1648 051A  
                    l1840 0733                      l1832 0720                      l1824 0700  
                    l1808 06D1                      l1816 06E9                      l1586 024A  
                    l1578 0246                      l1770 043F                      l1762 041F  
                    l1754 0410                      l1746 0400                      l1738 028D  
                    l1594 01C5                      l1498 0354                      l1682 05A1  
                    l1674 058D                      l1666 055E                      l1658 0548  
                    l1850 0776                      l1842 0739                      l1826 070A  
                    l1818 06EF                      l1834 0722                      l1780 0458  
                    l1772 0445                      l1764 0426                      l1756 0414  
                    l1748 0405                      l1596 02E1                      l1588 01D2  
                    l1692 05C3                      l1684 05A5                      l1676 0591  
                    l1668 057D                      l1860 07A5                      l1844 0743  
                    l1836 0728                      l1852 077A                      l1828 070B  
                    l1782 045D                      l1774 0446                      l1766 042A  
                    l1758 0416                      l1598 02EA                      l1694 05CD  
                    l1678 0596                      l1870 07E6                      l1862 07B8  
                    l1854 0780                      l1846 0766                      l1838 0729  
                    l1790 0689                      l1776 044D                      l1768 042E  
                    l1696 05DD                      l1688 05A7                      l1864 07C1  
                    l1856 0793                      l1848 0767                      l1792 068C  
                    l1778 0453                      l1698 05DE                      l1866 07CA  
                    l1858 079C                      l1794 068D                      l1786 0662  
                    l1868 07DD                      l1796 068E                      l1788 0680  
                    l1798 0693                      STR_1 001D                      STR_2 002E  
                    STR_3 0037                      STR_4 002E                      STR_5 0033  
                    STR_6 002E                      STR_7 003B                      u1000 01D8  
                    u1001 01D7                      u1010 050D                      u1011 050C  
                    u1100 05F2                      u1020 0526                      u1101 05F1  
                    u1021 0525                      u1110 0600                      u1030 055C  
                    u1111 05FF                      u1031 055B                      u1200 041C  
                    u1120 064B                      u1040 058D                      u1201 041B  
                    u1121 064A                      u1105 05EE                      u1041 058C  
                    u1130 065D                      u1050 059B                      u1131 065C  
                    u1051 059A                      u1220 042E                      u1140 0273  
                    u1060 05A1                      u1300 0728                      u1221 042D  
                    u1141 0272                      u1061 05A0                      u1301 0727  
                    u1070 05C2                      u1215 0420                      u1071 05C1  
                    u1240 043F                      u1080 05CD                      u1241 043E  
                    u1081 05CC                      u1170 028D                      u1090 05DD  
                    u1235 042F                      u1171 028C                      u1155 027A  
                    u1091 05DC                      u1075 05BE                      u1260 0453  
                    u1180 0400                      u1261 0452                      u1245 043B  
                    u1181 03FF                      u1165 0281                      u1317 069A  
                    u1270 0458                      u1190 040B                      u1271 0457  
                    u1255 0447                      u1191 040A                      u1095 05D9  
                    u1327 06DA                      u1280 0693                      u1337 06F6  
                    u1281 0692                      u1290 06EF                      u1347 0713  
                    u1291 06EE                      u1357 072F                      u1367 076F  
                    u1377 02C7                      u1387 02D9                      u1397 01E3  
                    _PSL1 0046                      _PSL2 0041                      _PSL3 003C  
                    _SSb1 004B              __CFG_WRT$OFF 0000                      _main 0662  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
      __size_of_LCD_ready 0029         ___bmul@multiplier 0073           __end_of___aldiv 04FF  
                   ?_main 0070           __end_of___awdiv 0462             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           ___awdiv@divisor 0076           __end_of___lwdiv 0396  
         __end_of___lwmod 0352           ___awdiv@counter 0020                     _RCREG 001A  
                   _RCSTA 0018                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019                     _TXSTA 0098        __size_of_UART_INIT 0063  
          __CFG_FCMEN$OFF 0000           __end_of_dpowers 001D           __end_of_isdigit 0221  
                   _setup 02E1            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiRead 01DC        __size_of_SPIMaster 0018                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0662            __CFG_MCLRE$OFF 0000  
         __initialization 07F3              __end_of_main 07F3                    ??_main 0036  
               ??_LCD_cmd 0072                 ??_LCD_lat 0070                 ??_LCD_dwr 0072  
               ??_LCD_msg 0075         __end_of_LCD_ready 02E1          ___awdiv@dividend 0078  
                  ?_setup 0070                    _ANSELH 0189                    _SPBRGH 009A  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000         __end_of_UART_INIT 03F9  
                  ___bmul 0221                 ??___aldiv 0078                    ___wmul 026D  
               ??___awdiv 007A                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _inicio 024E          ___awdiv@quotient 0022         __end_of_SPIMaster 024E  
               ??_isdigit 0070          __end_of_spiWrite 01CA                 ??_spiRead 0070  
               ??_sprintf 0023   __end_of__initialization 07FC       ___bmul@multiplicand 0070  
          __pcstackCOMMON 0070             __end_of_setup 0318                   ??_setup 0070  
              __pbssBANK0 0039                __pmaintext 0662                   ?___bmul 0070  
                 ?___wmul 0070                   _ADC1SL1 003B                   _ADC1SL3 0039  
                 ?_inicio 0070                   _LCD_cmd 01FD                   _LCD_lat 01DC  
                 _LCD_dwr 01EB                   _LCD_msg 0292                __stringtab 0003  
               ?_spiWrite 0070                   ___aldiv 0462           __size_of___bmul 0015  
                 ___awdiv 03F9           __size_of___wmul 0025                   ___lwdiv 0352  
                 ___lwmod 0318           __size_of_inicio 001F                   __ptext1 04FF  
                 __ptext2 020F                   __ptext3 0318                   __ptext4 0352  
                 __ptext5 0221                   __ptext6 01C4                   __ptext7 01D2  
                 __ptext8 02E1                   __ptext9 024E                   _dpowers 0013  
                 _isdigit 020F          ___aldiv@dividend 0074                   _spiRead 01D2  
                 _sprintf 04FF                   clrloop0 01CB      end_of_initialization 07FC  
               _LCD_ready 02B8                 _RCSTAbits 0018          ___aldiv@quotient 0022  
              ??_spiWrite 0070                 _UART_INIT 0396                 _PORTAbits 0005  
               _PORTCbits 0007                 _SPIMaster 0236                 _TRISAbits 0085  
               _TRISCbits 0087                ?_LCD_ready 0070                 _TXSTAbits 0098  
          __end_of___bmul 0236                ?_UART_INIT 0026            __end_of___wmul 0292  
             _BAUDCTLbits 0187            __end_of_inicio 026D       start_initialization 07F3  
              ?_SPIMaster 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0071  
                ??___wmul 0074                  ??_inicio 0073                  ?_LCD_cmd 0070  
                ?_LCD_lat 0070                  ?_LCD_dwr 0070                  ?_LCD_msg 0073  
               ___latbits 0002             __pcstackBANK0 0020              _isdigit$1130 0070  
                LCD_cmd@x 0072                  LCD_dwr@x 0072                  LCD_msg@c 0073  
             ??_LCD_ready 0070               sprintf@flag 0027               sprintf@prec 002B  
               __pnvBANK0 004B          ___lwdiv@dividend 0072                  ?___aldiv 0070  
                ?___awdiv 0076                  ?___lwdiv 0070                  ?___lwmod 0078  
             ??_UART_INIT 002A         __size_of_spiWrite 0006                 __pstrings 0003  
                ?_isdigit 0070               ??_SPIMaster 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0075                  ?_sprintf 0020            __size_of_setup 0037  
         ___aldiv@divisor 0070           ___aldiv@counter 0020            ___wmul@product 0074  
               clear_ram0 01CA                  _PIE1bits 008C                  _PIR1bits 000C  
             __stringbase 0012         ___wmul@multiplier 0070          __size_of_LCD_cmd 0012  
        __size_of_LCD_lat 000F          __size_of_LCD_dwr 0012          __size_of_LCD_msg 0026  
        __size_of___aldiv 009D          __size_of___awdiv 0069          __size_of___lwdiv 0044  
        __size_of___lwmod 003A        __end_of__stringtab 0013                sprintf@val 0028  
        __size_of_isdigit 0012           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 01FD                  __ptext11 026D                  __ptext12 03F9  
                __ptext13 0396                  __ptext14 0462                  __ptext15 0236  
                __ptext16 0292                  __ptext17 01EB                  __ptext18 02B8  
                __ptext19 01DC          __size_of_spiRead 000A         __CFG_BOR4V$BOR40V 0000  
        __size_of_sprintf 0163         UART_INIT@baudrate 0026             __size_of_main 0191  
                _spiWrite 01C4                _INTCONbits 000B                  isdigit@c 0071  
               sprintf@ap 0026                 sprintf@sp 002A          ___lwmod@dividend 007A  
               stringcode 000D                _OSCCONbits 008F                  sprintf@c 002C  
                sprintf@f 0020           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                stringdir 000D                  stringtab 0003              ___aldiv@sign 0021  
              _SSPCONbits 0014  
