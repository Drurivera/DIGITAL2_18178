

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 12 23:50:53 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  008F                     	;# 
   121  0090                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  0105                     	;# 
   140  0107                     	;# 
   141  0108                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  0185                     	;# 
   149  0187                     	;# 
   150  0188                     	;# 
   151  0189                     	;# 
   152  018C                     	;# 
   153  018D                     	;# 
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000E                     	;# 
   170  000F                     	;# 
   171  0010                     	;# 
   172  0011                     	;# 
   173  0012                     	;# 
   174  0013                     	;# 
   175  0014                     	;# 
   176  0015                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0017                     	;# 
   180  0018                     	;# 
   181  0019                     	;# 
   182  001A                     	;# 
   183  001B                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001D                     	;# 
   187  001E                     	;# 
   188  001F                     	;# 
   189  0081                     	;# 
   190  0085                     	;# 
   191  0086                     	;# 
   192  0087                     	;# 
   193  0088                     	;# 
   194  0089                     	;# 
   195  008C                     	;# 
   196  008D                     	;# 
   197  008E                     	;# 
   198  008F                     	;# 
   199  0090                     	;# 
   200  0091                     	;# 
   201  0092                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0094                     	;# 
   206  0095                     	;# 
   207  0096                     	;# 
   208  0097                     	;# 
   209  0098                     	;# 
   210  0099                     	;# 
   211  009A                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  0105                     	;# 
   218  0107                     	;# 
   219  0108                     	;# 
   220  0109                     	;# 
   221  010C                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  010F                     	;# 
   226  0185                     	;# 
   227  0187                     	;# 
   228  0188                     	;# 
   229  0189                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0000                     	;# 
   311  0001                     	;# 
   312  0002                     	;# 
   313  0003                     	;# 
   314  0004                     	;# 
   315  0005                     	;# 
   316  0006                     	;# 
   317  0007                     	;# 
   318  0008                     	;# 
   319  0009                     	;# 
   320  000A                     	;# 
   321  000B                     	;# 
   322  000C                     	;# 
   323  000D                     	;# 
   324  000E                     	;# 
   325  000E                     	;# 
   326  000F                     	;# 
   327  0010                     	;# 
   328  0011                     	;# 
   329  0012                     	;# 
   330  0013                     	;# 
   331  0014                     	;# 
   332  0015                     	;# 
   333  0015                     	;# 
   334  0016                     	;# 
   335  0017                     	;# 
   336  0018                     	;# 
   337  0019                     	;# 
   338  001A                     	;# 
   339  001B                     	;# 
   340  001B                     	;# 
   341  001C                     	;# 
   342  001D                     	;# 
   343  001E                     	;# 
   344  001F                     	;# 
   345  0081                     	;# 
   346  0085                     	;# 
   347  0086                     	;# 
   348  0087                     	;# 
   349  0088                     	;# 
   350  0089                     	;# 
   351  008C                     	;# 
   352  008D                     	;# 
   353  008E                     	;# 
   354  008F                     	;# 
   355  0090                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009C                     	;# 
   370  009D                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  0105                     	;# 
   374  0107                     	;# 
   375  0108                     	;# 
   376  0109                     	;# 
   377  010C                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  0185                     	;# 
   383  0187                     	;# 
   384  0188                     	;# 
   385  0189                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  008F                     	;# 
   433  0090                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0093                     	;# 
   439  0094                     	;# 
   440  0095                     	;# 
   441  0096                     	;# 
   442  0097                     	;# 
   443  0098                     	;# 
   444  0099                     	;# 
   445  009A                     	;# 
   446  009B                     	;# 
   447  009C                     	;# 
   448  009D                     	;# 
   449  009E                     	;# 
   450  009F                     	;# 
   451  0105                     	;# 
   452  0107                     	;# 
   453  0108                     	;# 
   454  0109                     	;# 
   455  010C                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  010F                     	;# 
   460  0185                     	;# 
   461  0187                     	;# 
   462  0188                     	;# 
   463  0189                     	;# 
   464  018C                     	;# 
   465  018D                     	;# 
   466                           
   467                           	psect	strings
   468  0800                     __pstrings:	
   469  0800                     stringtab:	
   470  0800                     __stringtab:	
   471                           
   472                           ;	String table - string pointers are 1 byte each
   473  0800  1BFF               	btfsc	btemp+1,7
   474  0801  280A               	ljmp	stringcode
   475  0802  1383               	bcf	3,7
   476  0803  187F               	btfsc	btemp+1,0
   477  0804  1783               	bsf	3,7
   478  0805  0800               	movf	0,w
   479  0806  0A84               	incf	4,f
   480  0807  1903               	skipnz
   481  0808  0AFF               	incf	btemp+1,f
   482  0809  0008               	return
   483  080A                     stringcode:	
   484  080A                     stringdir:	
   485  080A  3008               	movlw	high stringdir
   486  080B  008A               	movwf	10
   487  080C  0804               	movf	4,w
   488  080D  0A84               	incf	4,f
   489  080E  0782               	addwf	2,f
   490  080F                     __stringbase:	
   491  080F  3400               	retlw	0
   492  0810                     __end_of__stringtab:	
   493  0810                     _dpowers:	
   494  0810  3401               	retlw	1
   495  0811  3400               	retlw	0
   496  0812  340A               	retlw	10
   497  0813  3400               	retlw	0
   498  0814  3464               	retlw	100
   499  0815  3400               	retlw	0
   500  0816  34E8               	retlw	232
   501  0817  3403               	retlw	3
   502  0818  3410               	retlw	16
   503  0819  3427               	retlw	39
   504  081A                     __end_of_dpowers:	
   505  0019                     _TXREG	set	25
   506  0018                     _RCSTAbits	set	24
   507  001E                     _ADRESH	set	30
   508  001F                     _ADCON0bits	set	31
   509  001A                     _RCREG	set	26
   510  0005                     _PORTAbits	set	5
   511  0007                     _PORTCbits	set	7
   512  0018                     _RCSTA	set	24
   513  000C                     _PIR1bits	set	12
   514  000B                     _INTCONbits	set	11
   515  0009                     _PORTE	set	9
   516  0008                     _PORTD	set	8
   517  0007                     _PORTC	set	7
   518  0006                     _PORTB	set	6
   519  0005                     _PORTA	set	5
   520  0098                     _TXSTAbits	set	152
   521  009F                     _ADCON1bits	set	159
   522  008F                     _OSCCONbits	set	143
   523  0098                     _TXSTA	set	152
   524  0099                     _SPBRG	set	153
   525  009A                     _SPBRGH	set	154
   526  008C                     _PIE1bits	set	140
   527  0089                     _TRISE	set	137
   528  0087                     _TRISC	set	135
   529  0088                     _TRISD	set	136
   530  0086                     _TRISB	set	134
   531  0085                     _TRISA	set	133
   532  0187                     _BAUDCTLbits	set	391
   533  0189                     _ANSELH	set	393
   534  0188                     _ANSEL	set	392
   535  081A                     STR_1:	
   536  081A  3453               	retlw	83	;'S'
   537  081B  3431               	retlw	49	;'1'
   538  081C  3420               	retlw	32	;' '
   539  081D  3420               	retlw	32	;' '
   540  081E  3420               	retlw	32	;' '
   541  081F  3420               	retlw	32	;' '
   542  0820  3420               	retlw	32	;' '
   543  0821  3453               	retlw	83	;'S'
   544  0822  3432               	retlw	50	;'2'
   545  0823  3420               	retlw	32	;' '
   546  0824  3420               	retlw	32	;' '
   547  0825  3420               	retlw	32	;' '
   548  0826  3420               	retlw	32	;' '
   549  0827  3420               	retlw	32	;' '
   550  0828  3453               	retlw	83	;'S'
   551  0829  3433               	retlw	51	;'3'
   552  082A  3400               	retlw	0
   553  082B                     STR_4:	
   554  082B  3425               	retlw	37	;'%'
   555  082C  342E               	retlw	46	;'.'
   556  082D  3431               	retlw	49	;'1'
   557  082E  3469               	retlw	105	;'i'
   558  082F  3400               	retlw	0
   559  0830                     STR_5:	
   560  0830  3456               	retlw	86	;'V'
   561  0831  3420               	retlw	32	;' '
   562  0832  3400               	retlw	0
   563  0833                     STR_2:	
   564  0833  342E               	retlw	46	;'.'
   565  0834  3400               	retlw	0
   566  0830                     
   567                           ; #config settings
   568  0000                     
   569                           	psect	cinit
   570  000F                     start_initialization:	
   571  000F                     __initialization:	
   572                           
   573                           ; Clear objects allocated to COMMON
   574  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   575  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   576  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   577  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   578                           
   579                           ; Clear objects allocated to BANK0
   580  0013  1383               	bcf	3,7	;select IRP bank0
   581  0014  3062               	movlw	low __pbssBANK0
   582  0015  0084               	movwf	4
   583  0016  3070               	movlw	low (__pbssBANK0+14)
   584  0017  120A  158A  20DB  120A  118A  	fcall	clear_ram0
   585                           
   586                           ; Clear objects allocated to BANK1
   587  001C  30A0               	movlw	low __pbssBANK1
   588  001D  0084               	movwf	4
   589  001E  30DD               	movlw	low (__pbssBANK1+61)
   590  001F  120A  158A  20DB  120A  118A  	fcall	clear_ram0
   591  0024                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594  0024                     __end_of__initialization:	
   595  0024  0183               	clrf	3
   596  0025  120A  158A  2904   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMMON
   599  0076                     __pbssCOMMON:	
   600  0076                     _DC1:	
   601  0076                     	ds	2
   602  0078                     _analogic_digital_b:	
   603  0078                     	ds	1
   604  0079                     _analogic_digital_a:	
   605  0079                     	ds	1
   606                           
   607                           	psect	bssBANK0
   608  0062                     __pbssBANK0:	
   609  0062                     _rXc:	
   610  0062                     	ds	2
   611  0064                     _rX:	
   612  0064                     	ds	2
   613  0066                     _ADC2_A:	
   614  0066                     	ds	2
   615  0068                     _DC2:	
   616  0068                     	ds	2
   617  006A                     _ADCA:	
   618  006A                     	ds	2
   619  006C                     _ADC1_B:	
   620  006C                     	ds	2
   621  006E                     _ADC1_A:	
   622  006E                     	ds	2
   623                           
   624                           	psect	bssBANK1
   625  00A0                     __pbssBANK1:	
   626  00A0                     _voltageb:	
   627  00A0                     	ds	4
   628  00A4                     _voltage:	
   629  00A4                     	ds	4
   630  00A8                     _plc:	
   631  00A8                     	ds	2
   632  00AA                     _PI:	
   633  00AA                     	ds	2
   634  00AC                     _ADCB:	
   635  00AC                     	ds	2
   636  00AE                     _ADC2_B:	
   637  00AE                     	ds	2
   638  00B0                     _TERMINAL:	
   639  00B0                     	ds	5
   640  00B5                     _POINTERB:	
   641  00B5                     	ds	5
   642  00BA                     _ADCACCHARC:	
   643  00BA                     	ds	5
   644  00BF                     _ADCABCHARB:	
   645  00BF                     	ds	5
   646  00C4                     _ADCAACHARA:	
   647  00C4                     	ds	5
   648  00C9                     _POINTERA:	
   649  00C9                     	ds	5
   650  00CE                     _ADCCCHARC:	
   651  00CE                     	ds	5
   652  00D3                     _ADCBCHARB:	
   653  00D3                     	ds	5
   654  00D8                     _ADCACHARA:	
   655  00D8                     	ds	5
   656                           
   657                           	psect	clrtext
   658  08DB                     clear_ram0:	
   659                           ;	Called with FSR containing the base address, and
   660                           ;	W with the last address+1
   661                           
   662  08DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   663  08DC                     clrloop0:	
   664  08DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   665  08DD  0A84               	incf	4,f	;increment pointer
   666  08DE  0604               	xorwf	4,w	;XOR with final address
   667  08DF  1903               	btfsc	3,2	;have we reached the end yet?
   668  08E0  3400               	retlw	0	;all done for this memory range, return
   669  08E1  0604               	xorwf	4,w	;XOR again to restore value
   670  08E2  28DC               	goto	clrloop0	;do the next byte
   671                           
   672                           	psect	cstackBANK1
   673  00DD                     __pcstackBANK1:	
   674  00DD                     ??_ADC:	
   675                           
   676                           ; 1 bytes @ 0x0
   677  00DD                     	ds	4
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_isdigit:	
   682  0070                     ?_setup:	
   683                           ; 1 bit 
   684                           
   685  0070                     ?_inicio:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_ADC:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_LCD_ready:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_LCD_lat:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_main:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_LCD_cmd:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_LCD_dwr:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_ISR:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_ISR:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 1 bytes @ 0x0
   714  0070                     	ds	4
   715  0074                     ??_setup:	
   716  0074                     ??_LCD_ready:	
   717                           ; 1 bytes @ 0x4
   718                           
   719  0074                     ??_LCD_lat:	
   720                           ; 1 bytes @ 0x4
   721                           
   722  0074                     ?_strcat:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     ?_strcpy:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     ??_isdigit:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     ?___bmul:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ??___awdiv:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     ??___lwdiv:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     ?__Umul8_16:	
   741                           ; 1 bytes @ 0x4
   742                           
   743  0074                     ___bmul@multiplicand:	
   744                           ; 2 bytes @ 0x4
   745                           
   746  0074                     _isdigit$1064:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     strcat@from:	
   750                           ; 1 bytes @ 0x4
   751                           
   752  0074                     strcpy@from:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     __Umul8_16@multiplicand:	
   756                           ; 1 bytes @ 0x4
   757                           
   758                           
   759                           ; 1 bytes @ 0x4
   760  0074                     	ds	1
   761  0075                     ??_strcat:	
   762  0075                     ??_strcpy:	
   763                           ; 1 bytes @ 0x5
   764                           
   765  0075                     ??___bmul:	
   766                           ; 1 bytes @ 0x5
   767                           
   768  0075                     ??___awmod:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     ??___lwmod:	
   772                           ; 1 bytes @ 0x5
   773                           
   774  0075                     isdigit@c:	
   775                           ; 1 bytes @ 0x5
   776                           
   777                           
   778                           ; 1 bytes @ 0x5
   779  0075                     	ds	1
   780  0076                     ??_inicio:	
   781  0076                     ??_main:	
   782                           ; 1 bytes @ 0x6
   783                           
   784  0076                     ??_LCD_cmd:	
   785                           ; 1 bytes @ 0x6
   786                           
   787  0076                     ??_LCD_dwr:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0076                     ??_LCD_msg:	
   791                           ; 1 bytes @ 0x6
   792                           
   793                           
   794                           	psect	cstackBANK0
   795  0020                     __pcstackBANK0:	
   796                           ; 1 bytes @ 0x6
   797                           
   798  0020                     ??__Umul8_16:	
   799  0020                     ?___awdiv:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0020                     ?___lwdiv:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     ?___xxtofl:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     LCD_cmd@x:	
   809                           ; 4 bytes @ 0x0
   810                           
   811  0020                     LCD_dwr@x:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     ___bmul@product:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     strcat@to:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     strcpy@cp:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     ___awdiv@divisor:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     ___lwdiv@divisor:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ___xxtofl@val:	
   830                           ; 2 bytes @ 0x0
   831                           
   832                           
   833                           ; 4 bytes @ 0x0
   834  0020                     	ds	1
   835  0021                     ?_LCD_msg:	
   836  0021                     ___bmul@multiplier:	
   837                           ; 1 bytes @ 0x1
   838                           
   839  0021                     strcat@cp:	
   840                           ; 1 bytes @ 0x1
   841                           
   842  0021                     strcpy@to:	
   843                           ; 1 bytes @ 0x1
   844                           
   845  0021                     LCD_msg@c:	
   846                           ; 1 bytes @ 0x1
   847                           
   848                           
   849                           ; 2 bytes @ 0x1
   850  0021                     	ds	1
   851  0022                     ___awdiv@dividend:	
   852  0022                     ___lwdiv@dividend:	
   853                           ; 2 bytes @ 0x2
   854                           
   855  0022                     __Umul8_16@product:	
   856                           ; 2 bytes @ 0x2
   857                           
   858                           
   859                           ; 2 bytes @ 0x2
   860  0022                     	ds	2
   861  0024                     ??___xxtofl:	
   862  0024                     ___awdiv@counter:	
   863                           ; 1 bytes @ 0x4
   864                           
   865  0024                     ___lwdiv@counter:	
   866                           ; 1 bytes @ 0x4
   867                           
   868  0024                     __Umul8_16@word_mpld:	
   869                           ; 1 bytes @ 0x4
   870                           
   871                           
   872                           ; 2 bytes @ 0x4
   873  0024                     	ds	1
   874  0025                     ___awdiv@sign:	
   875  0025                     ___lwdiv@quotient:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 2 bytes @ 0x5
   880  0025                     	ds	1
   881  0026                     __Umul8_16@multiplier:	
   882  0026                     ___awdiv@quotient:	
   883                           ; 1 bytes @ 0x6
   884                           
   885                           
   886                           ; 2 bytes @ 0x6
   887  0026                     	ds	1
   888  0027                     ?___lwmod:	
   889  0027                     ___lwmod@divisor:	
   890                           ; 2 bytes @ 0x7
   891                           
   892                           
   893                           ; 2 bytes @ 0x7
   894  0027                     	ds	1
   895  0028                     ?___awmod:	
   896  0028                     ___xxtofl@sign:	
   897                           ; 2 bytes @ 0x8
   898                           
   899  0028                     ___awmod@divisor:	
   900                           ; 1 bytes @ 0x8
   901                           
   902                           
   903                           ; 2 bytes @ 0x8
   904  0028                     	ds	1
   905  0029                     ___xxtofl@exp:	
   906  0029                     ___lwmod@dividend:	
   907                           ; 1 bytes @ 0x9
   908                           
   909                           
   910                           ; 2 bytes @ 0x9
   911  0029                     	ds	1
   912  002A                     ___awmod@dividend:	
   913  002A                     ___xxtofl@arg:	
   914                           ; 2 bytes @ 0xA
   915                           
   916                           
   917                           ; 4 bytes @ 0xA
   918  002A                     	ds	1
   919  002B                     ___lwmod@counter:	
   920                           
   921                           ; 1 bytes @ 0xB
   922  002B                     	ds	1
   923  002C                     ?_utoa:	
   924  002C                     ?_sprintf:	
   925                           ; 1 bytes @ 0xC
   926                           
   927  002C                     sprintf@f:	
   928                           ; 2 bytes @ 0xC
   929                           
   930  002C                     ___awmod@counter:	
   931                           ; 1 bytes @ 0xC
   932                           
   933  002C                     utoa@val:	
   934                           ; 1 bytes @ 0xC
   935                           
   936                           
   937                           ; 2 bytes @ 0xC
   938  002C                     	ds	1
   939  002D                     ___awmod@sign:	
   940                           
   941                           ; 1 bytes @ 0xD
   942  002D                     	ds	1
   943  002E                     ?___flmul:	
   944  002E                     utoa@base:	
   945                           ; 4 bytes @ 0xE
   946                           
   947  002E                     ___flmul@b:	
   948                           ; 2 bytes @ 0xE
   949                           
   950                           
   951                           ; 4 bytes @ 0xE
   952  002E                     	ds	1
   953  002F                     ??_sprintf:	
   954                           
   955                           ; 1 bytes @ 0xF
   956  002F                     	ds	1
   957  0030                     ??_utoa:	
   958                           
   959                           ; 1 bytes @ 0x10
   960  0030                     	ds	1
   961  0031                     utoa@v:	
   962                           
   963                           ; 2 bytes @ 0x11
   964  0031                     	ds	1
   965  0032                     sprintf@ap:	
   966  0032                     ___flmul@a:	
   967                           ; 1 bytes @ 0x12
   968                           
   969                           
   970                           ; 4 bytes @ 0x12
   971  0032                     	ds	1
   972  0033                     sprintf@flag:	
   973  0033                     utoa@c:	
   974                           ; 1 bytes @ 0x13
   975                           
   976                           
   977                           ; 1 bytes @ 0x13
   978  0033                     	ds	1
   979  0034                     sprintf@sp:	
   980  0034                     utoa@buf:	
   981                           ; 1 bytes @ 0x14
   982                           
   983                           
   984                           ; 1 bytes @ 0x14
   985  0034                     	ds	1
   986  0035                     ?_itoa:	
   987  0035                     sprintf@val:	
   988                           ; 1 bytes @ 0x15
   989                           
   990  0035                     itoa@val:	
   991                           ; 2 bytes @ 0x15
   992                           
   993                           
   994                           ; 2 bytes @ 0x15
   995  0035                     	ds	1
   996  0036                     ??___flmul:	
   997                           
   998                           ; 1 bytes @ 0x16
   999  0036                     	ds	1
  1000  0037                     sprintf@prec:	
  1001  0037                     itoa@base:	
  1002                           ; 1 bytes @ 0x17
  1003                           
  1004                           
  1005                           ; 2 bytes @ 0x17
  1006  0037                     	ds	1
  1007  0038                     sprintf@c:	
  1008                           
  1009                           ; 1 bytes @ 0x18
  1010  0038                     	ds	1
  1011  0039                     ??_itoa:	
  1012                           
  1013                           ; 1 bytes @ 0x19
  1014  0039                     	ds	2
  1015  003B                     ___flmul@sign:	
  1016  003B                     itoa@buf:	
  1017                           ; 1 bytes @ 0x1B
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x1B
  1021  003B                     	ds	1
  1022  003C                     ___flmul@aexp:	
  1023                           
  1024                           ; 1 bytes @ 0x1C
  1025  003C                     	ds	1
  1026  003D                     ___flmul@grs:	
  1027                           
  1028                           ; 4 bytes @ 0x1D
  1029  003D                     	ds	4
  1030  0041                     ___flmul@bexp:	
  1031                           
  1032                           ; 1 bytes @ 0x21
  1033  0041                     	ds	1
  1034  0042                     ___flmul@prod:	
  1035                           
  1036                           ; 4 bytes @ 0x22
  1037  0042                     	ds	4
  1038  0046                     ___flmul@temp:	
  1039                           
  1040                           ; 2 bytes @ 0x26
  1041  0046                     	ds	2
  1042  0048                     ?___fltol:	
  1043  0048                     ?___fldiv:	
  1044                           ; 4 bytes @ 0x28
  1045                           
  1046  0048                     ___fltol@f1:	
  1047                           ; 4 bytes @ 0x28
  1048                           
  1049  0048                     ___fldiv@a:	
  1050                           ; 4 bytes @ 0x28
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x28
  1054  0048                     	ds	4
  1055  004C                     ??___fltol:	
  1056  004C                     ___fldiv@b:	
  1057                           ; 1 bytes @ 0x2C
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x2C
  1061  004C                     	ds	4
  1062  0050                     ??___fldiv:	
  1063                           
  1064                           ; 1 bytes @ 0x30
  1065  0050                     	ds	1
  1066  0051                     ___fltol@sign1:	
  1067                           
  1068                           ; 1 bytes @ 0x31
  1069  0051                     	ds	1
  1070  0052                     ___fltol@exp1:	
  1071                           
  1072                           ; 1 bytes @ 0x32
  1073  0052                     	ds	3
  1074  0055                     ___fldiv@rem:	
  1075                           
  1076                           ; 4 bytes @ 0x35
  1077  0055                     	ds	4
  1078  0059                     ___fldiv@sign:	
  1079                           
  1080                           ; 1 bytes @ 0x39
  1081  0059                     	ds	1
  1082  005A                     ___fldiv@new_exp:	
  1083                           
  1084                           ; 2 bytes @ 0x3A
  1085  005A                     	ds	2
  1086  005C                     ___fldiv@grs:	
  1087                           
  1088                           ; 4 bytes @ 0x3C
  1089  005C                     	ds	4
  1090  0060                     ___fldiv@bexp:	
  1091                           
  1092                           ; 1 bytes @ 0x40
  1093  0060                     	ds	1
  1094  0061                     ___fldiv@aexp:	
  1095                           
  1096                           ; 1 bytes @ 0x41
  1097  0061                     	ds	1
  1098                           
  1099                           	psect	maintext
  1100  0904                     __pmaintext:	
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 71 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : B00/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels required when called:    5
  1126 ;; This function calls:
  1127 ;;		_ADC
  1128 ;;		_inicio
  1129 ;;		_setup
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           
  1136                           ;psect for function _main
  1137  0904                     _main:	
  1138  0904                     l3411:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1141                           
  1142                           
  1143                           ;main.c: 73:     setup ();
  1144  0904  120A  158A  2299  120A  158A  	fcall	_setup
  1145  0909                     l53:	
  1146                           ;main.c: 77:     while (1) {
  1147                           
  1148                           
  1149                           ;main.c: 78:         inicio();
  1150  0909  120A  158A  2156  120A  158A  	fcall	_inicio
  1151  090E                     l3413:	
  1152                           
  1153                           ;main.c: 79:         ADC();
  1154  090E  120A  118A  2028  120A  158A  	fcall	_ADC
  1155  0913  2909               	goto	l53
  1156  0914  120A  118A  280C   	ljmp	start
  1157  0917                     __end_of_main:	
  1158                           
  1159                           	psect	text1
  1160  0A99                     __ptext1:	
  1161 ;; *************** function _setup *****************
  1162 ;; Defined at:
  1163 ;;		line 87 in file "main.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _setup
  1193  0A99                     _setup:	
  1194  0A99                     l1645:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _setup: [wreg+status,2+status,0]
  1197                           
  1198                           
  1199                           ;main.c: 89:     ANSEL = 0b00000011;
  1200  0A99  3003               	movlw	3
  1201  0A9A  1683               	bsf	3,5	;RP0=1, select bank3
  1202  0A9B  1703               	bsf	3,6	;RP1=1, select bank3
  1203  0A9C  0088               	movwf	8	;volatile
  1204  0A9D                     l1647:	
  1205                           
  1206                           ;main.c: 90:     ANSELH= 0b00000000;
  1207  0A9D  0189               	clrf	9	;volatile
  1208  0A9E                     l1649:	
  1209                           
  1210                           ;main.c: 91:     TRISA = 0b00000011;
  1211  0A9E  3003               	movlw	3
  1212  0A9F  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0AA0  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0AA1  0085               	movwf	5	;volatile
  1215                           
  1216                           ;main.c: 92:     TRISB = 0b00000000;
  1217  0AA2  0186               	clrf	6	;volatile
  1218                           
  1219                           ;main.c: 93:     TRISD = 0b00000000;
  1220  0AA3  0188               	clrf	8	;volatile
  1221  0AA4                     l1651:	
  1222                           
  1223                           ;main.c: 94:     TRISC = 0b10000000;
  1224  0AA4  3080               	movlw	128
  1225  0AA5  0087               	movwf	7	;volatile
  1226  0AA6                     l1653:	
  1227                           
  1228                           ;main.c: 95:     TRISE = 0;
  1229  0AA6  0189               	clrf	9	;volatile
  1230  0AA7                     l1655:	
  1231                           
  1232                           ;main.c: 97:     PORTA = 0;
  1233  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0AA9  0185               	clrf	5	;volatile
  1236  0AAA                     l1657:	
  1237                           
  1238                           ;main.c: 98:     PORTB = 0;
  1239  0AAA  0186               	clrf	6	;volatile
  1240  0AAB                     l1659:	
  1241                           
  1242                           ;main.c: 99:     PORTC = 0;
  1243  0AAB  0187               	clrf	7	;volatile
  1244  0AAC                     l1661:	
  1245                           
  1246                           ;main.c: 100:     PORTD = 0;
  1247  0AAC  0188               	clrf	8	;volatile
  1248  0AAD                     l1663:	
  1249                           
  1250                           ;main.c: 101:     PORTE = 0;
  1251  0AAD  0189               	clrf	9	;volatile
  1252  0AAE                     l1665:	
  1253                           
  1254                           ;main.c: 103:     PIE1bits.RCIE = 1;
  1255  0AAE  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0AAF  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0AB0  168C               	bsf	12,5	;volatile
  1258  0AB1                     l1667:	
  1259                           
  1260                           ;main.c: 104:     INTCONbits.PEIE = 1;
  1261  0AB1  170B               	bsf	11,6	;volatile
  1262  0AB2                     l1669:	
  1263                           
  1264                           ;main.c: 105:     INTCONbits.GIE = 1;
  1265  0AB2  178B               	bsf	11,7	;volatile
  1266  0AB3                     l1671:	
  1267                           
  1268                           ;main.c: 106:     PIR1bits.RCIF = 0;
  1269  0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0AB5  128C               	bcf	12,5	;volatile
  1272  0AB6                     l1673:	
  1273                           
  1274                           ;main.c: 107:     PIR1bits.TXIF = 0;
  1275  0AB6  120C               	bcf	12,4	;volatile
  1276  0AB7                     l1675:	
  1277                           
  1278                           ;main.c: 108:     SPBRGH = 0;
  1279  0AB7  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0AB8  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0AB9  019A               	clrf	26	;volatile
  1282                           
  1283                           ;main.c: 109:     SPBRG = 25;
  1284  0ABA  3019               	movlw	25
  1285  0ABB  0099               	movwf	25	;volatile
  1286                           
  1287                           ;main.c: 110:     TXSTA = 0b00100100;
  1288  0ABC  3024               	movlw	36
  1289  0ABD  0098               	movwf	24	;volatile
  1290                           
  1291                           ;main.c: 111:     RCSTA = 0b10010000;
  1292  0ABE  3090               	movlw	144
  1293  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0AC1  0098               	movwf	24	;volatile
  1296  0AC2                     l1677:	
  1297                           
  1298                           ;main.c: 112:     BAUDCTLbits.BRG16 = 0;
  1299  0AC2  1683               	bsf	3,5	;RP0=1, select bank3
  1300  0AC3  1703               	bsf	3,6	;RP1=1, select bank3
  1301  0AC4  1187               	bcf	7,3	;volatile
  1302  0AC5                     l1679:	
  1303                           
  1304                           ;main.c: 113:     OSCCONbits.IRCF = 0b110;
  1305  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0AC6  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0AC7  080F               	movf	15,w	;volatile
  1308  0AC8  398F               	andlw	-113
  1309  0AC9  3860               	iorlw	96
  1310  0ACA  008F               	movwf	15	;volatile
  1311  0ACB                     l1681:	
  1312                           
  1313                           ;main.c: 114:     OSCCONbits.OSTS= 0;
  1314  0ACB  118F               	bcf	15,3	;volatile
  1315  0ACC                     l1683:	
  1316                           
  1317                           ;main.c: 115:     OSCCONbits.HTS = 0;
  1318  0ACC  110F               	bcf	15,2	;volatile
  1319  0ACD                     l1685:	
  1320                           
  1321                           ;main.c: 116:     OSCCONbits.LTS = 0;
  1322  0ACD  108F               	bcf	15,1	;volatile
  1323  0ACE                     l1687:	
  1324                           
  1325                           ;main.c: 117:     OSCCONbits.SCS = 1;
  1326  0ACE  140F               	bsf	15,0	;volatile
  1327  0ACF                     l59:	
  1328  0ACF  0008               	return
  1329  0AD0                     __end_of_setup:	
  1330                           
  1331                           	psect	text2
  1332  0956                     __ptext2:	
  1333 ;; *************** function _inicio *****************
  1334 ;; Defined at:
  1335 ;;		line 57 in file "LCD.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    3
  1356 ;; This function calls:
  1357 ;;		_LCD_cmd
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _inicio
  1365  0956                     _inicio:	
  1366  0956                     l3303:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _inicio: [wreg+status,2+status,0+pclath+cstack]
  1369                           
  1370                           
  1371                           ;LCD.c: 58:     LCD_cmd(0x38);
  1372  0956  3038               	movlw	56
  1373  0957  120A  158A  2117  120A  158A  	fcall	_LCD_cmd
  1374                           
  1375                           ;LCD.c: 59:     LCD_cmd(0x0C);
  1376  095C  300C               	movlw	12
  1377  095D  120A  158A  2117  120A  158A  	fcall	_LCD_cmd
  1378                           
  1379                           ;LCD.c: 60:     LCD_cmd(0x01);
  1380  0962  3001               	movlw	1
  1381  0963  120A  158A  2117  120A  158A  	fcall	_LCD_cmd
  1382                           
  1383                           ;LCD.c: 61:     LCD_cmd(0x06);
  1384  0968  3006               	movlw	6
  1385  0969  120A  158A  2117  120A  158A  	fcall	_LCD_cmd
  1386                           
  1387                           ;LCD.c: 62:     LCD_cmd(0x80);
  1388  096E  3080               	movlw	128
  1389  096F  120A  158A  2117  120A  158A  	fcall	_LCD_cmd
  1390  0974                     l91:	
  1391  0974  0008               	return
  1392  0975                     __end_of_inicio:	
  1393                           
  1394                           	psect	text3
  1395  0028                     __ptext3:	
  1396 ;; *************** function _ADC *****************
  1397 ;; Defined at:
  1398 ;;		line 84 in file "adc.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       0       4       0       0
  1415 ;;      Totals:         0       0       4       0       0
  1416 ;;Total ram usage:        4 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    4
  1419 ;; This function calls:
  1420 ;;		_LCD_cmd
  1421 ;;		_LCD_msg
  1422 ;;		___awdiv
  1423 ;;		___awmod
  1424 ;;		___fldiv
  1425 ;;		___flmul
  1426 ;;		___fltol
  1427 ;;		___xxtofl
  1428 ;;		_itoa
  1429 ;;		_sprintf
  1430 ;;		_strcat
  1431 ;;		_strcpy
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _ADC
  1439  0028                     _ADC:	
  1440  0028                     l3305:	
  1441                           ;incstack = 0
  1442                           ; Regs used in _ADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1443                           
  1444                           
  1445                           ;adc.c: 85:     PIE1bits.RCIE = 1;
  1446  0028  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0029  1303               	bcf	3,6	;RP1=0, select bank1
  1448  002A  168C               	bsf	12,5	;volatile
  1449                           
  1450                           ;adc.c: 86:     INTCONbits.PEIE = 1;
  1451  002B  170B               	bsf	11,6	;volatile
  1452                           
  1453                           ;adc.c: 87:     INTCONbits.GIE = 1;
  1454  002C  178B               	bsf	11,7	;volatile
  1455                           
  1456                           ;adc.c: 88:     PIR1bits.RCIF = 0;
  1457  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1458  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1459  002F  128C               	bcf	12,5	;volatile
  1460                           
  1461                           ;adc.c: 89:     PIR1bits.TXIF = 0;
  1462  0030  120C               	bcf	12,4	;volatile
  1463  0031                     l3307:	
  1464                           
  1465                           ;adc.c: 90:     rXc = 0;
  1466  0031  01E2               	clrf	_rXc
  1467  0032  01E3               	clrf	_rXc+1
  1468  0033                     l3309:	
  1469                           
  1470                           ;adc.c: 92:         ADCON0bits.ADCS = 01;
  1471  0033  081F               	movf	31,w	;volatile
  1472  0034  393F               	andlw	-193
  1473  0035  3840               	iorlw	64
  1474  0036  009F               	movwf	31	;volatile
  1475  0037                     l3311:	
  1476                           
  1477                           ;adc.c: 93:         ADCON0bits.ADON = 1;
  1478  0037  141F               	bsf	31,0	;volatile
  1479  0038                     l3313:	
  1480                           
  1481                           ;adc.c: 94:         ADCON1bits.ADFM = 0;
  1482  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1484  003A  139F               	bcf	31,7	;volatile
  1485  003B                     l3315:	
  1486                           
  1487                           ;adc.c: 95:         ADCON1bits.VCFG0 = 0;
  1488  003B  121F               	bcf	31,4	;volatile
  1489  003C                     l3317:	
  1490                           
  1491                           ;adc.c: 96:         ADCON1bits.VCFG1 = 0;
  1492  003C  129F               	bcf	31,5	;volatile
  1493  003D                     l3319:	
  1494                           
  1495                           ;adc.c: 97:         SPBRGH = 0;
  1496  003D  019A               	clrf	26	;volatile
  1497  003E                     l3321:	
  1498                           
  1499                           ;adc.c: 98:         SPBRG = 25;
  1500  003E  3019               	movlw	25
  1501  003F  0099               	movwf	25	;volatile
  1502  0040                     l3323:	
  1503                           
  1504                           ;adc.c: 99:         TXSTA = 0b00100100;
  1505  0040  3024               	movlw	36
  1506  0041  0098               	movwf	24	;volatile
  1507  0042                     l3325:	
  1508                           
  1509                           ;adc.c: 100:         RCSTA = 0b10010000;
  1510  0042  3090               	movlw	144
  1511  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0045  0098               	movwf	24	;volatile
  1514  0046                     l3327:	
  1515                           
  1516                           ;adc.c: 101:         LCD_msg("S1     S2     S3");
  1517  0046  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1518  0047  00A1               	movwf	LCD_msg@c
  1519  0048  3080               	movlw	128
  1520  0049  00A2               	movwf	LCD_msg@c+1
  1521  004A  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  1522  004F                     l3329:	
  1523                           
  1524                           ;adc.c: 103:             _delay((unsigned long)((1)*(4000000/4000.0)));
  1525  004F  30C7               	movlw	199
  1526  0050  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0051  1303               	bcf	3,6	;RP1=0, select bank1
  1528  0052  00DD               	movwf	??_ADC^(0+128)
  1529  0053                     u4277:	
  1530  0053  2854               	nop2
  1531  0054  0BDD               	decfsz	??_ADC^(0+128),f
  1532  0055  2853               	goto	u4277
  1533  0056  2857               	nop2
  1534  0057                     l3331:	
  1535                           
  1536                           ;adc.c: 104:             ADCON0bits.CHS = 0000;
  1537  0057  30C3               	movlw	-61
  1538  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1540  005A  059F               	andwf	31,f	;volatile
  1541  005B                     l3333:	
  1542                           
  1543                           ;adc.c: 105:             ADCON0bits.ADON = 1;
  1544  005B  141F               	bsf	31,0	;volatile
  1545  005C                     l3335:	
  1546                           
  1547                           ;adc.c: 106:             ADCON0bits.GO = 1;
  1548  005C  149F               	bsf	31,1	;volatile
  1549  005D                     l195:	
  1550                           ;adc.c: 107:             while (ADCON0bits.GO);
  1551                           
  1552  005D  189F               	btfsc	31,1	;volatile
  1553  005E  2860               	goto	u4251
  1554  005F  2861               	goto	u4250
  1555  0060                     u4251:	
  1556  0060  285D               	goto	l195
  1557  0061                     u4250:	
  1558  0061                     l3337:	
  1559                           
  1560                           ;adc.c: 108:             analogic_digital_a = ADRESH;
  1561  0061  081E               	movf	30,w	;volatile
  1562  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0064  00DD               	movwf	??_ADC^(0+128)
  1565  0065  085D               	movf	??_ADC^(0+128),w
  1566  0066  00F9               	movwf	_analogic_digital_a
  1567  0067                     l3339:	
  1568                           
  1569                           ;adc.c: 109:             voltage = (analogic_digital_a * 5.0) / 255.0;
  1570  0067  3043               	movlw	67
  1571  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1573  006A  00CB               	movwf	___fldiv@a+3
  1574  006B  307F               	movlw	127
  1575  006C  00CA               	movwf	___fldiv@a+2
  1576  006D  3000               	movlw	0
  1577  006E  00C9               	movwf	___fldiv@a+1
  1578  006F  3000               	movlw	0
  1579  0070  00C8               	movwf	___fldiv@a
  1580  0071  3040               	movlw	64
  1581  0072  00B1               	movwf	___flmul@b+3
  1582  0073  30A0               	movlw	160
  1583  0074  00B0               	movwf	___flmul@b+2
  1584  0075  3000               	movlw	0
  1585  0076  00AF               	movwf	___flmul@b+1
  1586  0077  3000               	movlw	0
  1587  0078  00AE               	movwf	___flmul@b
  1588  0079  0879               	movf	_analogic_digital_a,w
  1589  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1590  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1591  007C  00DD               	movwf	??_ADC^(0+128)
  1592  007D  01DE               	clrf	(??_ADC^(0+128)+1)
  1593  007E  01DF               	clrf	(??_ADC^(0+128)+2)
  1594  007F  01E0               	clrf	(??_ADC^(0+128)+3)
  1595  0080  0860               	movf	(??_ADC+3)^(0+128),w
  1596  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0083  00A3               	movwf	___xxtofl@val+3
  1599  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0086  085F               	movf	(??_ADC+2)^(0+128),w
  1602  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0089  00A2               	movwf	___xxtofl@val+2
  1605  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1606  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1607  008C  085E               	movf	(??_ADC+1)^(0+128),w
  1608  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1609  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1610  008F  00A1               	movwf	___xxtofl@val+1
  1611  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0092  085D               	movf	??_ADC^(0+128),w
  1614  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0095  00A0               	movwf	___xxtofl@val
  1617  0096  3001               	movlw	1
  1618  0097  120A  118A  26F9  120A  118A  	fcall	___xxtofl
  1619  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1620  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1621  009E  0823               	movf	?___xxtofl+3,w
  1622  009F  00B5               	movwf	___flmul@a+3
  1623  00A0  0822               	movf	?___xxtofl+2,w
  1624  00A1  00B4               	movwf	___flmul@a+2
  1625  00A2  0821               	movf	?___xxtofl+1,w
  1626  00A3  00B3               	movwf	___flmul@a+1
  1627  00A4  0820               	movf	?___xxtofl,w
  1628  00A5  00B2               	movwf	___flmul@a
  1629  00A6  120A  118A  2398  120A  118A  	fcall	___flmul
  1630  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1631  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1632  00AD  0831               	movf	?___flmul+3,w
  1633  00AE  00CF               	movwf	___fldiv@b+3
  1634  00AF  0830               	movf	?___flmul+2,w
  1635  00B0  00CE               	movwf	___fldiv@b+2
  1636  00B1  082F               	movf	?___flmul+1,w
  1637  00B2  00CD               	movwf	___fldiv@b+1
  1638  00B3  082E               	movf	?___flmul,w
  1639  00B4  00CC               	movwf	___fldiv@b
  1640  00B5  120A  158A  2623  120A  118A  	fcall	___fldiv
  1641  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1642  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1643  00BC  084B               	movf	?___fldiv+3,w
  1644  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1645  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1646  00BF  00A7               	movwf	(_voltage+3)^(0+128)
  1647  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1648  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1649  00C2  084A               	movf	?___fldiv+2,w
  1650  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1651  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1652  00C5  00A6               	movwf	(_voltage+2)^(0+128)
  1653  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1654  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1655  00C8  0849               	movf	?___fldiv+1,w
  1656  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1657  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1658  00CB  00A5               	movwf	(_voltage+1)^(0+128)
  1659  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1660  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1661  00CE  0848               	movf	?___fldiv,w
  1662  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1663  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1664  00D1  00A4               	movwf	_voltage^(0+128)
  1665  00D2                     l3341:	
  1666                           
  1667                           ;adc.c: 110:             DC1 = (voltage)*100;
  1668  00D2  0827               	movf	(_voltage+3)^(0+128),w
  1669  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1670  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1671  00D5  00B5               	movwf	___flmul@a+3
  1672  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  1673  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  1674  00D8  0826               	movf	(_voltage+2)^(0+128),w
  1675  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1676  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1677  00DB  00B4               	movwf	___flmul@a+2
  1678  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1679  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1680  00DE  0825               	movf	(_voltage+1)^(0+128),w
  1681  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1682  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1683  00E1  00B3               	movwf	___flmul@a+1
  1684  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1685  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1686  00E4  0824               	movf	_voltage^(0+128),w
  1687  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1688  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1689  00E7  00B2               	movwf	___flmul@a
  1690  00E8  3042               	movlw	66
  1691  00E9  00B1               	movwf	___flmul@b+3
  1692  00EA  30C8               	movlw	200
  1693  00EB  00B0               	movwf	___flmul@b+2
  1694  00EC  3000               	movlw	0
  1695  00ED  00AF               	movwf	___flmul@b+1
  1696  00EE  3000               	movlw	0
  1697  00EF  00AE               	movwf	___flmul@b
  1698  00F0  120A  118A  2398  120A  118A  	fcall	___flmul
  1699  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1700  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1701  00F7  0831               	movf	?___flmul+3,w
  1702  00F8  00CB               	movwf	___fltol@f1+3
  1703  00F9  0830               	movf	?___flmul+2,w
  1704  00FA  00CA               	movwf	___fltol@f1+2
  1705  00FB  082F               	movf	?___flmul+1,w
  1706  00FC  00C9               	movwf	___fltol@f1+1
  1707  00FD  082E               	movf	?___flmul,w
  1708  00FE  00C8               	movwf	___fltol@f1
  1709  00FF  120A  158A  2442  120A  118A  	fcall	___fltol
  1710  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1711  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1712  0106  0849               	movf	?___fltol+1,w
  1713  0107  00F7               	movwf	_DC1+1
  1714  0108  0848               	movf	?___fltol,w
  1715  0109  00F6               	movwf	_DC1
  1716  010A                     l3343:	
  1717                           
  1718                           ;adc.c: 111:             ADC1_A = DC1 % 10;
  1719  010A  300A               	movlw	10
  1720  010B  00A8               	movwf	___awmod@divisor
  1721  010C  3000               	movlw	0
  1722  010D  00A9               	movwf	___awmod@divisor+1
  1723  010E  0877               	movf	_DC1+1,w
  1724  010F  00AB               	movwf	___awmod@dividend+1
  1725  0110  0876               	movf	_DC1,w
  1726  0111  00AA               	movwf	___awmod@dividend
  1727  0112  120A  158A  230C  120A  118A  	fcall	___awmod
  1728  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0119  0829               	movf	?___awmod+1,w
  1731  011A  00EF               	movwf	_ADC1_A+1
  1732  011B  0828               	movf	?___awmod,w
  1733  011C  00EE               	movwf	_ADC1_A
  1734  011D                     l3345:	
  1735                           
  1736                           ;adc.c: 112:             itoa(ADCACHARA, ADC1_A, 10);
  1737  011D  086F               	movf	_ADC1_A+1,w
  1738  011E  00B6               	movwf	itoa@val+1
  1739  011F  086E               	movf	_ADC1_A,w
  1740  0120  00B5               	movwf	itoa@val
  1741  0121  300A               	movlw	10
  1742  0122  00B7               	movwf	itoa@base
  1743  0123  3000               	movlw	0
  1744  0124  00B8               	movwf	itoa@base+1
  1745  0125  30D8               	movlw	(low (_ADCACHARA| 0))& (0+255)
  1746  0126  120A  158A  2198  120A  118A  	fcall	_itoa
  1747  012B                     l3347:	
  1748                           
  1749                           ;adc.c: 113:             ADC1_B = (DC1 / 10) % 10;
  1750  012B  300A               	movlw	10
  1751  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1752  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1753  012E  00A8               	movwf	___awmod@divisor
  1754  012F  3000               	movlw	0
  1755  0130  00A9               	movwf	___awmod@divisor+1
  1756  0131  300A               	movlw	10
  1757  0132  00A0               	movwf	___awdiv@divisor
  1758  0133  3000               	movlw	0
  1759  0134  00A1               	movwf	___awdiv@divisor+1
  1760  0135  0877               	movf	_DC1+1,w
  1761  0136  00A3               	movwf	___awdiv@dividend+1
  1762  0137  0876               	movf	_DC1,w
  1763  0138  00A2               	movwf	___awdiv@dividend
  1764  0139  120A  158A  2367  120A  118A  	fcall	___awdiv
  1765  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1766  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0140  0821               	movf	?___awdiv+1,w
  1768  0141  00AB               	movwf	___awmod@dividend+1
  1769  0142  0820               	movf	?___awdiv,w
  1770  0143  00AA               	movwf	___awmod@dividend
  1771  0144  120A  158A  230C  120A  118A  	fcall	___awmod
  1772  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1773  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1774  014B  0829               	movf	?___awmod+1,w
  1775  014C  00ED               	movwf	_ADC1_B+1
  1776  014D  0828               	movf	?___awmod,w
  1777  014E  00EC               	movwf	_ADC1_B
  1778  014F                     l3349:	
  1779                           
  1780                           ;adc.c: 114:             itoa(ADCBCHARB, ADC1_B, 10);
  1781  014F  086D               	movf	_ADC1_B+1,w
  1782  0150  00B6               	movwf	itoa@val+1
  1783  0151  086C               	movf	_ADC1_B,w
  1784  0152  00B5               	movwf	itoa@val
  1785  0153  300A               	movlw	10
  1786  0154  00B7               	movwf	itoa@base
  1787  0155  3000               	movlw	0
  1788  0156  00B8               	movwf	itoa@base+1
  1789  0157  30D3               	movlw	(low (_ADCBCHARB| 0))& (0+255)
  1790  0158  120A  158A  2198  120A  118A  	fcall	_itoa
  1791  015D                     l3351:	
  1792                           
  1793                           ;adc.c: 115:             ADCA = (DC1 / 100) % 10;
  1794  015D  300A               	movlw	10
  1795  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1796  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0160  00A8               	movwf	___awmod@divisor
  1798  0161  3000               	movlw	0
  1799  0162  00A9               	movwf	___awmod@divisor+1
  1800  0163  3064               	movlw	100
  1801  0164  00A0               	movwf	___awdiv@divisor
  1802  0165  3000               	movlw	0
  1803  0166  00A1               	movwf	___awdiv@divisor+1
  1804  0167  0877               	movf	_DC1+1,w
  1805  0168  00A3               	movwf	___awdiv@dividend+1
  1806  0169  0876               	movf	_DC1,w
  1807  016A  00A2               	movwf	___awdiv@dividend
  1808  016B  120A  158A  2367  120A  118A  	fcall	___awdiv
  1809  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0172  0821               	movf	?___awdiv+1,w
  1812  0173  00AB               	movwf	___awmod@dividend+1
  1813  0174  0820               	movf	?___awdiv,w
  1814  0175  00AA               	movwf	___awmod@dividend
  1815  0176  120A  158A  230C  120A  118A  	fcall	___awmod
  1816  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1817  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1818  017D  0829               	movf	?___awmod+1,w
  1819  017E  00EB               	movwf	_ADCA+1
  1820  017F  0828               	movf	?___awmod,w
  1821  0180  00EA               	movwf	_ADCA
  1822  0181                     l3353:	
  1823                           
  1824                           ;adc.c: 116:             itoa(ADCCCHARC, ADCA, 10);
  1825  0181  086B               	movf	_ADCA+1,w
  1826  0182  00B6               	movwf	itoa@val+1
  1827  0183  086A               	movf	_ADCA,w
  1828  0184  00B5               	movwf	itoa@val
  1829  0185  300A               	movlw	10
  1830  0186  00B7               	movwf	itoa@base
  1831  0187  3000               	movlw	0
  1832  0188  00B8               	movwf	itoa@base+1
  1833  0189  30CE               	movlw	(low (_ADCCCHARC| 0))& (0+255)
  1834  018A  120A  158A  2198  120A  118A  	fcall	_itoa
  1835  018F                     l3355:	
  1836                           
  1837                           ;adc.c: 117:             strcat(ADCBCHARB, ADCACHARA);
  1838  018F  30D8               	movlw	(low (_ADCACHARA| 0))& (0+255)
  1839  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0191  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0192  00DD               	movwf	??_ADC^(0+128)
  1842  0193  085D               	movf	??_ADC^(0+128),w
  1843  0194  00F4               	movwf	strcat@from
  1844  0195  30D3               	movlw	(low (_ADCBCHARB| 0))& (0+255)
  1845  0196  120A  158A  2238  120A  118A  	fcall	_strcat
  1846  019B                     l3357:	
  1847                           
  1848                           ;adc.c: 118:             strcpy(POINTERA, ".");
  1849  019B  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1850  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1851  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1852  019E  00DD               	movwf	??_ADC^(0+128)
  1853  019F  085D               	movf	??_ADC^(0+128),w
  1854  01A0  00F4               	movwf	strcpy@from
  1855  01A1  30C9               	movlw	(low (_POINTERA| 0))& (0+255)
  1856  01A2  120A  158A  2175  120A  118A  	fcall	_strcpy
  1857  01A7                     l3359:	
  1858                           
  1859                           ;adc.c: 119:             strcat(POINTERA, ADCBCHARB);
  1860  01A7  30D3               	movlw	(low (_ADCBCHARB| 0))& (0+255)
  1861  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1862  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1863  01AA  00DD               	movwf	??_ADC^(0+128)
  1864  01AB  085D               	movf	??_ADC^(0+128),w
  1865  01AC  00F4               	movwf	strcat@from
  1866  01AD  30C9               	movlw	(low (_POINTERA| 0))& (0+255)
  1867  01AE  120A  158A  2238  120A  118A  	fcall	_strcat
  1868  01B3                     l3361:	
  1869                           
  1870                           ;adc.c: 120:             strcat(ADCCCHARC, POINTERA);
  1871  01B3  30C9               	movlw	(low (_POINTERA| 0))& (0+255)
  1872  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  1873  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  1874  01B6  00DD               	movwf	??_ADC^(0+128)
  1875  01B7  085D               	movf	??_ADC^(0+128),w
  1876  01B8  00F4               	movwf	strcat@from
  1877  01B9  30CE               	movlw	(low (_ADCCCHARC| 0))& (0+255)
  1878  01BA  120A  158A  2238  120A  118A  	fcall	_strcat
  1879  01BF                     l3363:	
  1880                           
  1881                           ;adc.c: 123:             _delay((unsigned long)((600)*(4000000/4000000.0)));
  1882  01BF  30C7               	movlw	199
  1883  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  1884  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  1885  01C2  00DD               	movwf	??_ADC^(0+128)
  1886  01C3                     u4287:	
  1887  01C3  0BDD               	decfsz	??_ADC^(0+128),f
  1888  01C4  29C3               	goto	u4287
  1889  01C5                     l3365:	
  1890                           
  1891                           ;adc.c: 124:             ADCON0bits.CHS = 0001;
  1892  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1893  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1894  01C7  081F               	movf	31,w	;volatile
  1895  01C8  39C3               	andlw	-61
  1896  01C9  3804               	iorlw	4
  1897  01CA  009F               	movwf	31	;volatile
  1898  01CB                     l3367:	
  1899                           
  1900                           ;adc.c: 125:             ADCON0bits.ADON = 1;
  1901  01CB  141F               	bsf	31,0	;volatile
  1902  01CC                     l3369:	
  1903                           
  1904                           ;adc.c: 126:             ADCON0bits.GO = 1;
  1905  01CC  149F               	bsf	31,1	;volatile
  1906  01CD                     l198:	
  1907                           ;adc.c: 127:             while (ADCON0bits.GO);
  1908                           
  1909  01CD  189F               	btfsc	31,1	;volatile
  1910  01CE  29D0               	goto	u4261
  1911  01CF  29D1               	goto	u4260
  1912  01D0                     u4261:	
  1913  01D0  29CD               	goto	l198
  1914  01D1                     u4260:	
  1915  01D1                     l3371:	
  1916                           
  1917                           ;adc.c: 128:             analogic_digital_b = ADRESH;
  1918  01D1  081E               	movf	30,w	;volatile
  1919  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1920  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1921  01D4  00DD               	movwf	??_ADC^(0+128)
  1922  01D5  085D               	movf	??_ADC^(0+128),w
  1923  01D6  00F8               	movwf	_analogic_digital_b
  1924  01D7                     l3373:	
  1925                           
  1926                           ;adc.c: 129:             voltageb = analogic_digital_b * 5.0 / 255.0;
  1927  01D7  3043               	movlw	67
  1928  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1929  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1930  01DA  00CB               	movwf	___fldiv@a+3
  1931  01DB  307F               	movlw	127
  1932  01DC  00CA               	movwf	___fldiv@a+2
  1933  01DD  3000               	movlw	0
  1934  01DE  00C9               	movwf	___fldiv@a+1
  1935  01DF  3000               	movlw	0
  1936  01E0  00C8               	movwf	___fldiv@a
  1937  01E1  3040               	movlw	64
  1938  01E2  00B1               	movwf	___flmul@b+3
  1939  01E3  30A0               	movlw	160
  1940  01E4  00B0               	movwf	___flmul@b+2
  1941  01E5  3000               	movlw	0
  1942  01E6  00AF               	movwf	___flmul@b+1
  1943  01E7  3000               	movlw	0
  1944  01E8  00AE               	movwf	___flmul@b
  1945  01E9  0878               	movf	_analogic_digital_b,w
  1946  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1947  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1948  01EC  00DD               	movwf	??_ADC^(0+128)
  1949  01ED  01DE               	clrf	(??_ADC^(0+128)+1)
  1950  01EE  01DF               	clrf	(??_ADC^(0+128)+2)
  1951  01EF  01E0               	clrf	(??_ADC^(0+128)+3)
  1952  01F0  0860               	movf	(??_ADC+3)^(0+128),w
  1953  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1954  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1955  01F3  00A3               	movwf	___xxtofl@val+3
  1956  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1957  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1958  01F6  085F               	movf	(??_ADC+2)^(0+128),w
  1959  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1960  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1961  01F9  00A2               	movwf	___xxtofl@val+2
  1962  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1963  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  1964  01FC  085E               	movf	(??_ADC+1)^(0+128),w
  1965  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1966  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1967  01FF  00A1               	movwf	___xxtofl@val+1
  1968  0200  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0201  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0202  085D               	movf	??_ADC^(0+128),w
  1971  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0205  00A0               	movwf	___xxtofl@val
  1974  0206  3001               	movlw	1
  1975  0207  120A  118A  26F9  120A  118A  	fcall	___xxtofl
  1976  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1977  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1978  020E  0823               	movf	?___xxtofl+3,w
  1979  020F  00B5               	movwf	___flmul@a+3
  1980  0210  0822               	movf	?___xxtofl+2,w
  1981  0211  00B4               	movwf	___flmul@a+2
  1982  0212  0821               	movf	?___xxtofl+1,w
  1983  0213  00B3               	movwf	___flmul@a+1
  1984  0214  0820               	movf	?___xxtofl,w
  1985  0215  00B2               	movwf	___flmul@a
  1986  0216  120A  118A  2398  120A  118A  	fcall	___flmul
  1987  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1988  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1989  021D  0831               	movf	?___flmul+3,w
  1990  021E  00CF               	movwf	___fldiv@b+3
  1991  021F  0830               	movf	?___flmul+2,w
  1992  0220  00CE               	movwf	___fldiv@b+2
  1993  0221  082F               	movf	?___flmul+1,w
  1994  0222  00CD               	movwf	___fldiv@b+1
  1995  0223  082E               	movf	?___flmul,w
  1996  0224  00CC               	movwf	___fldiv@b
  1997  0225  120A  158A  2623  120A  118A  	fcall	___fldiv
  1998  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1999  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2000  022C  084B               	movf	?___fldiv+3,w
  2001  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2002  022E  1303               	bcf	3,6	;RP1=0, select bank1
  2003  022F  00A3               	movwf	(_voltageb+3)^(0+128)
  2004  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0232  084A               	movf	?___fldiv+2,w
  2007  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0235  00A2               	movwf	(_voltageb+2)^(0+128)
  2010  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0238  0849               	movf	?___fldiv+1,w
  2013  0239  1683               	bsf	3,5	;RP0=1, select bank1
  2014  023A  1303               	bcf	3,6	;RP1=0, select bank1
  2015  023B  00A1               	movwf	(_voltageb+1)^(0+128)
  2016  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2017  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2018  023E  0848               	movf	?___fldiv,w
  2019  023F  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0240  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0241  00A0               	movwf	_voltageb^(0+128)
  2022  0242                     l3375:	
  2023                           
  2024                           ;adc.c: 130:             DC2 = (voltageb)*100;
  2025  0242  0823               	movf	(_voltageb+3)^(0+128),w
  2026  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0245  00B5               	movwf	___flmul@a+3
  2029  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0247  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0248  0822               	movf	(_voltageb+2)^(0+128),w
  2032  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2033  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2034  024B  00B4               	movwf	___flmul@a+2
  2035  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2036  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2037  024E  0821               	movf	(_voltageb+1)^(0+128),w
  2038  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0251  00B3               	movwf	___flmul@a+1
  2041  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0253  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0254  0820               	movf	_voltageb^(0+128),w
  2044  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0257  00B2               	movwf	___flmul@a
  2047  0258  3042               	movlw	66
  2048  0259  00B1               	movwf	___flmul@b+3
  2049  025A  30C8               	movlw	200
  2050  025B  00B0               	movwf	___flmul@b+2
  2051  025C  3000               	movlw	0
  2052  025D  00AF               	movwf	___flmul@b+1
  2053  025E  3000               	movlw	0
  2054  025F  00AE               	movwf	___flmul@b
  2055  0260  120A  118A  2398  120A  118A  	fcall	___flmul
  2056  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0267  0831               	movf	?___flmul+3,w
  2059  0268  00CB               	movwf	___fltol@f1+3
  2060  0269  0830               	movf	?___flmul+2,w
  2061  026A  00CA               	movwf	___fltol@f1+2
  2062  026B  082F               	movf	?___flmul+1,w
  2063  026C  00C9               	movwf	___fltol@f1+1
  2064  026D  082E               	movf	?___flmul,w
  2065  026E  00C8               	movwf	___fltol@f1
  2066  026F  120A  158A  2442  120A  118A  	fcall	___fltol
  2067  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0276  0849               	movf	?___fltol+1,w
  2070  0277  00E9               	movwf	_DC2+1
  2071  0278  0848               	movf	?___fltol,w
  2072  0279  00E8               	movwf	_DC2
  2073  027A                     l3377:	
  2074                           
  2075                           ;adc.c: 131:             ADC2_A = DC2 % 10;
  2076  027A  300A               	movlw	10
  2077  027B  00A8               	movwf	___awmod@divisor
  2078  027C  3000               	movlw	0
  2079  027D  00A9               	movwf	___awmod@divisor+1
  2080  027E  0869               	movf	_DC2+1,w
  2081  027F  00AB               	movwf	___awmod@dividend+1
  2082  0280  0868               	movf	_DC2,w
  2083  0281  00AA               	movwf	___awmod@dividend
  2084  0282  120A  158A  230C  120A  118A  	fcall	___awmod
  2085  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0289  0829               	movf	?___awmod+1,w
  2088  028A  00E7               	movwf	_ADC2_A+1
  2089  028B  0828               	movf	?___awmod,w
  2090  028C  00E6               	movwf	_ADC2_A
  2091  028D                     l3379:	
  2092                           
  2093                           ;adc.c: 132:             itoa(ADCAACHARA, ADC2_A, 10);
  2094  028D  0867               	movf	_ADC2_A+1,w
  2095  028E  00B6               	movwf	itoa@val+1
  2096  028F  0866               	movf	_ADC2_A,w
  2097  0290  00B5               	movwf	itoa@val
  2098  0291  300A               	movlw	10
  2099  0292  00B7               	movwf	itoa@base
  2100  0293  3000               	movlw	0
  2101  0294  00B8               	movwf	itoa@base+1
  2102  0295  30C4               	movlw	(low (_ADCAACHARA| 0))& (0+255)
  2103  0296  120A  158A  2198  120A  118A  	fcall	_itoa
  2104  029B                     l3381:	
  2105                           
  2106                           ;adc.c: 133:             ADC2_B = (DC2 / 10) % 10;
  2107  029B  300A               	movlw	10
  2108  029C  1283               	bcf	3,5	;RP0=0, select bank0
  2109  029D  1303               	bcf	3,6	;RP1=0, select bank0
  2110  029E  00A8               	movwf	___awmod@divisor
  2111  029F  3000               	movlw	0
  2112  02A0  00A9               	movwf	___awmod@divisor+1
  2113  02A1  300A               	movlw	10
  2114  02A2  00A0               	movwf	___awdiv@divisor
  2115  02A3  3000               	movlw	0
  2116  02A4  00A1               	movwf	___awdiv@divisor+1
  2117  02A5  0869               	movf	_DC2+1,w
  2118  02A6  00A3               	movwf	___awdiv@dividend+1
  2119  02A7  0868               	movf	_DC2,w
  2120  02A8  00A2               	movwf	___awdiv@dividend
  2121  02A9  120A  158A  2367  120A  118A  	fcall	___awdiv
  2122  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2123  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2124  02B0  0821               	movf	?___awdiv+1,w
  2125  02B1  00AB               	movwf	___awmod@dividend+1
  2126  02B2  0820               	movf	?___awdiv,w
  2127  02B3  00AA               	movwf	___awmod@dividend
  2128  02B4  120A  158A  230C  120A  118A  	fcall	___awmod
  2129  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2130  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2131  02BB  0829               	movf	?___awmod+1,w
  2132  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2133  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2134  02BE  00AF               	movwf	(_ADC2_B+1)^(0+128)
  2135  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2136  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2137  02C1  0828               	movf	?___awmod,w
  2138  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2139  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  2140  02C4  00AE               	movwf	_ADC2_B^(0+128)
  2141  02C5                     l3383:	
  2142                           
  2143                           ;adc.c: 134:             itoa(ADCABCHARB, ADC2_B, 10);
  2144  02C5  082F               	movf	(_ADC2_B+1)^(0+128),w
  2145  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2146  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2147  02C8  00B6               	movwf	itoa@val+1
  2148  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2149  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2150  02CB  082E               	movf	_ADC2_B^(0+128),w
  2151  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  2152  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  2153  02CE  00B5               	movwf	itoa@val
  2154  02CF  300A               	movlw	10
  2155  02D0  00B7               	movwf	itoa@base
  2156  02D1  3000               	movlw	0
  2157  02D2  00B8               	movwf	itoa@base+1
  2158  02D3  30BF               	movlw	(low (_ADCABCHARB| 0))& (0+255)
  2159  02D4  120A  158A  2198  120A  118A  	fcall	_itoa
  2160  02D9                     l3385:	
  2161                           
  2162                           ;adc.c: 135:             ADCB = (DC2 / 100) % 10;
  2163  02D9  300A               	movlw	10
  2164  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2165  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2166  02DC  00A8               	movwf	___awmod@divisor
  2167  02DD  3000               	movlw	0
  2168  02DE  00A9               	movwf	___awmod@divisor+1
  2169  02DF  3064               	movlw	100
  2170  02E0  00A0               	movwf	___awdiv@divisor
  2171  02E1  3000               	movlw	0
  2172  02E2  00A1               	movwf	___awdiv@divisor+1
  2173  02E3  0869               	movf	_DC2+1,w
  2174  02E4  00A3               	movwf	___awdiv@dividend+1
  2175  02E5  0868               	movf	_DC2,w
  2176  02E6  00A2               	movwf	___awdiv@dividend
  2177  02E7  120A  158A  2367  120A  118A  	fcall	___awdiv
  2178  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2179  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2180  02EE  0821               	movf	?___awdiv+1,w
  2181  02EF  00AB               	movwf	___awmod@dividend+1
  2182  02F0  0820               	movf	?___awdiv,w
  2183  02F1  00AA               	movwf	___awmod@dividend
  2184  02F2  120A  158A  230C  120A  118A  	fcall	___awmod
  2185  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2186  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2187  02F9  0829               	movf	?___awmod+1,w
  2188  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2189  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2190  02FC  00AD               	movwf	(_ADCB+1)^(0+128)
  2191  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2192  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  2193  02FF  0828               	movf	?___awmod,w
  2194  0300  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0301  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0302  00AC               	movwf	_ADCB^(0+128)
  2197  0303                     l3387:	
  2198                           
  2199                           ;adc.c: 136:             itoa(ADCACCHARC, ADCB, 10);
  2200  0303  082D               	movf	(_ADCB+1)^(0+128),w
  2201  0304  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0305  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0306  00B6               	movwf	itoa@val+1
  2204  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0308  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0309  082C               	movf	_ADCB^(0+128),w
  2207  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2208  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2209  030C  00B5               	movwf	itoa@val
  2210  030D  300A               	movlw	10
  2211  030E  00B7               	movwf	itoa@base
  2212  030F  3000               	movlw	0
  2213  0310  00B8               	movwf	itoa@base+1
  2214  0311  30BA               	movlw	(low (_ADCACCHARC| 0))& (0+255)
  2215  0312  120A  158A  2198  120A  118A  	fcall	_itoa
  2216  0317                     l3389:	
  2217                           
  2218                           ;adc.c: 137:             strcat(ADCABCHARB, ADCAACHARA);
  2219  0317  30C4               	movlw	(low (_ADCAACHARA| 0))& (0+255)
  2220  0318  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0319  1303               	bcf	3,6	;RP1=0, select bank1
  2222  031A  00DD               	movwf	??_ADC^(0+128)
  2223  031B  085D               	movf	??_ADC^(0+128),w
  2224  031C  00F4               	movwf	strcat@from
  2225  031D  30BF               	movlw	(low (_ADCABCHARB| 0))& (0+255)
  2226  031E  120A  158A  2238  120A  118A  	fcall	_strcat
  2227  0323                     l3391:	
  2228                           
  2229                           ;adc.c: 138:             strcpy(POINTERB, ".");
  2230  0323  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2231  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0326  00DD               	movwf	??_ADC^(0+128)
  2234  0327  085D               	movf	??_ADC^(0+128),w
  2235  0328  00F4               	movwf	strcpy@from
  2236  0329  30B5               	movlw	(low (_POINTERB| 0))& (0+255)
  2237  032A  120A  158A  2175  120A  118A  	fcall	_strcpy
  2238  032F                     l3393:	
  2239                           
  2240                           ;adc.c: 139:             strcat(POINTERB, ADCABCHARB);
  2241  032F  30BF               	movlw	(low (_ADCABCHARB| 0))& (0+255)
  2242  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0332  00DD               	movwf	??_ADC^(0+128)
  2245  0333  085D               	movf	??_ADC^(0+128),w
  2246  0334  00F4               	movwf	strcat@from
  2247  0335  30B5               	movlw	(low (_POINTERB| 0))& (0+255)
  2248  0336  120A  158A  2238  120A  118A  	fcall	_strcat
  2249  033B                     l3395:	
  2250                           
  2251                           ;adc.c: 140:             strcat(ADCACCHARC, POINTERB);
  2252  033B  30B5               	movlw	(low (_POINTERB| 0))& (0+255)
  2253  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2254  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2255  033E  00DD               	movwf	??_ADC^(0+128)
  2256  033F  085D               	movf	??_ADC^(0+128),w
  2257  0340  00F4               	movwf	strcat@from
  2258  0341  30BA               	movlw	(low (_ADCACCHARC| 0))& (0+255)
  2259  0342  120A  158A  2238  120A  118A  	fcall	_strcat
  2260  0347                     l3397:	
  2261                           
  2262                           ;adc.c: 141:             sprintf(TERMINAL, "%.1i", rXc);
  2263  0347  301C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2264  0348  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0349  1303               	bcf	3,6	;RP1=0, select bank1
  2266  034A  00DD               	movwf	??_ADC^(0+128)
  2267  034B  085D               	movf	??_ADC^(0+128),w
  2268  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2269  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2270  034E  00AC               	movwf	sprintf@f
  2271  034F  0863               	movf	_rXc+1,w
  2272  0350  00AE               	movwf	?_sprintf+2
  2273  0351  0862               	movf	_rXc,w
  2274  0352  00AD               	movwf	?_sprintf+1
  2275  0353  30B0               	movlw	(low (_TERMINAL| 0))& (0+255)
  2276  0354  120A  158A  24BE  120A  118A  	fcall	_sprintf
  2277  0359                     l3399:	
  2278                           
  2279                           ;adc.c: 144:             LCD_cmd(0xC0);
  2280  0359  30C0               	movlw	192
  2281  035A  120A  158A  2117  120A  118A  	fcall	_LCD_cmd
  2282  035F                     l3401:	
  2283                           
  2284                           ;adc.c: 145:             LCD_msg(ADCCCHARC);
  2285  035F  30CE               	movlw	(low (_ADCCCHARC| 0))& (0+255)
  2286  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0361  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0362  00A1               	movwf	LCD_msg@c
  2289  0363  3000               	movlw	0
  2290  0364  00A2               	movwf	LCD_msg@c+1
  2291  0365  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  2292  036A                     l3403:	
  2293                           
  2294                           ;adc.c: 146:             LCD_msg("V ");
  2295  036A  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2296  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2297  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2298  036D  00A1               	movwf	LCD_msg@c
  2299  036E  3080               	movlw	128
  2300  036F  00A2               	movwf	LCD_msg@c+1
  2301  0370  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  2302  0375                     l3405:	
  2303                           
  2304                           ;adc.c: 147:             LCD_msg(ADCACCHARC);
  2305  0375  30BA               	movlw	(low (_ADCACCHARC| 0))& (0+255)
  2306  0376  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0377  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0378  00A1               	movwf	LCD_msg@c
  2309  0379  3000               	movlw	0
  2310  037A  00A2               	movwf	LCD_msg@c+1
  2311  037B  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  2312  0380                     l3407:	
  2313                           
  2314                           ;adc.c: 148:             LCD_msg("V ");
  2315  0380  3021               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2316  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0383  00A1               	movwf	LCD_msg@c
  2319  0384  3080               	movlw	128
  2320  0385  00A2               	movwf	LCD_msg@c+1
  2321  0386  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  2322  038B                     l3409:	
  2323                           
  2324                           ;adc.c: 149:             LCD_msg(TERMINAL);
  2325  038B  30B0               	movlw	(low (_TERMINAL| 0))& (0+255)
  2326  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2327  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2328  038E  00A1               	movwf	LCD_msg@c
  2329  038F  3000               	movlw	0
  2330  0390  00A2               	movwf	LCD_msg@c+1
  2331  0391  120A  158A  21BE  120A  118A  	fcall	_LCD_msg
  2332  0396  284F               	goto	l3329
  2333  0397  0008               	return
  2334  0398                     __end_of_ADC:	
  2335                           
  2336                           	psect	text4
  2337  0975                     __ptext4:	
  2338 ;; *************** function _strcpy *****************
  2339 ;; Defined at:
  2340 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  to              1    wreg     PTR unsigned char 
  2343 ;;		 -> POINTERB(5), POINTERA(5), 
  2344 ;;  from            1    4[COMMON] PTR const unsigned char 
  2345 ;;		 -> STR_3(2), STR_2(2), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  to              1    1[BANK0 ] PTR unsigned char 
  2348 ;;		 -> POINTERB(5), POINTERA(5), 
  2349 ;;  cp              1    0[BANK0 ] PTR unsigned char 
  2350 ;;		 -> POINTERB(5), POINTERA(5), 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      PTR unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         1       0       0       0       0
  2361 ;;      Locals:         0       2       0       0       0
  2362 ;;      Temps:          1       0       0       0       0
  2363 ;;      Totals:         2       2       0       0       0
  2364 ;;Total ram usage:        4 bytes
  2365 ;; Hardware stack levels used:    2
  2366 ;; Hardware stack levels required when called:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_ADC
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _strcpy
  2376  0975                     _strcpy:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2380                           ;strcpy@to stored from wreg
  2381  0975  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0976  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0977  00A1               	movwf	strcpy@to
  2384  0978                     l2943:	
  2385  0978  0821               	movf	strcpy@to,w
  2386  0979  00F5               	movwf	??_strcpy
  2387  097A  0875               	movf	??_strcpy,w
  2388  097B  00A0               	movwf	strcpy@cp
  2389  097C  2985               	goto	l2947
  2390  097D                     l2945:	
  2391  097D  3001               	movlw	1
  2392  097E  00F5               	movwf	??_strcpy
  2393  097F  0875               	movf	??_strcpy,w
  2394  0980  07A0               	addwf	strcpy@cp,f
  2395  0981  3001               	movlw	1
  2396  0982  00F5               	movwf	??_strcpy
  2397  0983  0875               	movf	??_strcpy,w
  2398  0984  07F4               	addwf	strcpy@from,f
  2399  0985                     l2947:	
  2400  0985  0874               	movf	strcpy@from,w
  2401  0986  0084               	movwf	4
  2402  0987  120A  158A  200A  120A  158A  	fcall	stringdir
  2403  098C  00F5               	movwf	??_strcpy
  2404  098D  0820               	movf	strcpy@cp,w
  2405  098E  0084               	movwf	4
  2406  098F  0875               	movf	??_strcpy,w
  2407  0990  1383               	bcf	3,7	;select IRP bank0
  2408  0991  0080               	movwf	0
  2409  0992  0800               	movf	0,w
  2410  0993  1D03               	btfss	3,2
  2411  0994  2996               	goto	u3401
  2412  0995  2997               	goto	u3400
  2413  0996                     u3401:	
  2414  0996  297D               	goto	l2945
  2415  0997                     u3400:	
  2416  0997                     l847:	
  2417  0997  0008               	return
  2418  0998                     __end_of_strcpy:	
  2419                           
  2420                           	psect	text5
  2421  0A38                     __ptext5:	
  2422 ;; *************** function _strcat *****************
  2423 ;; Defined at:
  2424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  to              1    wreg     PTR unsigned char 
  2427 ;;		 -> POINTERB(5), ADCACCHARC(5), ADCABCHARB(5), POINTERA(5), 
  2428 ;;		 -> ADCCCHARC(5), ADCBCHARB(5), 
  2429 ;;  from            1    4[COMMON] PTR const unsigned char 
  2430 ;;		 -> POINTERB(5), ADCABCHARB(5), ADCAACHARA(5), POINTERA(5), 
  2431 ;;		 -> ADCBCHARB(5), ADCACHARA(5), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  to              1    0[BANK0 ] PTR unsigned char 
  2434 ;;		 -> POINTERB(5), ADCACCHARC(5), ADCABCHARB(5), POINTERA(5), 
  2435 ;;		 -> ADCCCHARC(5), ADCBCHARB(5), 
  2436 ;;  cp              1    1[BANK0 ] PTR unsigned char 
  2437 ;;		 -> POINTERB(5), ADCACCHARC(5), ADCABCHARB(5), POINTERA(5), 
  2438 ;;		 -> ADCCCHARC(5), ADCBCHARB(5), 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      PTR unsigned char 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         1       0       0       0       0
  2449 ;;      Locals:         0       2       0       0       0
  2450 ;;      Temps:          1       0       0       0       0
  2451 ;;      Totals:         2       2       0       0       0
  2452 ;;Total ram usage:        4 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    1
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_ADC
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           
  2463                           ;psect for function _strcat
  2464  0A38                     _strcat:	
  2465                           
  2466                           ;incstack = 0
  2467                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2468                           ;strcat@to stored from wreg
  2469  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0A3A  00A0               	movwf	strcat@to
  2472  0A3B                     l2933:	
  2473  0A3B  0820               	movf	strcat@to,w
  2474  0A3C  00F5               	movwf	??_strcat
  2475  0A3D  0875               	movf	??_strcat,w
  2476  0A3E  00A1               	movwf	strcat@cp
  2477  0A3F  2A44               	goto	l2937
  2478  0A40                     l2935:	
  2479  0A40  3001               	movlw	1
  2480  0A41  00F5               	movwf	??_strcat
  2481  0A42  0875               	movf	??_strcat,w
  2482  0A43  07A1               	addwf	strcat@cp,f
  2483  0A44                     l2937:	
  2484  0A44  0821               	movf	strcat@cp,w
  2485  0A45  0084               	movwf	4
  2486  0A46  1383               	bcf	3,7	;select IRP bank0
  2487  0A47  0800               	movf	0,w
  2488  0A48  1D03               	btfss	3,2
  2489  0A49  2A4B               	goto	u3381
  2490  0A4A  2A4C               	goto	u3380
  2491  0A4B                     u3381:	
  2492  0A4B  2A40               	goto	l2935
  2493  0A4C                     u3380:	
  2494  0A4C  2A55               	goto	l2941
  2495  0A4D                     l2939:	
  2496  0A4D  3001               	movlw	1
  2497  0A4E  00F5               	movwf	??_strcat
  2498  0A4F  0875               	movf	??_strcat,w
  2499  0A50  07A1               	addwf	strcat@cp,f
  2500  0A51  3001               	movlw	1
  2501  0A52  00F5               	movwf	??_strcat
  2502  0A53  0875               	movf	??_strcat,w
  2503  0A54  07F4               	addwf	strcat@from,f
  2504  0A55                     l2941:	
  2505  0A55  0874               	movf	strcat@from,w
  2506  0A56  0084               	movwf	4
  2507  0A57  0800               	movf	0,w
  2508  0A58  00F5               	movwf	??_strcat
  2509  0A59  0821               	movf	strcat@cp,w
  2510  0A5A  0084               	movwf	4
  2511  0A5B  0875               	movf	??_strcat,w
  2512  0A5C  0080               	movwf	0
  2513  0A5D  0800               	movf	0,w
  2514  0A5E  1D03               	btfss	3,2
  2515  0A5F  2A61               	goto	u3391
  2516  0A60  2A62               	goto	u3390
  2517  0A61                     u3391:	
  2518  0A61  2A4D               	goto	l2939
  2519  0A62                     u3390:	
  2520  0A62                     l841:	
  2521  0A62  0008               	return
  2522  0A63                     __end_of_strcat:	
  2523                           
  2524                           	psect	text6
  2525  0CBE                     __ptext6:	
  2526 ;; *************** function _sprintf *****************
  2527 ;; Defined at:
  2528 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  sp              1    wreg     PTR unsigned char 
  2531 ;;		 -> TERMINAL(5), 
  2532 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2533 ;;		 -> STR_4(5), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  2536 ;;		 -> TERMINAL(5), 
  2537 ;;  tmpval          4    0        struct .
  2538 ;;  val             2   21[BANK0 ] unsigned int 
  2539 ;;  cp              2    0        PTR const unsigned char 
  2540 ;;  len             2    0        unsigned int 
  2541 ;;  c               1   24[BANK0 ] unsigned char 
  2542 ;;  prec            1   23[BANK0 ] char 
  2543 ;;  flag            1   19[BANK0 ] unsigned char 
  2544 ;;  ap              1   18[BANK0 ] PTR void [1]
  2545 ;;		 -> ?_sprintf(2), 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2   12[BANK0 ] int 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       3       0       0       0
  2556 ;;      Locals:         0       7       0       0       0
  2557 ;;      Temps:          0       3       0       0       0
  2558 ;;      Totals:         0      13       0       0       0
  2559 ;;Total ram usage:       13 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		___bmul
  2564 ;;		___lwdiv
  2565 ;;		___lwmod
  2566 ;;		_isdigit
  2567 ;; This function is called by:
  2568 ;;		_ADC
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _sprintf
  2574  0CBE                     _sprintf:	
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2578                           ;sprintf@sp stored from wreg
  2579  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  2581  0CC0  00B4               	movwf	sprintf@sp
  2582  0CC1                     l2949:	
  2583                           
  2584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  2585  0CC1  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2586  0CC2  00AF               	movwf	??_sprintf
  2587  0CC3  082F               	movf	??_sprintf,w
  2588  0CC4  00B2               	movwf	sprintf@ap
  2589                           
  2590                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  2591  0CC5  2E0C               	goto	l3027
  2592  0CC6                     l2951:	
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  2595  0CC6  3025               	movlw	37
  2596  0CC7  0638               	xorwf	sprintf@c,w
  2597  0CC8  1903               	btfsc	3,2
  2598  0CC9  2CCB               	goto	u3411
  2599  0CCA  2CCC               	goto	u3410
  2600  0CCB                     u3411:	
  2601  0CCB  2CD8               	goto	l2957
  2602  0CCC                     u3410:	
  2603  0CCC                     l2953:	
  2604                           
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  2606  0CCC  0838               	movf	sprintf@c,w
  2607  0CCD  00AF               	movwf	??_sprintf
  2608  0CCE  0834               	movf	sprintf@sp,w
  2609  0CCF  0084               	movwf	4
  2610  0CD0  082F               	movf	??_sprintf,w
  2611  0CD1  1383               	bcf	3,7	;select IRP bank0
  2612  0CD2  0080               	movwf	0
  2613  0CD3                     l2955:	
  2614  0CD3  3001               	movlw	1
  2615  0CD4  00AF               	movwf	??_sprintf
  2616  0CD5  082F               	movf	??_sprintf,w
  2617  0CD6  07B4               	addwf	sprintf@sp,f
  2618                           
  2619                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  2620  0CD7  2E0C               	goto	l3027
  2621  0CD8                     l2957:	
  2622                           
  2623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  2624  0CD8  01B3               	clrf	sprintf@flag
  2625  0CD9                     l2959:	
  2626                           
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  2628  0CD9  082C               	movf	sprintf@f,w
  2629  0CDA  0084               	movwf	4
  2630  0CDB  120A  158A  200A  120A  158A  	fcall	stringdir
  2631  0CE0  3A2E               	xorlw	46
  2632  0CE1  1D03               	skipz
  2633  0CE2  2CE4               	goto	u3421
  2634  0CE3  2CE5               	goto	u3420
  2635  0CE4                     u3421:	
  2636  0CE4  2D1C               	goto	l2973
  2637  0CE5                     u3420:	
  2638  0CE5                     l2961:	
  2639                           
  2640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  2641  0CE5  3001               	movlw	1
  2642  0CE6  00AF               	movwf	??_sprintf
  2643  0CE7  082F               	movf	??_sprintf,w
  2644  0CE8  07AC               	addwf	sprintf@f,f
  2645  0CE9                     l2963:	
  2646                           
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  2648  0CE9  01B7               	clrf	sprintf@prec
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2651  0CEA  2D0B               	goto	l2971
  2652  0CEB                     l2965:	
  2653                           
  2654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  2655  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0CED  0837               	movf	sprintf@prec,w
  2658  0CEE  00AF               	movwf	??_sprintf
  2659  0CEF  082F               	movf	??_sprintf,w
  2660  0CF0  00F4               	movwf	___bmul@multiplicand
  2661  0CF1  300A               	movlw	10
  2662  0CF2  120A  158A  213F  120A  158A  	fcall	___bmul
  2663  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0CF9  00B0               	movwf	??_sprintf+1
  2666  0CFA  0830               	movf	??_sprintf+1,w
  2667  0CFB  00B7               	movwf	sprintf@prec
  2668  0CFC                     l2967:	
  2669                           
  2670                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  2671  0CFC  082C               	movf	sprintf@f,w
  2672  0CFD  0084               	movwf	4
  2673  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  2674  0D03  3ED0               	addlw	-48
  2675  0D04  00AF               	movwf	??_sprintf
  2676  0D05  082F               	movf	??_sprintf,w
  2677  0D06  07B7               	addwf	sprintf@prec,f
  2678  0D07                     l2969:	
  2679  0D07  3001               	movlw	1
  2680  0D08  00AF               	movwf	??_sprintf
  2681  0D09  082F               	movf	??_sprintf,w
  2682  0D0A  07AC               	addwf	sprintf@f,f
  2683  0D0B                     l2971:	
  2684                           
  2685                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2686  0D0B  082C               	movf	sprintf@f,w
  2687  0D0C  0084               	movwf	4
  2688  0D0D  120A  158A  200A  120A  158A  	fcall	stringdir
  2689  0D12  120A  158A  20F2  120A  158A  	fcall	_isdigit
  2690  0D17  1803               	btfsc	3,0
  2691  0D18  2D1A               	goto	u3431
  2692  0D19  2D1B               	goto	u3430
  2693  0D1A                     u3431:	
  2694  0D1A  2CEB               	goto	l2965
  2695  0D1B                     u3430:	
  2696  0D1B  2D1D               	goto	l2977
  2697  0D1C                     l2973:	
  2698                           
  2699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2700  0D1C  01B7               	clrf	sprintf@prec
  2701  0D1D                     l2977:	
  2702  0D1D  3001               	movlw	1
  2703  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0D20  07AC               	addwf	sprintf@f,f
  2706  0D21  30FF               	movlw	-1
  2707  0D22  072C               	addwf	sprintf@f,w
  2708  0D23  0084               	movwf	4
  2709  0D24  120A  158A  200A  120A  158A  	fcall	stringdir
  2710  0D29  00B8               	movwf	sprintf@c
  2711  0D2A  00AF               	movwf	??_sprintf
  2712  0D2B  01B0               	clrf	??_sprintf+1
  2713                           
  2714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2715                           ; Switch size 1, requested type "simple"
  2716                           ; Number of cases is 1, Range of values is 0 to 0
  2717                           ; switch strategies available:
  2718                           ; Name         Instructions Cycles
  2719                           ; simple_byte            4     3 (average)
  2720                           ; direct_byte           11     8 (fixed)
  2721                           ; jumptable            260     6 (fixed)
  2722                           ;	Chosen strategy is simple_byte
  2723  0D2C  0830               	movf	??_sprintf+1,w
  2724  0D2D  3A00               	xorlw	0	; case 0
  2725  0D2E  1903               	skipnz
  2726  0D2F  2D31               	goto	l3449
  2727  0D30  2E0C               	goto	l3027
  2728  0D31                     l3449:	
  2729                           
  2730                           ; Switch size 1, requested type "simple"
  2731                           ; Number of cases is 3, Range of values is 0 to 105
  2732                           ; switch strategies available:
  2733                           ; Name         Instructions Cycles
  2734                           ; simple_byte           10     6 (average)
  2735                           ; jumptable            260     6 (fixed)
  2736                           ;	Chosen strategy is simple_byte
  2737  0D31  082F               	movf	??_sprintf,w
  2738  0D32  3A00               	xorlw	0	; case 0
  2739  0D33  1903               	skipnz
  2740  0D34  2E1E               	goto	l3029
  2741  0D35  3A64               	xorlw	100	; case 100
  2742  0D36  1903               	skipnz
  2743  0D37  2D3C               	goto	l2979
  2744  0D38  3A0D               	xorlw	13	; case 105
  2745  0D39  1903               	skipnz
  2746  0D3A  2D3C               	goto	l2979
  2747  0D3B  2E0C               	goto	l3027
  2748  0D3C                     l2979:	
  2749                           
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2751  0D3C  0832               	movf	sprintf@ap,w
  2752  0D3D  0084               	movwf	4
  2753  0D3E  1383               	bcf	3,7	;select IRP bank0
  2754  0D3F  0800               	movf	0,w
  2755  0D40  00B5               	movwf	sprintf@val
  2756  0D41  0A84               	incf	4,f
  2757  0D42  0800               	movf	0,w
  2758  0D43  00B6               	movwf	sprintf@val+1
  2759  0D44                     l2981:	
  2760  0D44  3002               	movlw	2
  2761  0D45  00AF               	movwf	??_sprintf
  2762  0D46  082F               	movf	??_sprintf,w
  2763  0D47  07B2               	addwf	sprintf@ap,f
  2764  0D48                     l2983:	
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  2767  0D48  1FB6               	btfss	sprintf@val+1,7
  2768  0D49  2D4B               	goto	u3441
  2769  0D4A  2D4C               	goto	u3440
  2770  0D4B                     u3441:	
  2771  0D4B  2D55               	goto	l2989
  2772  0D4C                     u3440:	
  2773  0D4C                     l2985:	
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  2776  0D4C  3003               	movlw	3
  2777  0D4D  00AF               	movwf	??_sprintf
  2778  0D4E  082F               	movf	??_sprintf,w
  2779  0D4F  04B3               	iorwf	sprintf@flag,f
  2780  0D50                     l2987:	
  2781                           
  2782                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  2783  0D50  09B5               	comf	sprintf@val,f
  2784  0D51  09B6               	comf	sprintf@val+1,f
  2785  0D52  0AB5               	incf	sprintf@val,f
  2786  0D53  1903               	skipnz
  2787  0D54  0AB6               	incf	sprintf@val+1,f
  2788  0D55                     l2989:	
  2789                           
  2790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
  2791  0D55  0837               	movf	sprintf@prec,w
  2792  0D56  1D03               	btfss	3,2
  2793  0D57  2D59               	goto	u3451
  2794  0D58  2D5A               	goto	u3450
  2795  0D59                     u3451:	
  2796  0D59  2D64               	goto	l2995
  2797  0D5A                     u3450:	
  2798  0D5A                     l2991:	
  2799  0D5A  0835               	movf	sprintf@val,w
  2800  0D5B  0436               	iorwf	sprintf@val+1,w
  2801  0D5C  1D03               	btfss	3,2
  2802  0D5D  2D5F               	goto	u3461
  2803  0D5E  2D60               	goto	u3460
  2804  0D5F                     u3461:	
  2805  0D5F  2D64               	goto	l2995
  2806  0D60                     u3460:	
  2807  0D60                     l2993:	
  2808                           
  2809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  2810  0D60  3001               	movlw	1
  2811  0D61  00AF               	movwf	??_sprintf
  2812  0D62  082F               	movf	??_sprintf,w
  2813  0D63  07B7               	addwf	sprintf@prec,f
  2814  0D64                     l2995:	
  2815                           
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2817  0D64  01B8               	clrf	sprintf@c
  2818  0D65  0AB8               	incf	sprintf@c,f
  2819  0D66                     l2999:	
  2820                           
  2821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  2822  0D66  0838               	movf	sprintf@c,w
  2823  0D67  00AF               	movwf	??_sprintf
  2824  0D68  072F               	addwf	??_sprintf,w
  2825  0D69  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2826  0D6A  0084               	movwf	4
  2827  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  2828  0D70  00B0               	movwf	??_sprintf+1
  2829  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  2830  0D76  00B1               	movwf	??_sprintf+2
  2831  0D77  0831               	movf	??_sprintf+2,w
  2832  0D78  0236               	subwf	sprintf@val+1,w
  2833  0D79  1D03               	skipz
  2834  0D7A  2D7D               	goto	u3475
  2835  0D7B  0830               	movf	??_sprintf+1,w
  2836  0D7C  0235               	subwf	sprintf@val,w
  2837  0D7D                     u3475:	
  2838  0D7D  1803               	skipnc
  2839  0D7E  2D80               	goto	u3471
  2840  0D7F  2D81               	goto	u3470
  2841  0D80                     u3471:	
  2842  0D80  2D82               	goto	l3003
  2843  0D81                     u3470:	
  2844  0D81  2D8C               	goto	l3005
  2845  0D82                     l3003:	
  2846  0D82  3001               	movlw	1
  2847  0D83  00AF               	movwf	??_sprintf
  2848  0D84  082F               	movf	??_sprintf,w
  2849  0D85  07B8               	addwf	sprintf@c,f
  2850  0D86  3005               	movlw	5
  2851  0D87  0638               	xorwf	sprintf@c,w
  2852  0D88  1D03               	btfss	3,2
  2853  0D89  2D8B               	goto	u3481
  2854  0D8A  2D8C               	goto	u3480
  2855  0D8B                     u3481:	
  2856  0D8B  2D66               	goto	l2999
  2857  0D8C                     u3480:	
  2858  0D8C                     l3005:	
  2859                           
  2860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  2861  0D8C  0837               	movf	sprintf@prec,w
  2862  0D8D  00AF               	movwf	??_sprintf
  2863  0D8E  01B0               	clrf	??_sprintf+1
  2864  0D8F  1BAF               	btfsc	??_sprintf,7
  2865  0D90  03B0               	decf	??_sprintf+1,f
  2866  0D91  0830               	movf	??_sprintf+1,w
  2867  0D92  3A80               	xorlw	128
  2868  0D93  3C80               	sublw	128
  2869  0D94  1D03               	skipz
  2870  0D95  2D98               	goto	u3495
  2871  0D96  082F               	movf	??_sprintf,w
  2872  0D97  0238               	subwf	sprintf@c,w
  2873  0D98                     u3495:	
  2874  0D98  1803               	skipnc
  2875  0D99  2D9B               	goto	u3491
  2876  0D9A  2D9C               	goto	u3490
  2877  0D9B                     u3491:	
  2878  0D9B  2D9D               	goto	l3009
  2879  0D9C                     u3490:	
  2880  0D9C                     l3007:	
  2881  0D9C  2DB7               	goto	l3013
  2882  0D9D                     l3009:	
  2883  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0D9F  0837               	movf	sprintf@prec,w
  2886  0DA0  00AF               	movwf	??_sprintf
  2887  0DA1  01B0               	clrf	??_sprintf+1
  2888  0DA2  1BAF               	btfsc	??_sprintf,7
  2889  0DA3  03B0               	decf	??_sprintf+1,f
  2890  0DA4  0830               	movf	??_sprintf+1,w
  2891  0DA5  3A80               	xorlw	128
  2892  0DA6  00B1               	movwf	??_sprintf+2
  2893  0DA7  3080               	movlw	128
  2894  0DA8  0231               	subwf	??_sprintf+2,w
  2895  0DA9  1D03               	skipz
  2896  0DAA  2DAD               	goto	u3505
  2897  0DAB  0838               	movf	sprintf@c,w
  2898  0DAC  022F               	subwf	??_sprintf,w
  2899  0DAD                     u3505:	
  2900  0DAD  1803               	skipnc
  2901  0DAE  2DB0               	goto	u3501
  2902  0DAF  2DB1               	goto	u3500
  2903  0DB0                     u3501:	
  2904  0DB0  2DB7               	goto	l3013
  2905  0DB1                     u3500:	
  2906  0DB1                     l3011:	
  2907                           
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  2909  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0DB3  0838               	movf	sprintf@c,w
  2912  0DB4  00AF               	movwf	??_sprintf
  2913  0DB5  082F               	movf	??_sprintf,w
  2914  0DB6  00B7               	movwf	sprintf@prec
  2915  0DB7                     l3013:	
  2916                           
  2917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  2918  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0DB9  0833               	movf	sprintf@flag,w
  2921  0DBA  3903               	andlw	3
  2922  0DBB  1903               	btfsc	3,2
  2923  0DBC  2DBE               	goto	u3511
  2924  0DBD  2DBF               	goto	u3510
  2925  0DBE                     u3511:	
  2926  0DBE  2E03               	goto	l3025
  2927  0DBF                     u3510:	
  2928  0DBF                     l3015:	
  2929                           
  2930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  2931  0DBF  302D               	movlw	45
  2932  0DC0  00AF               	movwf	??_sprintf
  2933  0DC1  0834               	movf	sprintf@sp,w
  2934  0DC2  0084               	movwf	4
  2935  0DC3  082F               	movf	??_sprintf,w
  2936  0DC4  1383               	bcf	3,7	;select IRP bank0
  2937  0DC5  0080               	movwf	0
  2938  0DC6                     l3017:	
  2939  0DC6  3001               	movlw	1
  2940  0DC7  00AF               	movwf	??_sprintf
  2941  0DC8  082F               	movf	??_sprintf,w
  2942  0DC9  07B4               	addwf	sprintf@sp,f
  2943  0DCA  2E03               	goto	l3025
  2944  0DCB                     l3019:	
  2945                           
  2946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  2947  0DCB  300A               	movlw	10
  2948  0DCC  00A7               	movwf	___lwmod@divisor
  2949  0DCD  3000               	movlw	0
  2950  0DCE  00A8               	movwf	___lwmod@divisor+1
  2951  0DCF  0837               	movf	sprintf@prec,w
  2952  0DD0  00AF               	movwf	??_sprintf
  2953  0DD1  072F               	addwf	??_sprintf,w
  2954  0DD2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2955  0DD3  0084               	movwf	4
  2956  0DD4  120A  158A  200A  120A  158A  	fcall	stringdir
  2957  0DD9  00A0               	movwf	___lwdiv@divisor
  2958  0DDA  120A  158A  200A  120A  158A  	fcall	stringdir
  2959  0DDF  00A1               	movwf	___lwdiv@divisor+1
  2960  0DE0  0836               	movf	sprintf@val+1,w
  2961  0DE1  00A3               	movwf	___lwdiv@dividend+1
  2962  0DE2  0835               	movf	sprintf@val,w
  2963  0DE3  00A2               	movwf	___lwdiv@dividend
  2964  0DE4  120A  118A  27B5  120A  158A  	fcall	___lwdiv
  2965  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0DEB  0821               	movf	?___lwdiv+1,w
  2968  0DEC  00AA               	movwf	___lwmod@dividend+1
  2969  0DED  0820               	movf	?___lwdiv,w
  2970  0DEE  00A9               	movwf	___lwmod@dividend
  2971  0DEF  120A  158A  22D0  120A  158A  	fcall	___lwmod
  2972  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0DF6  0827               	movf	?___lwmod,w
  2975  0DF7  3E30               	addlw	48
  2976  0DF8  00B0               	movwf	??_sprintf+1
  2977  0DF9  0830               	movf	??_sprintf+1,w
  2978  0DFA  00B8               	movwf	sprintf@c
  2979  0DFB                     l3021:	
  2980                           
  2981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  2982  0DFB  0838               	movf	sprintf@c,w
  2983  0DFC  00AF               	movwf	??_sprintf
  2984  0DFD  0834               	movf	sprintf@sp,w
  2985  0DFE  0084               	movwf	4
  2986  0DFF  082F               	movf	??_sprintf,w
  2987  0E00  1383               	bcf	3,7	;select IRP bank0
  2988  0E01  0080               	movwf	0
  2989  0E02  2DC6               	goto	l3017
  2990  0E03                     l3025:	
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  2993  0E03  30FF               	movlw	255
  2994  0E04  00AF               	movwf	??_sprintf
  2995  0E05  082F               	movf	??_sprintf,w
  2996  0E06  07B7               	addwf	sprintf@prec,f
  2997  0E07  0A37               	incf	sprintf@prec,w
  2998  0E08  1D03               	btfss	3,2
  2999  0E09  2E0B               	goto	u3521
  3000  0E0A  2E0C               	goto	u3520
  3001  0E0B                     u3521:	
  3002  0E0B  2DCB               	goto	l3019
  3003  0E0C                     u3520:	
  3004  0E0C                     l3027:	
  3005                           
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3007  0E0C  3001               	movlw	1
  3008  0E0D  07AC               	addwf	sprintf@f,f
  3009  0E0E  30FF               	movlw	-1
  3010  0E0F  072C               	addwf	sprintf@f,w
  3011  0E10  0084               	movwf	4
  3012  0E11  120A  158A  200A  120A  158A  	fcall	stringdir
  3013  0E16  00AF               	movwf	??_sprintf
  3014  0E17  082F               	movf	??_sprintf,w
  3015  0E18  00B8               	movwf	sprintf@c
  3016  0E19  0838               	movf	sprintf@c,w
  3017  0E1A  1D03               	btfss	3,2
  3018  0E1B  2E1D               	goto	u3531
  3019  0E1C  2E1E               	goto	u3530
  3020  0E1D                     u3531:	
  3021  0E1D  2CC6               	goto	l2951
  3022  0E1E                     u3530:	
  3023  0E1E                     l3029:	
  3024                           
  3025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3026  0E1E  0834               	movf	sprintf@sp,w
  3027  0E1F  0084               	movwf	4
  3028  0E20  1383               	bcf	3,7	;select IRP bank0
  3029  0E21  0180               	clrf	0
  3030  0E22                     l367:	
  3031  0E22  0008               	return
  3032  0E23                     __end_of_sprintf:	
  3033                           
  3034                           	psect	text7
  3035  08F2                     __ptext7:	
  3036 ;; *************** function _isdigit *****************
  3037 ;; Defined at:
  3038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  c               1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  c               1    5[COMMON] unsigned char 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;		None               void
  3045 ;; Registers used:
  3046 ;;		wreg, status,2, status,0
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3052 ;;      Params:         0       0       0       0       0
  3053 ;;      Locals:         2       0       0       0       0
  3054 ;;      Temps:          0       0       0       0       0
  3055 ;;      Totals:         2       0       0       0       0
  3056 ;;Total ram usage:        2 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_sprintf
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _isdigit
  3068  08F2                     _isdigit:	
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3072                           ;isdigit@c stored from wreg
  3073  08F2  00F5               	movwf	isdigit@c
  3074  08F3                     l1967:	
  3075  08F3  01F4               	clrf	_isdigit$1064
  3076  08F4                     l1969:	
  3077  08F4  303A               	movlw	58
  3078  08F5  0275               	subwf	isdigit@c,w
  3079  08F6  1803               	skipnc
  3080  08F7  28F9               	goto	u1781
  3081  08F8  28FA               	goto	u1780
  3082  08F9                     u1781:	
  3083  08F9  2902               	goto	l1975
  3084  08FA                     u1780:	
  3085  08FA                     l1971:	
  3086  08FA  3030               	movlw	48
  3087  08FB  0275               	subwf	isdigit@c,w
  3088  08FC  1C03               	skipc
  3089  08FD  28FF               	goto	u1791
  3090  08FE  2900               	goto	u1790
  3091  08FF                     u1791:	
  3092  08FF  2902               	goto	l1975
  3093  0900                     u1790:	
  3094  0900                     l1973:	
  3095  0900  01F4               	clrf	_isdigit$1064
  3096  0901  0AF4               	incf	_isdigit$1064,f
  3097  0902                     l1975:	
  3098  0902  0C74               	rrf	_isdigit$1064,w
  3099  0903                     l818:	
  3100  0903  0008               	return
  3101  0904                     __end_of_isdigit:	
  3102                           
  3103                           	psect	text8
  3104  093F                     __ptext8:	
  3105 ;; *************** function ___bmul *****************
  3106 ;; Defined at:
  3107 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  multiplier      1    wreg     unsigned char 
  3110 ;;  multiplicand    1    4[COMMON] unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  multiplier      1    1[BANK0 ] unsigned char 
  3113 ;;  product         1    0[BANK0 ] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3123 ;;      Params:         1       0       0       0       0
  3124 ;;      Locals:         0       2       0       0       0
  3125 ;;      Temps:          1       0       0       0       0
  3126 ;;      Totals:         2       2       0       0       0
  3127 ;;Total ram usage:        4 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_sprintf
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function ___bmul
  3139  093F                     ___bmul:	
  3140                           
  3141                           ;incstack = 0
  3142                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3143                           ;___bmul@multiplier stored from wreg
  3144  093F  1283               	bcf	3,5	;RP0=0, select bank0
  3145  0940  1303               	bcf	3,6	;RP1=0, select bank0
  3146  0941  00A1               	movwf	___bmul@multiplier
  3147  0942                     l2843:	
  3148  0942  01A0               	clrf	___bmul@product
  3149  0943                     l2845:	
  3150  0943  1C21               	btfss	___bmul@multiplier,0
  3151  0944  2946               	goto	u3281
  3152  0945  2947               	goto	u3280
  3153  0946                     u3281:	
  3154  0946  294B               	goto	l2849
  3155  0947                     u3280:	
  3156  0947                     l2847:	
  3157  0947  0874               	movf	___bmul@multiplicand,w
  3158  0948  00F5               	movwf	??___bmul
  3159  0949  0875               	movf	??___bmul,w
  3160  094A  07A0               	addwf	___bmul@product,f
  3161  094B                     l2849:	
  3162  094B  1003               	clrc
  3163  094C  0DF4               	rlf	___bmul@multiplicand,f
  3164  094D                     l2851:	
  3165  094D  1003               	clrc
  3166  094E  0CA1               	rrf	___bmul@multiplier,f
  3167  094F  0821               	movf	___bmul@multiplier,w
  3168  0950  1D03               	btfss	3,2
  3169  0951  2953               	goto	u3291
  3170  0952  2954               	goto	u3290
  3171  0953                     u3291:	
  3172  0953  2943               	goto	l2845
  3173  0954                     u3290:	
  3174  0954                     l2853:	
  3175  0954  0820               	movf	___bmul@product,w
  3176  0955                     l397:	
  3177  0955  0008               	return
  3178  0956                     __end_of___bmul:	
  3179                           
  3180                           	psect	text9
  3181  0998                     __ptext9:	
  3182 ;; *************** function _itoa *****************
  3183 ;; Defined at:
  3184 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  buf             1    wreg     PTR unsigned char 
  3187 ;;		 -> ADCACCHARC(5), ADCABCHARB(5), ADCAACHARA(5), ADCCCHARC(5), 
  3188 ;;		 -> ADCBCHARB(5), ADCACHARA(5), TERMINAL(5), 
  3189 ;;  val             2   21[BANK0 ] int 
  3190 ;;  base            2   23[BANK0 ] int 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  buf             1   27[BANK0 ] PTR unsigned char 
  3193 ;;		 -> ADCACCHARC(5), ADCABCHARB(5), ADCAACHARA(5), ADCCCHARC(5), 
  3194 ;;		 -> ADCBCHARB(5), ADCACHARA(5), TERMINAL(5), 
  3195 ;;  cp              1    0        PTR unsigned char 
  3196 ;;		 -> ADCACCHARC(5), ADCABCHARB(5), ADCAACHARA(5), ADCCCHARC(5), 
  3197 ;;		 -> ADCBCHARB(5), ADCACHARA(5), TERMINAL(5), 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      PTR unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       4       0       0       0
  3208 ;;      Locals:         0       2       0       0       0
  3209 ;;      Temps:          0       1       0       0       0
  3210 ;;      Totals:         0       7       0       0       0
  3211 ;;Total ram usage:        7 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    3
  3214 ;; This function calls:
  3215 ;;		_utoa
  3216 ;; This function is called by:
  3217 ;;		_ADC
  3218 ;;		_PC
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _itoa
  3224  0998                     _itoa:	
  3225                           
  3226                           ;incstack = 0
  3227                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3228                           ;itoa@buf stored from wreg
  3229  0998  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0999  1303               	bcf	3,6	;RP1=0, select bank0
  3231  099A  00BB               	movwf	itoa@buf
  3232  099B                     l2919:	
  3233  099B                     l2921:	
  3234  099B  1FB6               	btfss	itoa@val+1,7
  3235  099C  299E               	goto	u3371
  3236  099D  299F               	goto	u3370
  3237  099E                     u3371:	
  3238  099E  29AF               	goto	l2929
  3239  099F                     u3370:	
  3240  099F                     l2923:	
  3241  099F  302D               	movlw	45
  3242  09A0  00B9               	movwf	??_itoa
  3243  09A1  083B               	movf	itoa@buf,w
  3244  09A2  0084               	movwf	4
  3245  09A3  0839               	movf	??_itoa,w
  3246  09A4  1383               	bcf	3,7	;select IRP bank0
  3247  09A5  0080               	movwf	0
  3248  09A6                     l2925:	
  3249  09A6  3001               	movlw	1
  3250  09A7  00B9               	movwf	??_itoa
  3251  09A8  0839               	movf	??_itoa,w
  3252  09A9  07BB               	addwf	itoa@buf,f
  3253  09AA                     l2927:	
  3254  09AA  09B5               	comf	itoa@val,f
  3255  09AB  09B6               	comf	itoa@val+1,f
  3256  09AC  0AB5               	incf	itoa@val,f
  3257  09AD  1903               	skipnz
  3258  09AE  0AB6               	incf	itoa@val+1,f
  3259  09AF                     l2929:	
  3260  09AF  0836               	movf	itoa@val+1,w
  3261  09B0  00AD               	movwf	utoa@val+1
  3262  09B1  0835               	movf	itoa@val,w
  3263  09B2  00AC               	movwf	utoa@val
  3264  09B3  0838               	movf	itoa@base+1,w
  3265  09B4  00AF               	movwf	utoa@base+1
  3266  09B5  0837               	movf	itoa@base,w
  3267  09B6  00AE               	movwf	utoa@base
  3268  09B7  083B               	movf	itoa@buf,w
  3269  09B8  120A  158A  23D0  120A  158A  	fcall	_utoa
  3270  09BD                     l824:	
  3271  09BD  0008               	return
  3272  09BE                     __end_of_itoa:	
  3273                           
  3274                           	psect	text10
  3275  0BD0                     __ptext10:	
  3276 ;; *************** function _utoa *****************
  3277 ;; Defined at:
  3278 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  buf             1    wreg     PTR unsigned char 
  3281 ;;		 -> ADCACCHARC(5), ADCABCHARB(5), ADCAACHARA(5), ADCCCHARC(5), 
  3282 ;;		 -> ADCBCHARB(5), ADCACHARA(5), TERMINAL(5), 
  3283 ;;  val             2   12[BANK0 ] unsigned int 
  3284 ;;  base            2   14[BANK0 ] int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  buf             1   20[BANK0 ] PTR unsigned char 
  3287 ;;		 -> ADCACCHARC(5), ADCABCHARB(5), ADCAACHARA(5), ADCCCHARC(5), 
  3288 ;;		 -> ADCBCHARB(5), ADCACHARA(5), TERMINAL(5), 
  3289 ;;  v               2   17[BANK0 ] unsigned int 
  3290 ;;  c               1   19[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      PTR unsigned char 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       4       0       0       0
  3301 ;;      Locals:         0       4       0       0       0
  3302 ;;      Temps:          0       1       0       0       0
  3303 ;;      Totals:         0       9       0       0       0
  3304 ;;Total ram usage:        9 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    2
  3307 ;; This function calls:
  3308 ;;		___lwdiv
  3309 ;;		___lwmod
  3310 ;; This function is called by:
  3311 ;;		_itoa
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _utoa
  3317  0BD0                     _utoa:	
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3321                           ;utoa@buf stored from wreg
  3322  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0BD2  00B4               	movwf	utoa@buf
  3325  0BD3                     l2871:	
  3326  0BD3  082D               	movf	utoa@val+1,w
  3327  0BD4  00B2               	movwf	utoa@v+1
  3328  0BD5  082C               	movf	utoa@val,w
  3329  0BD6  00B1               	movwf	utoa@v
  3330  0BD7                     l2873:	
  3331  0BD7  082F               	movf	utoa@base+1,w
  3332  0BD8  00A1               	movwf	___lwdiv@divisor+1
  3333  0BD9  082E               	movf	utoa@base,w
  3334  0BDA  00A0               	movwf	___lwdiv@divisor
  3335  0BDB  0832               	movf	utoa@v+1,w
  3336  0BDC  00A3               	movwf	___lwdiv@dividend+1
  3337  0BDD  0831               	movf	utoa@v,w
  3338  0BDE  00A2               	movwf	___lwdiv@dividend
  3339  0BDF  120A  118A  27B5  120A  158A  	fcall	___lwdiv
  3340  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  3341  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0BE6  0821               	movf	?___lwdiv+1,w
  3343  0BE7  00B2               	movwf	utoa@v+1
  3344  0BE8  0820               	movf	?___lwdiv,w
  3345  0BE9  00B1               	movwf	utoa@v
  3346  0BEA                     l2875:	
  3347  0BEA  3001               	movlw	1
  3348  0BEB  00B0               	movwf	??_utoa
  3349  0BEC  0830               	movf	??_utoa,w
  3350  0BED  07B4               	addwf	utoa@buf,f
  3351  0BEE                     l2877:	
  3352  0BEE  0831               	movf	utoa@v,w
  3353  0BEF  0432               	iorwf	utoa@v+1,w
  3354  0BF0  1D03               	btfss	3,2
  3355  0BF1  2BF3               	goto	u3331
  3356  0BF2  2BF4               	goto	u3330
  3357  0BF3                     u3331:	
  3358  0BF3  2BD7               	goto	l2873
  3359  0BF4                     u3330:	
  3360  0BF4                     l2879:	
  3361  0BF4  0834               	movf	utoa@buf,w
  3362  0BF5  0084               	movwf	4
  3363  0BF6  1383               	bcf	3,7	;select IRP bank0
  3364  0BF7  0180               	clrf	0
  3365  0BF8                     l2881:	
  3366  0BF8  3001               	movlw	1
  3367  0BF9  02B4               	subwf	utoa@buf,f
  3368  0BFA                     l2883:	
  3369  0BFA  082F               	movf	utoa@base+1,w
  3370  0BFB  00A8               	movwf	___lwmod@divisor+1
  3371  0BFC  082E               	movf	utoa@base,w
  3372  0BFD  00A7               	movwf	___lwmod@divisor
  3373  0BFE  082D               	movf	utoa@val+1,w
  3374  0BFF  00AA               	movwf	___lwmod@dividend+1
  3375  0C00  082C               	movf	utoa@val,w
  3376  0C01  00A9               	movwf	___lwmod@dividend
  3377  0C02  120A  158A  22D0  120A  158A  	fcall	___lwmod
  3378  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  3379  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0C09  0827               	movf	?___lwmod,w
  3381  0C0A  00B0               	movwf	??_utoa
  3382  0C0B  0830               	movf	??_utoa,w
  3383  0C0C  00B3               	movwf	utoa@c
  3384  0C0D                     l2885:	
  3385  0C0D  082F               	movf	utoa@base+1,w
  3386  0C0E  00A1               	movwf	___lwdiv@divisor+1
  3387  0C0F  082E               	movf	utoa@base,w
  3388  0C10  00A0               	movwf	___lwdiv@divisor
  3389  0C11  082D               	movf	utoa@val+1,w
  3390  0C12  00A3               	movwf	___lwdiv@dividend+1
  3391  0C13  082C               	movf	utoa@val,w
  3392  0C14  00A2               	movwf	___lwdiv@dividend
  3393  0C15  120A  118A  27B5  120A  158A  	fcall	___lwdiv
  3394  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0C1C  0821               	movf	?___lwdiv+1,w
  3397  0C1D  00AD               	movwf	utoa@val+1
  3398  0C1E  0820               	movf	?___lwdiv,w
  3399  0C1F  00AC               	movwf	utoa@val
  3400  0C20                     l2887:	
  3401  0C20  300A               	movlw	10
  3402  0C21  0233               	subwf	utoa@c,w
  3403  0C22  1C03               	skipc
  3404  0C23  2C25               	goto	u3341
  3405  0C24  2C26               	goto	u3340
  3406  0C25                     u3341:	
  3407  0C25  2C2A               	goto	l830
  3408  0C26                     u3340:	
  3409  0C26                     l2889:	
  3410  0C26  3007               	movlw	7
  3411  0C27  00B0               	movwf	??_utoa
  3412  0C28  0830               	movf	??_utoa,w
  3413  0C29  07B3               	addwf	utoa@c,f
  3414  0C2A                     l830:	
  3415  0C2A  3030               	movlw	48
  3416  0C2B  00B0               	movwf	??_utoa
  3417  0C2C  0830               	movf	??_utoa,w
  3418  0C2D  07B3               	addwf	utoa@c,f
  3419  0C2E                     l2891:	
  3420  0C2E  0833               	movf	utoa@c,w
  3421  0C2F  00B0               	movwf	??_utoa
  3422  0C30  0834               	movf	utoa@buf,w
  3423  0C31  0084               	movwf	4
  3424  0C32  0830               	movf	??_utoa,w
  3425  0C33  1383               	bcf	3,7	;select IRP bank0
  3426  0C34  0080               	movwf	0
  3427  0C35                     l2893:	
  3428  0C35  3001               	movlw	1
  3429  0C36  02B4               	subwf	utoa@buf,f
  3430  0C37                     l2895:	
  3431  0C37  082C               	movf	utoa@val,w
  3432  0C38  042D               	iorwf	utoa@val+1,w
  3433  0C39  1D03               	btfss	3,2
  3434  0C3A  2C3C               	goto	u3351
  3435  0C3B  2C3D               	goto	u3350
  3436  0C3C                     u3351:	
  3437  0C3C  2BFA               	goto	l2883
  3438  0C3D                     u3350:	
  3439  0C3D                     l2897:	
  3440                           
  3441                           ;	Return value of _utoa is never used
  3442  0C3D  3001               	movlw	1
  3443  0C3E  00B0               	movwf	??_utoa
  3444  0C3F  0830               	movf	??_utoa,w
  3445  0C40  07B4               	addwf	utoa@buf,f
  3446  0C41                     l832:	
  3447  0C41  0008               	return
  3448  0C42                     __end_of_utoa:	
  3449                           
  3450                           	psect	text11
  3451  0AD0                     __ptext11:	
  3452 ;; *************** function ___lwmod *****************
  3453 ;; Defined at:
  3454 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  divisor         2    7[BANK0 ] unsigned int 
  3457 ;;  dividend        2    9[BANK0 ] unsigned int 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  counter         1   11[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  2    7[BANK0 ] unsigned int 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       4       0       0       0
  3470 ;;      Locals:         0       1       0       0       0
  3471 ;;      Temps:          1       0       0       0       0
  3472 ;;      Totals:         1       5       0       0       0
  3473 ;;Total ram usage:        6 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    1
  3476 ;; This function calls:
  3477 ;;		Nothing
  3478 ;; This function is called by:
  3479 ;;		_sprintf
  3480 ;;		_utoa
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function ___lwmod
  3486  0AD0                     ___lwmod:	
  3487  0AD0                     l1935:	
  3488                           ;incstack = 0
  3489                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3490                           
  3491  0AD0  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0AD1  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0AD2  0827               	movf	___lwmod@divisor,w
  3494  0AD3  0428               	iorwf	___lwmod@divisor+1,w
  3495  0AD4  1903               	btfsc	3,2
  3496  0AD5  2AD7               	goto	u1721
  3497  0AD6  2AD8               	goto	u1720
  3498  0AD7                     u1721:	
  3499  0AD7  2B07               	goto	l1953
  3500  0AD8                     u1720:	
  3501  0AD8                     l1937:	
  3502  0AD8  01AB               	clrf	___lwmod@counter
  3503  0AD9  0AAB               	incf	___lwmod@counter,f
  3504  0ADA  2AE6               	goto	l1943
  3505  0ADB                     l1939:	
  3506  0ADB  3001               	movlw	1
  3507  0ADC                     u1735:	
  3508  0ADC  1003               	clrc
  3509  0ADD  0DA7               	rlf	___lwmod@divisor,f
  3510  0ADE  0DA8               	rlf	___lwmod@divisor+1,f
  3511  0ADF  3EFF               	addlw	-1
  3512  0AE0  1D03               	skipz
  3513  0AE1  2ADC               	goto	u1735
  3514  0AE2                     l1941:	
  3515  0AE2  3001               	movlw	1
  3516  0AE3  00F5               	movwf	??___lwmod
  3517  0AE4  0875               	movf	??___lwmod,w
  3518  0AE5  07AB               	addwf	___lwmod@counter,f
  3519  0AE6                     l1943:	
  3520  0AE6  1FA8               	btfss	___lwmod@divisor+1,7
  3521  0AE7  2AE9               	goto	u1741
  3522  0AE8  2AEA               	goto	u1740
  3523  0AE9                     u1741:	
  3524  0AE9  2ADB               	goto	l1939
  3525  0AEA                     u1740:	
  3526  0AEA                     l1945:	
  3527  0AEA  0828               	movf	___lwmod@divisor+1,w
  3528  0AEB  022A               	subwf	___lwmod@dividend+1,w
  3529  0AEC  1D03               	skipz
  3530  0AED  2AF0               	goto	u1755
  3531  0AEE  0827               	movf	___lwmod@divisor,w
  3532  0AEF  0229               	subwf	___lwmod@dividend,w
  3533  0AF0                     u1755:	
  3534  0AF0  1C03               	skipc
  3535  0AF1  2AF3               	goto	u1751
  3536  0AF2  2AF4               	goto	u1750
  3537  0AF3                     u1751:	
  3538  0AF3  2AFA               	goto	l1949
  3539  0AF4                     u1750:	
  3540  0AF4                     l1947:	
  3541  0AF4  0827               	movf	___lwmod@divisor,w
  3542  0AF5  02A9               	subwf	___lwmod@dividend,f
  3543  0AF6  0828               	movf	___lwmod@divisor+1,w
  3544  0AF7  1C03               	skipc
  3545  0AF8  03AA               	decf	___lwmod@dividend+1,f
  3546  0AF9  02AA               	subwf	___lwmod@dividend+1,f
  3547  0AFA                     l1949:	
  3548  0AFA  3001               	movlw	1
  3549  0AFB                     u1765:	
  3550  0AFB  1003               	clrc
  3551  0AFC  0CA8               	rrf	___lwmod@divisor+1,f
  3552  0AFD  0CA7               	rrf	___lwmod@divisor,f
  3553  0AFE  3EFF               	addlw	-1
  3554  0AFF  1D03               	skipz
  3555  0B00  2AFB               	goto	u1765
  3556  0B01                     l1951:	
  3557  0B01  3001               	movlw	1
  3558  0B02  02AB               	subwf	___lwmod@counter,f
  3559  0B03  1D03               	btfss	3,2
  3560  0B04  2B06               	goto	u1771
  3561  0B05  2B07               	goto	u1770
  3562  0B06                     u1771:	
  3563  0B06  2AEA               	goto	l1945
  3564  0B07                     u1770:	
  3565  0B07                     l1953:	
  3566  0B07  082A               	movf	___lwmod@dividend+1,w
  3567  0B08  00A8               	movwf	?___lwmod+1
  3568  0B09  0829               	movf	___lwmod@dividend,w
  3569  0B0A  00A7               	movwf	?___lwmod
  3570  0B0B                     l653:	
  3571  0B0B  0008               	return
  3572  0B0C                     __end_of___lwmod:	
  3573                           
  3574                           	psect	text12
  3575  07B5                     __ptext12:	
  3576 ;; *************** function ___lwdiv *****************
  3577 ;; Defined at:
  3578 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  divisor         2    0[BANK0 ] unsigned int 
  3581 ;;  dividend        2    2[BANK0 ] unsigned int 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  quotient        2    5[BANK0 ] unsigned int 
  3584 ;;  counter         1    4[BANK0 ] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  2    0[BANK0 ] unsigned int 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       4       0       0       0
  3595 ;;      Locals:         0       3       0       0       0
  3596 ;;      Temps:          1       0       0       0       0
  3597 ;;      Totals:         1       7       0       0       0
  3598 ;;Total ram usage:        8 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_sprintf
  3605 ;;		_utoa
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           
  3610                           ;psect for function ___lwdiv
  3611  07B5                     ___lwdiv:	
  3612  07B5                     l2807:	
  3613                           ;incstack = 0
  3614                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3615                           
  3616  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3617  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3618  07B7  01A5               	clrf	___lwdiv@quotient
  3619  07B8  01A6               	clrf	___lwdiv@quotient+1
  3620  07B9                     l2809:	
  3621  07B9  0820               	movf	___lwdiv@divisor,w
  3622  07BA  0421               	iorwf	___lwdiv@divisor+1,w
  3623  07BB  1903               	btfsc	3,2
  3624  07BC  2FBE               	goto	u3211
  3625  07BD  2FBF               	goto	u3210
  3626  07BE                     u3211:	
  3627  07BE  2FF6               	goto	l2829
  3628  07BF                     u3210:	
  3629  07BF                     l2811:	
  3630  07BF  01A4               	clrf	___lwdiv@counter
  3631  07C0  0AA4               	incf	___lwdiv@counter,f
  3632  07C1  2FCD               	goto	l2817
  3633  07C2                     l2813:	
  3634  07C2  3001               	movlw	1
  3635  07C3                     u3225:	
  3636  07C3  1003               	clrc
  3637  07C4  0DA0               	rlf	___lwdiv@divisor,f
  3638  07C5  0DA1               	rlf	___lwdiv@divisor+1,f
  3639  07C6  3EFF               	addlw	-1
  3640  07C7  1D03               	skipz
  3641  07C8  2FC3               	goto	u3225
  3642  07C9                     l2815:	
  3643  07C9  3001               	movlw	1
  3644  07CA  00F4               	movwf	??___lwdiv
  3645  07CB  0874               	movf	??___lwdiv,w
  3646  07CC  07A4               	addwf	___lwdiv@counter,f
  3647  07CD                     l2817:	
  3648  07CD  1FA1               	btfss	___lwdiv@divisor+1,7
  3649  07CE  2FD0               	goto	u3231
  3650  07CF  2FD1               	goto	u3230
  3651  07D0                     u3231:	
  3652  07D0  2FC2               	goto	l2813
  3653  07D1                     u3230:	
  3654  07D1                     l2819:	
  3655  07D1  3001               	movlw	1
  3656  07D2                     u3245:	
  3657  07D2  1003               	clrc
  3658  07D3  0DA5               	rlf	___lwdiv@quotient,f
  3659  07D4  0DA6               	rlf	___lwdiv@quotient+1,f
  3660  07D5  3EFF               	addlw	-1
  3661  07D6  1D03               	skipz
  3662  07D7  2FD2               	goto	u3245
  3663  07D8  0821               	movf	___lwdiv@divisor+1,w
  3664  07D9  0223               	subwf	___lwdiv@dividend+1,w
  3665  07DA  1D03               	skipz
  3666  07DB  2FDE               	goto	u3255
  3667  07DC  0820               	movf	___lwdiv@divisor,w
  3668  07DD  0222               	subwf	___lwdiv@dividend,w
  3669  07DE                     u3255:	
  3670  07DE  1C03               	skipc
  3671  07DF  2FE1               	goto	u3251
  3672  07E0  2FE2               	goto	u3250
  3673  07E1                     u3251:	
  3674  07E1  2FE9               	goto	l2825
  3675  07E2                     u3250:	
  3676  07E2                     l2821:	
  3677  07E2  0820               	movf	___lwdiv@divisor,w
  3678  07E3  02A2               	subwf	___lwdiv@dividend,f
  3679  07E4  0821               	movf	___lwdiv@divisor+1,w
  3680  07E5  1C03               	skipc
  3681  07E6  03A3               	decf	___lwdiv@dividend+1,f
  3682  07E7  02A3               	subwf	___lwdiv@dividend+1,f
  3683  07E8                     l2823:	
  3684  07E8  1425               	bsf	___lwdiv@quotient,0
  3685  07E9                     l2825:	
  3686  07E9  3001               	movlw	1
  3687  07EA                     u3265:	
  3688  07EA  1003               	clrc
  3689  07EB  0CA1               	rrf	___lwdiv@divisor+1,f
  3690  07EC  0CA0               	rrf	___lwdiv@divisor,f
  3691  07ED  3EFF               	addlw	-1
  3692  07EE  1D03               	skipz
  3693  07EF  2FEA               	goto	u3265
  3694  07F0                     l2827:	
  3695  07F0  3001               	movlw	1
  3696  07F1  02A4               	subwf	___lwdiv@counter,f
  3697  07F2  1D03               	btfss	3,2
  3698  07F3  2FF5               	goto	u3271
  3699  07F4  2FF6               	goto	u3270
  3700  07F5                     u3271:	
  3701  07F5  2FD1               	goto	l2819
  3702  07F6                     u3270:	
  3703  07F6                     l2829:	
  3704  07F6  0826               	movf	___lwdiv@quotient+1,w
  3705  07F7  00A1               	movwf	?___lwdiv+1
  3706  07F8  0825               	movf	___lwdiv@quotient,w
  3707  07F9  00A0               	movwf	?___lwdiv
  3708  07FA                     l643:	
  3709  07FA  0008               	return
  3710  07FB                     __end_of___lwdiv:	
  3711                           
  3712                           	psect	text13
  3713  06F9                     __ptext13:	
  3714 ;; *************** function ___xxtofl *****************
  3715 ;; Defined at:
  3716 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  sign            1    wreg     unsigned char 
  3719 ;;  val             4    0[BANK0 ] long 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  sign            1    8[BANK0 ] unsigned char 
  3722 ;;  arg             4   10[BANK0 ] unsigned long 
  3723 ;;  exp             1    9[BANK0 ] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  4    0[BANK0 ] unsigned char 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3733 ;;      Params:         0       4       0       0       0
  3734 ;;      Locals:         0       6       0       0       0
  3735 ;;      Temps:          0       4       0       0       0
  3736 ;;      Totals:         0      14       0       0       0
  3737 ;;Total ram usage:       14 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:    1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_ADC
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           
  3748                           ;psect for function ___xxtofl
  3749  06F9                     ___xxtofl:	
  3750                           
  3751                           ;incstack = 0
  3752                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3753                           ;___xxtofl@sign stored from wreg
  3754  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  3755  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  3756  06FB  00A8               	movwf	___xxtofl@sign
  3757  06FC                     l3259:	
  3758  06FC  0828               	movf	___xxtofl@sign,w
  3759  06FD  1903               	btfsc	3,2
  3760  06FE  2F00               	goto	u4111
  3761  06FF  2F01               	goto	u4110
  3762  0700                     u4111:	
  3763  0700  2F15               	goto	l3265
  3764  0701                     u4110:	
  3765  0701                     l3261:	
  3766  0701  1FA3               	btfss	___xxtofl@val+3,7
  3767  0702  2F04               	goto	u4121
  3768  0703  2F05               	goto	u4120
  3769  0704                     u4121:	
  3770  0704  2F15               	goto	l3265
  3771  0705                     u4120:	
  3772  0705                     l3263:	
  3773  0705  0920               	comf	___xxtofl@val,w
  3774  0706  00AA               	movwf	___xxtofl@arg
  3775  0707  0921               	comf	___xxtofl@val+1,w
  3776  0708  00AB               	movwf	___xxtofl@arg+1
  3777  0709  0922               	comf	___xxtofl@val+2,w
  3778  070A  00AC               	movwf	___xxtofl@arg+2
  3779  070B  0923               	comf	___xxtofl@val+3,w
  3780  070C  00AD               	movwf	___xxtofl@arg+3
  3781  070D  0AAA               	incf	___xxtofl@arg,f
  3782  070E  1903               	skipnz
  3783  070F  0AAB               	incf	___xxtofl@arg+1,f
  3784  0710  1903               	skipnz
  3785  0711  0AAC               	incf	___xxtofl@arg+2,f
  3786  0712  1903               	skipnz
  3787  0713  0AAD               	incf	___xxtofl@arg+3,f
  3788  0714  2F1D               	goto	l798
  3789  0715                     l3265:	
  3790  0715  0823               	movf	___xxtofl@val+3,w
  3791  0716  00AD               	movwf	___xxtofl@arg+3
  3792  0717  0822               	movf	___xxtofl@val+2,w
  3793  0718  00AC               	movwf	___xxtofl@arg+2
  3794  0719  0821               	movf	___xxtofl@val+1,w
  3795  071A  00AB               	movwf	___xxtofl@arg+1
  3796  071B  0820               	movf	___xxtofl@val,w
  3797  071C  00AA               	movwf	___xxtofl@arg
  3798  071D                     l798:	
  3799  071D  0823               	movf	___xxtofl@val+3,w
  3800  071E  0422               	iorwf	___xxtofl@val+2,w
  3801  071F  0421               	iorwf	___xxtofl@val+1,w
  3802  0720  0420               	iorwf	___xxtofl@val,w
  3803  0721  1D03               	skipz
  3804  0722  2F24               	goto	u4131
  3805  0723  2F25               	goto	u4130
  3806  0724                     u4131:	
  3807  0724  2F2E               	goto	l3271
  3808  0725                     u4130:	
  3809  0725                     l3267:	
  3810  0725  3000               	movlw	0
  3811  0726  00A3               	movwf	?___xxtofl+3
  3812  0727  3000               	movlw	0
  3813  0728  00A2               	movwf	?___xxtofl+2
  3814  0729  3000               	movlw	0
  3815  072A  00A1               	movwf	?___xxtofl+1
  3816  072B  3000               	movlw	0
  3817  072C  00A0               	movwf	?___xxtofl
  3818  072D  2FB4               	goto	l800
  3819  072E                     l3271:	
  3820  072E  3096               	movlw	150
  3821  072F  00A4               	movwf	??___xxtofl
  3822  0730  0824               	movf	??___xxtofl,w
  3823  0731  00A9               	movwf	___xxtofl@exp
  3824  0732  2F40               	goto	l3275
  3825  0733                     l3273:	
  3826  0733  3001               	movlw	1
  3827  0734  00A4               	movwf	??___xxtofl
  3828  0735  0824               	movf	??___xxtofl,w
  3829  0736  07A9               	addwf	___xxtofl@exp,f
  3830  0737  3001               	movlw	1
  3831  0738                     u4145:	
  3832  0738  1003               	clrc
  3833  0739  0CAD               	rrf	___xxtofl@arg+3,f
  3834  073A  0CAC               	rrf	___xxtofl@arg+2,f
  3835  073B  0CAB               	rrf	___xxtofl@arg+1,f
  3836  073C  0CAA               	rrf	___xxtofl@arg,f
  3837  073D  3EFF               	addlw	-1
  3838  073E  1D03               	skipz
  3839  073F  2F38               	goto	u4145
  3840  0740                     l3275:	
  3841  0740  30FE               	movlw	254
  3842  0741  052D               	andwf	___xxtofl@arg+3,w
  3843  0742  1D03               	btfss	3,2
  3844  0743  2F45               	goto	u4151
  3845  0744  2F46               	goto	u4150
  3846  0745                     u4151:	
  3847  0745  2F33               	goto	l3273
  3848  0746                     u4150:	
  3849  0746  2F62               	goto	l804
  3850  0747                     l3277:	
  3851  0747  3001               	movlw	1
  3852  0748  00A4               	movwf	??___xxtofl
  3853  0749  0824               	movf	??___xxtofl,w
  3854  074A  07A9               	addwf	___xxtofl@exp,f
  3855  074B                     l3279:	
  3856  074B  3001               	movlw	1
  3857  074C  07AA               	addwf	___xxtofl@arg,f
  3858  074D  3000               	movlw	0
  3859  074E  1803               	skipnc
  3860  074F  3001               	movlw	1
  3861  0750  07AB               	addwf	___xxtofl@arg+1,f
  3862  0751  3000               	movlw	0
  3863  0752  1803               	skipnc
  3864  0753  3001               	movlw	1
  3865  0754  07AC               	addwf	___xxtofl@arg+2,f
  3866  0755  3000               	movlw	0
  3867  0756  1803               	skipnc
  3868  0757  3001               	movlw	1
  3869  0758  07AD               	addwf	___xxtofl@arg+3,f
  3870  0759                     l3281:	
  3871  0759  3001               	movlw	1
  3872  075A                     u4165:	
  3873  075A  1003               	clrc
  3874  075B  0CAD               	rrf	___xxtofl@arg+3,f
  3875  075C  0CAC               	rrf	___xxtofl@arg+2,f
  3876  075D  0CAB               	rrf	___xxtofl@arg+1,f
  3877  075E  0CAA               	rrf	___xxtofl@arg,f
  3878  075F  3EFF               	addlw	-1
  3879  0760  1D03               	skipz
  3880  0761  2F5A               	goto	u4165
  3881  0762                     l804:	
  3882  0762  30FF               	movlw	255
  3883  0763  052D               	andwf	___xxtofl@arg+3,w
  3884  0764  1D03               	btfss	3,2
  3885  0765  2F67               	goto	u4171
  3886  0766  2F68               	goto	u4170
  3887  0767                     u4171:	
  3888  0767  2F47               	goto	l3277
  3889  0768                     u4170:	
  3890  0768  2F74               	goto	l3285
  3891  0769                     l3283:	
  3892  0769  3001               	movlw	1
  3893  076A  02A9               	subwf	___xxtofl@exp,f
  3894  076B  3001               	movlw	1
  3895  076C  00A4               	movwf	??___xxtofl
  3896  076D                     u4185:	
  3897  076D  1003               	clrc
  3898  076E  0DAA               	rlf	___xxtofl@arg,f
  3899  076F  0DAB               	rlf	___xxtofl@arg+1,f
  3900  0770  0DAC               	rlf	___xxtofl@arg+2,f
  3901  0771  0DAD               	rlf	___xxtofl@arg+3,f
  3902  0772  0BA4               	decfsz	??___xxtofl,f
  3903  0773  2F6D               	goto	u4185
  3904  0774                     l3285:	
  3905  0774  1BAC               	btfsc	___xxtofl@arg+2,7
  3906  0775  2F77               	goto	u4191
  3907  0776  2F78               	goto	u4190
  3908  0777                     u4191:	
  3909  0777  2F7E               	goto	l811
  3910  0778                     u4190:	
  3911  0778                     l3287:	
  3912  0778  3002               	movlw	2
  3913  0779  0229               	subwf	___xxtofl@exp,w
  3914  077A  1803               	skipnc
  3915  077B  2F7D               	goto	u4201
  3916  077C  2F7E               	goto	u4200
  3917  077D                     u4201:	
  3918  077D  2F69               	goto	l3283
  3919  077E                     u4200:	
  3920  077E                     l811:	
  3921  077E  1829               	btfsc	___xxtofl@exp,0
  3922  077F  2F81               	goto	u4211
  3923  0780  2F82               	goto	u4210
  3924  0781                     u4211:	
  3925  0781  2F8A               	goto	l812
  3926  0782                     u4210:	
  3927  0782                     l3289:	
  3928  0782  30FF               	movlw	255
  3929  0783  05AA               	andwf	___xxtofl@arg,f
  3930  0784  30FF               	movlw	255
  3931  0785  05AB               	andwf	___xxtofl@arg+1,f
  3932  0786  307F               	movlw	127
  3933  0787  05AC               	andwf	___xxtofl@arg+2,f
  3934  0788  30FF               	movlw	255
  3935  0789  05AD               	andwf	___xxtofl@arg+3,f
  3936  078A                     l812:	
  3937  078A  1003               	clrc
  3938  078B  0CA9               	rrf	___xxtofl@exp,f
  3939  078C                     l3291:	
  3940  078C  0829               	movf	___xxtofl@exp,w
  3941  078D  00A4               	movwf	??___xxtofl
  3942  078E  01A5               	clrf	??___xxtofl+1
  3943  078F  01A6               	clrf	??___xxtofl+2
  3944  0790  01A7               	clrf	??___xxtofl+3
  3945  0791  3018               	movlw	24
  3946  0792                     u4225:	
  3947  0792  1003               	clrc
  3948  0793  0DA4               	rlf	??___xxtofl,f
  3949  0794  0DA5               	rlf	??___xxtofl+1,f
  3950  0795  0DA6               	rlf	??___xxtofl+2,f
  3951  0796  0DA7               	rlf	??___xxtofl+3,f
  3952  0797                     u4220:	
  3953  0797  3EFF               	addlw	-1
  3954  0798  1D03               	skipz
  3955  0799  2F92               	goto	u4225
  3956  079A  0824               	movf	??___xxtofl,w
  3957  079B  04AA               	iorwf	___xxtofl@arg,f
  3958  079C  0825               	movf	??___xxtofl+1,w
  3959  079D  04AB               	iorwf	___xxtofl@arg+1,f
  3960  079E  0826               	movf	??___xxtofl+2,w
  3961  079F  04AC               	iorwf	___xxtofl@arg+2,f
  3962  07A0  0827               	movf	??___xxtofl+3,w
  3963  07A1  04AD               	iorwf	___xxtofl@arg+3,f
  3964  07A2                     l3293:	
  3965  07A2  0828               	movf	___xxtofl@sign,w
  3966  07A3  1903               	btfsc	3,2
  3967  07A4  2FA6               	goto	u4231
  3968  07A5  2FA7               	goto	u4230
  3969  07A6                     u4231:	
  3970  07A6  2FAC               	goto	l3299
  3971  07A7                     u4230:	
  3972  07A7                     l3295:	
  3973  07A7  1FA3               	btfss	___xxtofl@val+3,7
  3974  07A8  2FAA               	goto	u4241
  3975  07A9  2FAB               	goto	u4240
  3976  07AA                     u4241:	
  3977  07AA  2FAC               	goto	l3299
  3978  07AB                     u4240:	
  3979  07AB                     l3297:	
  3980  07AB  17AD               	bsf	___xxtofl@arg+3,7
  3981  07AC                     l3299:	
  3982  07AC  082D               	movf	___xxtofl@arg+3,w
  3983  07AD  00A3               	movwf	?___xxtofl+3
  3984  07AE  082C               	movf	___xxtofl@arg+2,w
  3985  07AF  00A2               	movwf	?___xxtofl+2
  3986  07B0  082B               	movf	___xxtofl@arg+1,w
  3987  07B1  00A1               	movwf	?___xxtofl+1
  3988  07B2  082A               	movf	___xxtofl@arg,w
  3989  07B3  00A0               	movwf	?___xxtofl
  3990  07B4                     l800:	
  3991  07B4  0008               	return
  3992  07B5                     __end_of___xxtofl:	
  3993                           
  3994                           	psect	text14
  3995  0C42                     __ptext14:	
  3996 ;; *************** function ___fltol *****************
  3997 ;; Defined at:
  3998 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  f1              4   40[BANK0 ] unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  exp1            1   50[BANK0 ] unsigned char 
  4003 ;;  sign1           1   49[BANK0 ] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  4   40[BANK0 ] long 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4013 ;;      Params:         0       4       0       0       0
  4014 ;;      Locals:         0       2       0       0       0
  4015 ;;      Temps:          0       5       0       0       0
  4016 ;;      Totals:         0      11       0       0       0
  4017 ;;Total ram usage:       11 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_ADC
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           
  4028                           ;psect for function ___fltol
  4029  0C42                     ___fltol:	
  4030  0C42                     l3083:	
  4031                           ;incstack = 0
  4032                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4033                           
  4034  0C42  1003               	clrc
  4035  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0C45  0D4A               	rlf	___fltol@f1+2,w
  4038  0C46  0D4B               	rlf	___fltol@f1+3,w
  4039  0C47  00CC               	movwf	??___fltol
  4040  0C48  084C               	movf	??___fltol,w
  4041  0C49  00D2               	movwf	___fltol@exp1
  4042  0C4A  0852               	movf	___fltol@exp1,w
  4043  0C4B  1D03               	btfss	3,2
  4044  0C4C  2C4E               	goto	u3641
  4045  0C4D  2C4F               	goto	u3640
  4046  0C4E                     u3641:	
  4047  0C4E  2C58               	goto	l3089
  4048  0C4F                     u3640:	
  4049  0C4F                     l3085:	
  4050  0C4F  3000               	movlw	0
  4051  0C50  00CB               	movwf	?___fltol+3
  4052  0C51  3000               	movlw	0
  4053  0C52  00CA               	movwf	?___fltol+2
  4054  0C53  3000               	movlw	0
  4055  0C54  00C9               	movwf	?___fltol+1
  4056  0C55  3000               	movlw	0
  4057  0C56  00C8               	movwf	?___fltol
  4058  0C57  2CBD               	goto	l557
  4059  0C58                     l3089:	
  4060  0C58  0848               	movf	___fltol@f1,w
  4061  0C59  00CC               	movwf	??___fltol
  4062  0C5A  0849               	movf	___fltol@f1+1,w
  4063  0C5B  00CD               	movwf	??___fltol+1
  4064  0C5C  084A               	movf	___fltol@f1+2,w
  4065  0C5D  00CE               	movwf	??___fltol+2
  4066  0C5E  084B               	movf	___fltol@f1+3,w
  4067  0C5F  00CF               	movwf	??___fltol+3
  4068  0C60  301F               	movlw	31
  4069  0C61                     u3655:	
  4070  0C61  1003               	clrc
  4071  0C62  0CCF               	rrf	??___fltol+3,f
  4072  0C63  0CCE               	rrf	??___fltol+2,f
  4073  0C64  0CCD               	rrf	??___fltol+1,f
  4074  0C65  0CCC               	rrf	??___fltol,f
  4075  0C66                     u3650:	
  4076  0C66  3EFF               	addlw	-1
  4077  0C67  1D03               	skipz
  4078  0C68  2C61               	goto	u3655
  4079  0C69  084C               	movf	??___fltol,w
  4080  0C6A  00D0               	movwf	??___fltol+4
  4081  0C6B  0850               	movf	??___fltol+4,w
  4082  0C6C  00D1               	movwf	___fltol@sign1
  4083  0C6D                     l3091:	
  4084  0C6D  17CA               	bsf	___fltol@f1+2,7
  4085  0C6E                     l3093:	
  4086  0C6E  30FF               	movlw	255
  4087  0C6F  05C8               	andwf	___fltol@f1,f
  4088  0C70  30FF               	movlw	255
  4089  0C71  05C9               	andwf	___fltol@f1+1,f
  4090  0C72  30FF               	movlw	255
  4091  0C73  05CA               	andwf	___fltol@f1+2,f
  4092  0C74  3000               	movlw	0
  4093  0C75  05CB               	andwf	___fltol@f1+3,f
  4094  0C76                     l3095:	
  4095  0C76  3096               	movlw	150
  4096  0C77  02D2               	subwf	___fltol@exp1,f
  4097  0C78                     l3097:	
  4098  0C78  1FD2               	btfss	___fltol@exp1,7
  4099  0C79  2C7B               	goto	u3661
  4100  0C7A  2C7C               	goto	u3660
  4101  0C7B                     u3661:	
  4102  0C7B  2C96               	goto	l3107
  4103  0C7C                     u3660:	
  4104  0C7C                     l3099:	
  4105  0C7C  0852               	movf	___fltol@exp1,w
  4106  0C7D  3A80               	xorlw	128
  4107  0C7E  3E97               	addlw	151
  4108  0C7F  1803               	skipnc
  4109  0C80  2C82               	goto	u3671
  4110  0C81  2C83               	goto	u3670
  4111  0C82                     u3671:	
  4112  0C82  2C84               	goto	l3105
  4113  0C83                     u3670:	
  4114  0C83  2C4F               	goto	l3085
  4115  0C84                     l3105:	
  4116  0C84  3001               	movlw	1
  4117  0C85                     u3685:	
  4118  0C85  1003               	clrc
  4119  0C86  0CCB               	rrf	___fltol@f1+3,f
  4120  0C87  0CCA               	rrf	___fltol@f1+2,f
  4121  0C88  0CC9               	rrf	___fltol@f1+1,f
  4122  0C89  0CC8               	rrf	___fltol@f1,f
  4123  0C8A  3EFF               	addlw	-1
  4124  0C8B  1D03               	skipz
  4125  0C8C  2C85               	goto	u3685
  4126  0C8D  3001               	movlw	1
  4127  0C8E  00CC               	movwf	??___fltol
  4128  0C8F  084C               	movf	??___fltol,w
  4129  0C90  07D2               	addwf	___fltol@exp1,f
  4130  0C91  1D03               	btfss	3,2
  4131  0C92  2C94               	goto	u3691
  4132  0C93  2C95               	goto	u3690
  4133  0C94                     u3691:	
  4134  0C94  2C84               	goto	l3105
  4135  0C95                     u3690:	
  4136  0C95  2CAD               	goto	l3115
  4137  0C96                     l3107:	
  4138  0C96  3020               	movlw	32
  4139  0C97  0252               	subwf	___fltol@exp1,w
  4140  0C98  1C03               	skipc
  4141  0C99  2C9B               	goto	u3701
  4142  0C9A  2C9C               	goto	u3700
  4143  0C9B                     u3701:	
  4144  0C9B  2CA8               	goto	l564
  4145  0C9C                     u3700:	
  4146  0C9C  2C4F               	goto	l3085
  4147  0C9D                     l3113:	
  4148  0C9D  3001               	movlw	1
  4149  0C9E  00CC               	movwf	??___fltol
  4150  0C9F                     u3715:	
  4151  0C9F  1003               	clrc
  4152  0CA0  0DC8               	rlf	___fltol@f1,f
  4153  0CA1  0DC9               	rlf	___fltol@f1+1,f
  4154  0CA2  0DCA               	rlf	___fltol@f1+2,f
  4155  0CA3  0DCB               	rlf	___fltol@f1+3,f
  4156  0CA4  0BCC               	decfsz	??___fltol,f
  4157  0CA5  2C9F               	goto	u3715
  4158  0CA6  3001               	movlw	1
  4159  0CA7  02D2               	subwf	___fltol@exp1,f
  4160  0CA8                     l564:	
  4161  0CA8  0852               	movf	___fltol@exp1,w
  4162  0CA9  1D03               	btfss	3,2
  4163  0CAA  2CAC               	goto	u3721
  4164  0CAB  2CAD               	goto	u3720
  4165  0CAC                     u3721:	
  4166  0CAC  2C9D               	goto	l3113
  4167  0CAD                     u3720:	
  4168  0CAD                     l3115:	
  4169  0CAD  0851               	movf	___fltol@sign1,w
  4170  0CAE  1903               	btfsc	3,2
  4171  0CAF  2CB1               	goto	u3731
  4172  0CB0  2CB2               	goto	u3730
  4173  0CB1                     u3731:	
  4174  0CB1  2CBD               	goto	l567
  4175  0CB2                     u3730:	
  4176  0CB2                     l3117:	
  4177  0CB2  09C8               	comf	___fltol@f1,f
  4178  0CB3  09C9               	comf	___fltol@f1+1,f
  4179  0CB4  09CA               	comf	___fltol@f1+2,f
  4180  0CB5  09CB               	comf	___fltol@f1+3,f
  4181  0CB6  0AC8               	incf	___fltol@f1,f
  4182  0CB7  1903               	skipnz
  4183  0CB8  0AC9               	incf	___fltol@f1+1,f
  4184  0CB9  1903               	skipnz
  4185  0CBA  0ACA               	incf	___fltol@f1+2,f
  4186  0CBB  1903               	skipnz
  4187  0CBC  0ACB               	incf	___fltol@f1+3,f
  4188  0CBD                     l567:	
  4189  0CBD                     l557:	
  4190  0CBD  0008               	return
  4191  0CBE                     __end_of___fltol:	
  4192                           
  4193                           	psect	text15
  4194  0398                     __ptext15:	
  4195 ;; *************** function ___flmul *****************
  4196 ;; Defined at:
  4197 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  b               4   14[BANK0 ] long 
  4200 ;;  a               4   18[BANK0 ] long 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  prod            4   34[BANK0 ] struct .
  4203 ;;  grs             4   29[BANK0 ] unsigned long 
  4204 ;;  temp            2   38[BANK0 ] struct .
  4205 ;;  bexp            1   33[BANK0 ] unsigned char 
  4206 ;;  aexp            1   28[BANK0 ] unsigned char 
  4207 ;;  sign            1   27[BANK0 ] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  4   14[BANK0 ] unsigned char 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4217 ;;      Params:         0       8       0       0       0
  4218 ;;      Locals:         0      13       0       0       0
  4219 ;;      Temps:          0       5       0       0       0
  4220 ;;      Totals:         0      26       0       0       0
  4221 ;;Total ram usage:       26 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		__Umul8_16
  4226 ;; This function is called by:
  4227 ;;		_ADC
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           
  4232                           ;psect for function ___flmul
  4233  0398                     ___flmul:	
  4234  0398                     l3119:	
  4235                           ;incstack = 0
  4236                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4237                           
  4238  0398  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0399  1303               	bcf	3,6	;RP1=0, select bank0
  4240  039A  0831               	movf	___flmul@b+3,w
  4241  039B  3980               	andlw	128
  4242  039C  00B6               	movwf	??___flmul
  4243  039D  0836               	movf	??___flmul,w
  4244  039E  00BB               	movwf	___flmul@sign
  4245  039F                     l3121:	
  4246  039F  0831               	movf	___flmul@b+3,w
  4247  03A0  00B6               	movwf	??___flmul
  4248  03A1  0736               	addwf	??___flmul,w
  4249  03A2  00B7               	movwf	??___flmul+1
  4250  03A3  0837               	movf	??___flmul+1,w
  4251  03A4  00C1               	movwf	___flmul@bexp
  4252  03A5                     l3123:	
  4253  03A5  1FB0               	btfss	___flmul@b+2,7
  4254  03A6  2BA8               	goto	u3741
  4255  03A7  2BA9               	goto	u3740
  4256  03A8                     u3741:	
  4257  03A8  2BAA               	goto	l3127
  4258  03A9                     u3740:	
  4259  03A9                     l3125:	
  4260  03A9  1441               	bsf	___flmul@bexp,0
  4261  03AA                     l3127:	
  4262  03AA  0841               	movf	___flmul@bexp,w
  4263  03AB  1903               	btfsc	3,2
  4264  03AC  2BAE               	goto	u3751
  4265  03AD  2BAF               	goto	u3750
  4266  03AE                     u3751:	
  4267  03AE  2BBE               	goto	l3135
  4268  03AF                     u3750:	
  4269  03AF                     l3129:	
  4270  03AF  0A41               	incf	___flmul@bexp,w
  4271  03B0  1D03               	btfss	3,2
  4272  03B1  2BB3               	goto	u3761
  4273  03B2  2BB4               	goto	u3760
  4274  03B3                     u3761:	
  4275  03B3  2BBC               	goto	l3133
  4276  03B4                     u3760:	
  4277  03B4                     l3131:	
  4278  03B4  3000               	movlw	0
  4279  03B5  00B1               	movwf	___flmul@b+3
  4280  03B6  3000               	movlw	0
  4281  03B7  00B0               	movwf	___flmul@b+2
  4282  03B8  3000               	movlw	0
  4283  03B9  00AF               	movwf	___flmul@b+1
  4284  03BA  3000               	movlw	0
  4285  03BB  00AE               	movwf	___flmul@b
  4286  03BC                     l3133:	
  4287  03BC  17B0               	bsf	___flmul@b+2,7
  4288  03BD  2BC6               	goto	l3137
  4289  03BE                     l3135:	
  4290  03BE  3000               	movlw	0
  4291  03BF  00B1               	movwf	___flmul@b+3
  4292  03C0  3000               	movlw	0
  4293  03C1  00B0               	movwf	___flmul@b+2
  4294  03C2  3000               	movlw	0
  4295  03C3  00AF               	movwf	___flmul@b+1
  4296  03C4  3000               	movlw	0
  4297  03C5  00AE               	movwf	___flmul@b
  4298  03C6                     l3137:	
  4299  03C6  0835               	movf	___flmul@a+3,w
  4300  03C7  3980               	andlw	128
  4301  03C8  00B6               	movwf	??___flmul
  4302  03C9  0836               	movf	??___flmul,w
  4303  03CA  06BB               	xorwf	___flmul@sign,f
  4304  03CB                     l3139:	
  4305  03CB  0835               	movf	___flmul@a+3,w
  4306  03CC  00B6               	movwf	??___flmul
  4307  03CD  0736               	addwf	??___flmul,w
  4308  03CE  00B7               	movwf	??___flmul+1
  4309  03CF  0837               	movf	??___flmul+1,w
  4310  03D0  00BC               	movwf	___flmul@aexp
  4311  03D1                     l3141:	
  4312  03D1  1FB4               	btfss	___flmul@a+2,7
  4313  03D2  2BD4               	goto	u3771
  4314  03D3  2BD5               	goto	u3770
  4315  03D4                     u3771:	
  4316  03D4  2BD6               	goto	l3145
  4317  03D5                     u3770:	
  4318  03D5                     l3143:	
  4319  03D5  143C               	bsf	___flmul@aexp,0
  4320  03D6                     l3145:	
  4321  03D6  083C               	movf	___flmul@aexp,w
  4322  03D7  1903               	btfsc	3,2
  4323  03D8  2BDA               	goto	u3781
  4324  03D9  2BDB               	goto	u3780
  4325  03DA                     u3781:	
  4326  03DA  2BEA               	goto	l3153
  4327  03DB                     u3780:	
  4328  03DB                     l3147:	
  4329  03DB  0A3C               	incf	___flmul@aexp,w
  4330  03DC  1D03               	btfss	3,2
  4331  03DD  2BDF               	goto	u3791
  4332  03DE  2BE0               	goto	u3790
  4333  03DF                     u3791:	
  4334  03DF  2BE8               	goto	l3151
  4335  03E0                     u3790:	
  4336  03E0                     l3149:	
  4337  03E0  3000               	movlw	0
  4338  03E1  00B5               	movwf	___flmul@a+3
  4339  03E2  3000               	movlw	0
  4340  03E3  00B4               	movwf	___flmul@a+2
  4341  03E4  3000               	movlw	0
  4342  03E5  00B3               	movwf	___flmul@a+1
  4343  03E6  3000               	movlw	0
  4344  03E7  00B2               	movwf	___flmul@a
  4345  03E8                     l3151:	
  4346  03E8  17B4               	bsf	___flmul@a+2,7
  4347  03E9  2BF2               	goto	l3155
  4348  03EA                     l3153:	
  4349  03EA  3000               	movlw	0
  4350  03EB  00B5               	movwf	___flmul@a+3
  4351  03EC  3000               	movlw	0
  4352  03ED  00B4               	movwf	___flmul@a+2
  4353  03EE  3000               	movlw	0
  4354  03EF  00B3               	movwf	___flmul@a+1
  4355  03F0  3000               	movlw	0
  4356  03F1  00B2               	movwf	___flmul@a
  4357  03F2                     l3155:	
  4358  03F2  083C               	movf	___flmul@aexp,w
  4359  03F3  1903               	btfsc	3,2
  4360  03F4  2BF6               	goto	u3801
  4361  03F5  2BF7               	goto	u3800
  4362  03F6                     u3801:	
  4363  03F6  2BFC               	goto	l3159
  4364  03F7                     u3800:	
  4365  03F7                     l3157:	
  4366  03F7  0841               	movf	___flmul@bexp,w
  4367  03F8  1D03               	btfss	3,2
  4368  03F9  2BFB               	goto	u3811
  4369  03FA  2BFC               	goto	u3810
  4370  03FB                     u3811:	
  4371  03FB  2C05               	goto	l3163
  4372  03FC                     u3810:	
  4373  03FC                     l3159:	
  4374  03FC  3000               	movlw	0
  4375  03FD  00B1               	movwf	?___flmul+3
  4376  03FE  3000               	movlw	0
  4377  03FF  00B0               	movwf	?___flmul+2
  4378  0400  3000               	movlw	0
  4379  0401  00AF               	movwf	?___flmul+1
  4380  0402  3000               	movlw	0
  4381  0403  00AE               	movwf	?___flmul
  4382  0404  2EF8               	goto	l760
  4383  0405                     l3163:	
  4384  0405  082E               	movf	___flmul@b,w
  4385  0406  00B6               	movwf	??___flmul
  4386  0407  0836               	movf	??___flmul,w
  4387  0408  00F4               	movwf	__Umul8_16@multiplicand
  4388  0409  0834               	movf	___flmul@a+2,w
  4389  040A  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4390  040F  0875               	movf	?__Umul8_16+1,w
  4391  0410  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0411  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0412  00C7               	movwf	___flmul@temp+1
  4394  0413  0874               	movf	?__Umul8_16,w
  4395  0414  00C6               	movwf	___flmul@temp
  4396  0415                     l3165:	
  4397  0415  0846               	movf	___flmul@temp,w
  4398  0416  00B6               	movwf	??___flmul
  4399  0417  01B7               	clrf	??___flmul+1
  4400  0418  01B8               	clrf	??___flmul+2
  4401  0419  01B9               	clrf	??___flmul+3
  4402  041A  0839               	movf	??___flmul+3,w
  4403  041B  00C0               	movwf	___flmul@grs+3
  4404  041C  0838               	movf	??___flmul+2,w
  4405  041D  00BF               	movwf	___flmul@grs+2
  4406  041E  0837               	movf	??___flmul+1,w
  4407  041F  00BE               	movwf	___flmul@grs+1
  4408  0420  0836               	movf	??___flmul,w
  4409  0421  00BD               	movwf	___flmul@grs
  4410  0422                     l3167:	
  4411  0422  0847               	movf	___flmul@temp+1,w
  4412  0423  00B6               	movwf	??___flmul
  4413  0424  01B7               	clrf	??___flmul+1
  4414  0425  01B8               	clrf	??___flmul+2
  4415  0426  01B9               	clrf	??___flmul+3
  4416  0427  0839               	movf	??___flmul+3,w
  4417  0428  00C5               	movwf	___flmul@prod+3
  4418  0429  0838               	movf	??___flmul+2,w
  4419  042A  00C4               	movwf	___flmul@prod+2
  4420  042B  0837               	movf	??___flmul+1,w
  4421  042C  00C3               	movwf	___flmul@prod+1
  4422  042D  0836               	movf	??___flmul,w
  4423  042E  00C2               	movwf	___flmul@prod
  4424  042F  082F               	movf	___flmul@b+1,w
  4425  0430  00B6               	movwf	??___flmul
  4426  0431  0836               	movf	??___flmul,w
  4427  0432  00F4               	movwf	__Umul8_16@multiplicand
  4428  0433  0833               	movf	___flmul@a+1,w
  4429  0434  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4430  0439  0875               	movf	?__Umul8_16+1,w
  4431  043A  1283               	bcf	3,5	;RP0=0, select bank0
  4432  043B  1303               	bcf	3,6	;RP1=0, select bank0
  4433  043C  00C7               	movwf	___flmul@temp+1
  4434  043D  0874               	movf	?__Umul8_16,w
  4435  043E  00C6               	movwf	___flmul@temp
  4436  043F                     l3169:	
  4437  043F  0846               	movf	___flmul@temp,w
  4438  0440  00B6               	movwf	??___flmul
  4439  0441  01B7               	clrf	??___flmul+1
  4440  0442  01B8               	clrf	??___flmul+2
  4441  0443  01B9               	clrf	??___flmul+3
  4442  0444  0836               	movf	??___flmul,w
  4443  0445  07BD               	addwf	___flmul@grs,f
  4444  0446  0837               	movf	??___flmul+1,w
  4445  0447  1103               	clrz
  4446  0448  1803               	skipnc
  4447  0449  3E01               	addlw	1
  4448  044A  1903               	skipnz
  4449  044B  2C4D               	goto	u3821
  4450  044C  07BE               	addwf	___flmul@grs+1,f
  4451  044D                     u3821:	
  4452  044D  0838               	movf	??___flmul+2,w
  4453  044E  1103               	clrz
  4454  044F  1803               	skipnc
  4455  0450  3E01               	addlw	1
  4456  0451  1903               	skipnz
  4457  0452  2C54               	goto	u3822
  4458  0453  07BF               	addwf	___flmul@grs+2,f
  4459  0454                     u3822:	
  4460  0454  0839               	movf	??___flmul+3,w
  4461  0455  1103               	clrz
  4462  0456  1803               	skipnc
  4463  0457  3E01               	addlw	1
  4464  0458  1903               	skipnz
  4465  0459  2C5B               	goto	u3823
  4466  045A  07C0               	addwf	___flmul@grs+3,f
  4467  045B                     u3823:	
  4468  045B                     l3171:	
  4469  045B  0847               	movf	___flmul@temp+1,w
  4470  045C  00B6               	movwf	??___flmul
  4471  045D  01B7               	clrf	??___flmul+1
  4472  045E  01B8               	clrf	??___flmul+2
  4473  045F  01B9               	clrf	??___flmul+3
  4474  0460  0836               	movf	??___flmul,w
  4475  0461  07C2               	addwf	___flmul@prod,f
  4476  0462  0837               	movf	??___flmul+1,w
  4477  0463  1103               	clrz
  4478  0464  1803               	skipnc
  4479  0465  3E01               	addlw	1
  4480  0466  1903               	skipnz
  4481  0467  2C69               	goto	u3831
  4482  0468  07C3               	addwf	___flmul@prod+1,f
  4483  0469                     u3831:	
  4484  0469  0838               	movf	??___flmul+2,w
  4485  046A  1103               	clrz
  4486  046B  1803               	skipnc
  4487  046C  3E01               	addlw	1
  4488  046D  1903               	skipnz
  4489  046E  2C70               	goto	u3832
  4490  046F  07C4               	addwf	___flmul@prod+2,f
  4491  0470                     u3832:	
  4492  0470  0839               	movf	??___flmul+3,w
  4493  0471  1103               	clrz
  4494  0472  1803               	skipnc
  4495  0473  3E01               	addlw	1
  4496  0474  1903               	skipnz
  4497  0475  2C77               	goto	u3833
  4498  0476  07C5               	addwf	___flmul@prod+3,f
  4499  0477                     u3833:	
  4500  0477  0830               	movf	___flmul@b+2,w
  4501  0478  00B6               	movwf	??___flmul
  4502  0479  0836               	movf	??___flmul,w
  4503  047A  00F4               	movwf	__Umul8_16@multiplicand
  4504  047B  0832               	movf	___flmul@a,w
  4505  047C  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4506  0481  0875               	movf	?__Umul8_16+1,w
  4507  0482  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0483  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0484  00C7               	movwf	___flmul@temp+1
  4510  0485  0874               	movf	?__Umul8_16,w
  4511  0486  00C6               	movwf	___flmul@temp
  4512  0487                     l3173:	
  4513  0487  0846               	movf	___flmul@temp,w
  4514  0488  00B6               	movwf	??___flmul
  4515  0489  01B7               	clrf	??___flmul+1
  4516  048A  01B8               	clrf	??___flmul+2
  4517  048B  01B9               	clrf	??___flmul+3
  4518  048C  0836               	movf	??___flmul,w
  4519  048D  07BD               	addwf	___flmul@grs,f
  4520  048E  0837               	movf	??___flmul+1,w
  4521  048F  1103               	clrz
  4522  0490  1803               	skipnc
  4523  0491  3E01               	addlw	1
  4524  0492  1903               	skipnz
  4525  0493  2C95               	goto	u3841
  4526  0494  07BE               	addwf	___flmul@grs+1,f
  4527  0495                     u3841:	
  4528  0495  0838               	movf	??___flmul+2,w
  4529  0496  1103               	clrz
  4530  0497  1803               	skipnc
  4531  0498  3E01               	addlw	1
  4532  0499  1903               	skipnz
  4533  049A  2C9C               	goto	u3842
  4534  049B  07BF               	addwf	___flmul@grs+2,f
  4535  049C                     u3842:	
  4536  049C  0839               	movf	??___flmul+3,w
  4537  049D  1103               	clrz
  4538  049E  1803               	skipnc
  4539  049F  3E01               	addlw	1
  4540  04A0  1903               	skipnz
  4541  04A1  2CA3               	goto	u3843
  4542  04A2  07C0               	addwf	___flmul@grs+3,f
  4543  04A3                     u3843:	
  4544  04A3                     l3175:	
  4545  04A3  0847               	movf	___flmul@temp+1,w
  4546  04A4  00B6               	movwf	??___flmul
  4547  04A5  01B7               	clrf	??___flmul+1
  4548  04A6  01B8               	clrf	??___flmul+2
  4549  04A7  01B9               	clrf	??___flmul+3
  4550  04A8  0836               	movf	??___flmul,w
  4551  04A9  07C2               	addwf	___flmul@prod,f
  4552  04AA  0837               	movf	??___flmul+1,w
  4553  04AB  1103               	clrz
  4554  04AC  1803               	skipnc
  4555  04AD  3E01               	addlw	1
  4556  04AE  1903               	skipnz
  4557  04AF  2CB1               	goto	u3851
  4558  04B0  07C3               	addwf	___flmul@prod+1,f
  4559  04B1                     u3851:	
  4560  04B1  0838               	movf	??___flmul+2,w
  4561  04B2  1103               	clrz
  4562  04B3  1803               	skipnc
  4563  04B4  3E01               	addlw	1
  4564  04B5  1903               	skipnz
  4565  04B6  2CB8               	goto	u3852
  4566  04B7  07C4               	addwf	___flmul@prod+2,f
  4567  04B8                     u3852:	
  4568  04B8  0839               	movf	??___flmul+3,w
  4569  04B9  1103               	clrz
  4570  04BA  1803               	skipnc
  4571  04BB  3E01               	addlw	1
  4572  04BC  1903               	skipnz
  4573  04BD  2CBF               	goto	u3853
  4574  04BE  07C5               	addwf	___flmul@prod+3,f
  4575  04BF                     u3853:	
  4576  04BF                     l3177:	
  4577  04BF  3008               	movlw	8
  4578  04C0  00B6               	movwf	??___flmul
  4579  04C1                     u3865:	
  4580  04C1  1003               	clrc
  4581  04C2  0DBD               	rlf	___flmul@grs,f
  4582  04C3  0DBE               	rlf	___flmul@grs+1,f
  4583  04C4  0DBF               	rlf	___flmul@grs+2,f
  4584  04C5  0DC0               	rlf	___flmul@grs+3,f
  4585  04C6  0BB6               	decfsz	??___flmul,f
  4586  04C7  2CC1               	goto	u3865
  4587  04C8                     l3179:	
  4588  04C8  082F               	movf	___flmul@b+1,w
  4589  04C9  00B6               	movwf	??___flmul
  4590  04CA  0836               	movf	??___flmul,w
  4591  04CB  00F4               	movwf	__Umul8_16@multiplicand
  4592  04CC  0832               	movf	___flmul@a,w
  4593  04CD  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4594  04D2  0875               	movf	?__Umul8_16+1,w
  4595  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  4596  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  4597  04D5  00C7               	movwf	___flmul@temp+1
  4598  04D6  0874               	movf	?__Umul8_16,w
  4599  04D7  00C6               	movwf	___flmul@temp
  4600  04D8                     l3181:	
  4601  04D8  0846               	movf	___flmul@temp,w
  4602  04D9  00B6               	movwf	??___flmul
  4603  04DA  0847               	movf	___flmul@temp+1,w
  4604  04DB  00B7               	movwf	??___flmul+1
  4605  04DC  01B8               	clrf	??___flmul+2
  4606  04DD  01B9               	clrf	??___flmul+3
  4607  04DE  0836               	movf	??___flmul,w
  4608  04DF  07BD               	addwf	___flmul@grs,f
  4609  04E0  0837               	movf	??___flmul+1,w
  4610  04E1  1103               	clrz
  4611  04E2  1803               	skipnc
  4612  04E3  3E01               	addlw	1
  4613  04E4  1903               	skipnz
  4614  04E5  2CE7               	goto	u3871
  4615  04E6  07BE               	addwf	___flmul@grs+1,f
  4616  04E7                     u3871:	
  4617  04E7  0838               	movf	??___flmul+2,w
  4618  04E8  1103               	clrz
  4619  04E9  1803               	skipnc
  4620  04EA  3E01               	addlw	1
  4621  04EB  1903               	skipnz
  4622  04EC  2CEE               	goto	u3872
  4623  04ED  07BF               	addwf	___flmul@grs+2,f
  4624  04EE                     u3872:	
  4625  04EE  0839               	movf	??___flmul+3,w
  4626  04EF  1103               	clrz
  4627  04F0  1803               	skipnc
  4628  04F1  3E01               	addlw	1
  4629  04F2  1903               	skipnz
  4630  04F3  2CF5               	goto	u3873
  4631  04F4  07C0               	addwf	___flmul@grs+3,f
  4632  04F5                     u3873:	
  4633  04F5                     l3183:	
  4634  04F5  082E               	movf	___flmul@b,w
  4635  04F6  00B6               	movwf	??___flmul
  4636  04F7  0836               	movf	??___flmul,w
  4637  04F8  00F4               	movwf	__Umul8_16@multiplicand
  4638  04F9  0833               	movf	___flmul@a+1,w
  4639  04FA  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4640  04FF  0875               	movf	?__Umul8_16+1,w
  4641  0500  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0501  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0502  00C7               	movwf	___flmul@temp+1
  4644  0503  0874               	movf	?__Umul8_16,w
  4645  0504  00C6               	movwf	___flmul@temp
  4646  0505                     l3185:	
  4647  0505  0846               	movf	___flmul@temp,w
  4648  0506  00B6               	movwf	??___flmul
  4649  0507  0847               	movf	___flmul@temp+1,w
  4650  0508  00B7               	movwf	??___flmul+1
  4651  0509  01B8               	clrf	??___flmul+2
  4652  050A  01B9               	clrf	??___flmul+3
  4653  050B  0836               	movf	??___flmul,w
  4654  050C  07BD               	addwf	___flmul@grs,f
  4655  050D  0837               	movf	??___flmul+1,w
  4656  050E  1103               	clrz
  4657  050F  1803               	skipnc
  4658  0510  3E01               	addlw	1
  4659  0511  1903               	skipnz
  4660  0512  2D14               	goto	u3881
  4661  0513  07BE               	addwf	___flmul@grs+1,f
  4662  0514                     u3881:	
  4663  0514  0838               	movf	??___flmul+2,w
  4664  0515  1103               	clrz
  4665  0516  1803               	skipnc
  4666  0517  3E01               	addlw	1
  4667  0518  1903               	skipnz
  4668  0519  2D1B               	goto	u3882
  4669  051A  07BF               	addwf	___flmul@grs+2,f
  4670  051B                     u3882:	
  4671  051B  0839               	movf	??___flmul+3,w
  4672  051C  1103               	clrz
  4673  051D  1803               	skipnc
  4674  051E  3E01               	addlw	1
  4675  051F  1903               	skipnz
  4676  0520  2D22               	goto	u3883
  4677  0521  07C0               	addwf	___flmul@grs+3,f
  4678  0522                     u3883:	
  4679  0522                     l3187:	
  4680  0522  3008               	movlw	8
  4681  0523  00B6               	movwf	??___flmul
  4682  0524                     u3895:	
  4683  0524  1003               	clrc
  4684  0525  0DBD               	rlf	___flmul@grs,f
  4685  0526  0DBE               	rlf	___flmul@grs+1,f
  4686  0527  0DBF               	rlf	___flmul@grs+2,f
  4687  0528  0DC0               	rlf	___flmul@grs+3,f
  4688  0529  0BB6               	decfsz	??___flmul,f
  4689  052A  2D24               	goto	u3895
  4690  052B  082E               	movf	___flmul@b,w
  4691  052C  00B6               	movwf	??___flmul
  4692  052D  0836               	movf	??___flmul,w
  4693  052E  00F4               	movwf	__Umul8_16@multiplicand
  4694  052F  0832               	movf	___flmul@a,w
  4695  0530  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4696  0535  0875               	movf	?__Umul8_16+1,w
  4697  0536  1283               	bcf	3,5	;RP0=0, select bank0
  4698  0537  1303               	bcf	3,6	;RP1=0, select bank0
  4699  0538  00C7               	movwf	___flmul@temp+1
  4700  0539  0874               	movf	?__Umul8_16,w
  4701  053A  00C6               	movwf	___flmul@temp
  4702  053B                     l3189:	
  4703  053B  0846               	movf	___flmul@temp,w
  4704  053C  00B6               	movwf	??___flmul
  4705  053D  0847               	movf	___flmul@temp+1,w
  4706  053E  00B7               	movwf	??___flmul+1
  4707  053F  01B8               	clrf	??___flmul+2
  4708  0540  01B9               	clrf	??___flmul+3
  4709  0541  0836               	movf	??___flmul,w
  4710  0542  07BD               	addwf	___flmul@grs,f
  4711  0543  0837               	movf	??___flmul+1,w
  4712  0544  1103               	clrz
  4713  0545  1803               	skipnc
  4714  0546  3E01               	addlw	1
  4715  0547  1903               	skipnz
  4716  0548  2D4A               	goto	u3901
  4717  0549  07BE               	addwf	___flmul@grs+1,f
  4718  054A                     u3901:	
  4719  054A  0838               	movf	??___flmul+2,w
  4720  054B  1103               	clrz
  4721  054C  1803               	skipnc
  4722  054D  3E01               	addlw	1
  4723  054E  1903               	skipnz
  4724  054F  2D51               	goto	u3902
  4725  0550  07BF               	addwf	___flmul@grs+2,f
  4726  0551                     u3902:	
  4727  0551  0839               	movf	??___flmul+3,w
  4728  0552  1103               	clrz
  4729  0553  1803               	skipnc
  4730  0554  3E01               	addlw	1
  4731  0555  1903               	skipnz
  4732  0556  2D58               	goto	u3903
  4733  0557  07C0               	addwf	___flmul@grs+3,f
  4734  0558                     u3903:	
  4735  0558                     l3191:	
  4736  0558  082F               	movf	___flmul@b+1,w
  4737  0559  00B6               	movwf	??___flmul
  4738  055A  0836               	movf	??___flmul,w
  4739  055B  00F4               	movwf	__Umul8_16@multiplicand
  4740  055C  0834               	movf	___flmul@a+2,w
  4741  055D  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4742  0562  0875               	movf	?__Umul8_16+1,w
  4743  0563  1283               	bcf	3,5	;RP0=0, select bank0
  4744  0564  1303               	bcf	3,6	;RP1=0, select bank0
  4745  0565  00C7               	movwf	___flmul@temp+1
  4746  0566  0874               	movf	?__Umul8_16,w
  4747  0567  00C6               	movwf	___flmul@temp
  4748  0568  0846               	movf	___flmul@temp,w
  4749  0569  00B6               	movwf	??___flmul
  4750  056A  0847               	movf	___flmul@temp+1,w
  4751  056B  00B7               	movwf	??___flmul+1
  4752  056C  01B8               	clrf	??___flmul+2
  4753  056D  01B9               	clrf	??___flmul+3
  4754  056E  0836               	movf	??___flmul,w
  4755  056F  07C2               	addwf	___flmul@prod,f
  4756  0570  0837               	movf	??___flmul+1,w
  4757  0571  1103               	clrz
  4758  0572  1803               	skipnc
  4759  0573  3E01               	addlw	1
  4760  0574  1903               	skipnz
  4761  0575  2D77               	goto	u3911
  4762  0576  07C3               	addwf	___flmul@prod+1,f
  4763  0577                     u3911:	
  4764  0577  0838               	movf	??___flmul+2,w
  4765  0578  1103               	clrz
  4766  0579  1803               	skipnc
  4767  057A  3E01               	addlw	1
  4768  057B  1903               	skipnz
  4769  057C  2D7E               	goto	u3912
  4770  057D  07C4               	addwf	___flmul@prod+2,f
  4771  057E                     u3912:	
  4772  057E  0839               	movf	??___flmul+3,w
  4773  057F  1103               	clrz
  4774  0580  1803               	skipnc
  4775  0581  3E01               	addlw	1
  4776  0582  1903               	skipnz
  4777  0583  2D85               	goto	u3913
  4778  0584  07C5               	addwf	___flmul@prod+3,f
  4779  0585                     u3913:	
  4780  0585                     l3193:	
  4781  0585  0830               	movf	___flmul@b+2,w
  4782  0586  00B6               	movwf	??___flmul
  4783  0587  0836               	movf	??___flmul,w
  4784  0588  00F4               	movwf	__Umul8_16@multiplicand
  4785  0589  0833               	movf	___flmul@a+1,w
  4786  058A  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4787  058F  0875               	movf	?__Umul8_16+1,w
  4788  0590  1283               	bcf	3,5	;RP0=0, select bank0
  4789  0591  1303               	bcf	3,6	;RP1=0, select bank0
  4790  0592  00C7               	movwf	___flmul@temp+1
  4791  0593  0874               	movf	?__Umul8_16,w
  4792  0594  00C6               	movwf	___flmul@temp
  4793  0595                     l3195:	
  4794  0595  0846               	movf	___flmul@temp,w
  4795  0596  00B6               	movwf	??___flmul
  4796  0597  0847               	movf	___flmul@temp+1,w
  4797  0598  00B7               	movwf	??___flmul+1
  4798  0599  01B8               	clrf	??___flmul+2
  4799  059A  01B9               	clrf	??___flmul+3
  4800  059B  0836               	movf	??___flmul,w
  4801  059C  07C2               	addwf	___flmul@prod,f
  4802  059D  0837               	movf	??___flmul+1,w
  4803  059E  1103               	clrz
  4804  059F  1803               	skipnc
  4805  05A0  3E01               	addlw	1
  4806  05A1  1903               	skipnz
  4807  05A2  2DA4               	goto	u3921
  4808  05A3  07C3               	addwf	___flmul@prod+1,f
  4809  05A4                     u3921:	
  4810  05A4  0838               	movf	??___flmul+2,w
  4811  05A5  1103               	clrz
  4812  05A6  1803               	skipnc
  4813  05A7  3E01               	addlw	1
  4814  05A8  1903               	skipnz
  4815  05A9  2DAB               	goto	u3922
  4816  05AA  07C4               	addwf	___flmul@prod+2,f
  4817  05AB                     u3922:	
  4818  05AB  0839               	movf	??___flmul+3,w
  4819  05AC  1103               	clrz
  4820  05AD  1803               	skipnc
  4821  05AE  3E01               	addlw	1
  4822  05AF  1903               	skipnz
  4823  05B0  2DB2               	goto	u3923
  4824  05B1  07C5               	addwf	___flmul@prod+3,f
  4825  05B2                     u3923:	
  4826  05B2  0830               	movf	___flmul@b+2,w
  4827  05B3  00B6               	movwf	??___flmul
  4828  05B4  0836               	movf	??___flmul,w
  4829  05B5  00F4               	movwf	__Umul8_16@multiplicand
  4830  05B6  0834               	movf	___flmul@a+2,w
  4831  05B7  120A  158A  220F  120A  118A  	fcall	__Umul8_16
  4832  05BC  0875               	movf	?__Umul8_16+1,w
  4833  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  4834  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  4835  05BF  00C7               	movwf	___flmul@temp+1
  4836  05C0  0874               	movf	?__Umul8_16,w
  4837  05C1  00C6               	movwf	___flmul@temp
  4838  05C2                     l3197:	
  4839  05C2  0846               	movf	___flmul@temp,w
  4840  05C3  00B6               	movwf	??___flmul
  4841  05C4  0847               	movf	___flmul@temp+1,w
  4842  05C5  00B7               	movwf	??___flmul+1
  4843  05C6  01B8               	clrf	??___flmul+2
  4844  05C7  01B9               	clrf	??___flmul+3
  4845  05C8  3008               	movlw	8
  4846  05C9                     u3935:	
  4847  05C9  1003               	clrc
  4848  05CA  0DB6               	rlf	??___flmul,f
  4849  05CB  0DB7               	rlf	??___flmul+1,f
  4850  05CC  0DB8               	rlf	??___flmul+2,f
  4851  05CD  0DB9               	rlf	??___flmul+3,f
  4852  05CE                     u3930:	
  4853  05CE  3EFF               	addlw	-1
  4854  05CF  1D03               	skipz
  4855  05D0  2DC9               	goto	u3935
  4856  05D1  0836               	movf	??___flmul,w
  4857  05D2  07C2               	addwf	___flmul@prod,f
  4858  05D3  0837               	movf	??___flmul+1,w
  4859  05D4  1103               	clrz
  4860  05D5  1803               	skipnc
  4861  05D6  3E01               	addlw	1
  4862  05D7  1903               	skipnz
  4863  05D8  2DDA               	goto	u3941
  4864  05D9  07C3               	addwf	___flmul@prod+1,f
  4865  05DA                     u3941:	
  4866  05DA  0838               	movf	??___flmul+2,w
  4867  05DB  1103               	clrz
  4868  05DC  1803               	skipnc
  4869  05DD  3E01               	addlw	1
  4870  05DE  1903               	skipnz
  4871  05DF  2DE1               	goto	u3942
  4872  05E0  07C4               	addwf	___flmul@prod+2,f
  4873  05E1                     u3942:	
  4874  05E1  0839               	movf	??___flmul+3,w
  4875  05E2  1103               	clrz
  4876  05E3  1803               	skipnc
  4877  05E4  3E01               	addlw	1
  4878  05E5  1903               	skipnz
  4879  05E6  2DE8               	goto	u3943
  4880  05E7  07C5               	addwf	___flmul@prod+3,f
  4881  05E8                     u3943:	
  4882  05E8                     l3199:	
  4883  05E8  083D               	movf	___flmul@grs,w
  4884  05E9  00B6               	movwf	??___flmul
  4885  05EA  083E               	movf	___flmul@grs+1,w
  4886  05EB  00B7               	movwf	??___flmul+1
  4887  05EC  083F               	movf	___flmul@grs+2,w
  4888  05ED  00B8               	movwf	??___flmul+2
  4889  05EE  0840               	movf	___flmul@grs+3,w
  4890  05EF  00B9               	movwf	??___flmul+3
  4891  05F0  3018               	movlw	24
  4892  05F1                     u3955:	
  4893  05F1  1003               	clrc
  4894  05F2  0CB9               	rrf	??___flmul+3,f
  4895  05F3  0CB8               	rrf	??___flmul+2,f
  4896  05F4  0CB7               	rrf	??___flmul+1,f
  4897  05F5  0CB6               	rrf	??___flmul,f
  4898  05F6                     u3950:	
  4899  05F6  3EFF               	addlw	-1
  4900  05F7  1D03               	skipz
  4901  05F8  2DF1               	goto	u3955
  4902  05F9  0836               	movf	??___flmul,w
  4903  05FA  07C2               	addwf	___flmul@prod,f
  4904  05FB  0837               	movf	??___flmul+1,w
  4905  05FC  1103               	clrz
  4906  05FD  1803               	skipnc
  4907  05FE  3E01               	addlw	1
  4908  05FF  1903               	skipnz
  4909  0600  2E02               	goto	u3961
  4910  0601  07C3               	addwf	___flmul@prod+1,f
  4911  0602                     u3961:	
  4912  0602  0838               	movf	??___flmul+2,w
  4913  0603  1103               	clrz
  4914  0604  1803               	skipnc
  4915  0605  3E01               	addlw	1
  4916  0606  1903               	skipnz
  4917  0607  2E09               	goto	u3962
  4918  0608  07C4               	addwf	___flmul@prod+2,f
  4919  0609                     u3962:	
  4920  0609  0839               	movf	??___flmul+3,w
  4921  060A  1103               	clrz
  4922  060B  1803               	skipnc
  4923  060C  3E01               	addlw	1
  4924  060D  1903               	skipnz
  4925  060E  2E10               	goto	u3963
  4926  060F  07C5               	addwf	___flmul@prod+3,f
  4927  0610                     u3963:	
  4928  0610                     l3201:	
  4929  0610  3008               	movlw	8
  4930  0611  00B6               	movwf	??___flmul
  4931  0612                     u3975:	
  4932  0612  1003               	clrc
  4933  0613  0DBD               	rlf	___flmul@grs,f
  4934  0614  0DBE               	rlf	___flmul@grs+1,f
  4935  0615  0DBF               	rlf	___flmul@grs+2,f
  4936  0616  0DC0               	rlf	___flmul@grs+3,f
  4937  0617  0BB6               	decfsz	??___flmul,f
  4938  0618  2E12               	goto	u3975
  4939  0619                     l3203:	
  4940  0619  0841               	movf	___flmul@bexp,w
  4941  061A  073C               	addwf	___flmul@aexp,w
  4942  061B  00B6               	movwf	??___flmul
  4943  061C  01B7               	clrf	??___flmul+1
  4944  061D  0DB7               	rlf	??___flmul+1,f
  4945  061E  0836               	movf	??___flmul,w
  4946  061F  3E82               	addlw	130
  4947  0620  00C6               	movwf	___flmul@temp
  4948  0621  0837               	movf	??___flmul+1,w
  4949  0622  1803               	skipnc
  4950  0623  3E01               	addlw	1
  4951  0624  3EFF               	addlw	255
  4952  0625  00C7               	movwf	___flmul@temp+1
  4953  0626  2E44               	goto	l3215
  4954  0627                     l3205:	
  4955  0627  3001               	movlw	1
  4956  0628  00B6               	movwf	??___flmul
  4957  0629                     u3985:	
  4958  0629  1003               	clrc
  4959  062A  0DC2               	rlf	___flmul@prod,f
  4960  062B  0DC3               	rlf	___flmul@prod+1,f
  4961  062C  0DC4               	rlf	___flmul@prod+2,f
  4962  062D  0DC5               	rlf	___flmul@prod+3,f
  4963  062E  0BB6               	decfsz	??___flmul,f
  4964  062F  2E29               	goto	u3985
  4965  0630                     l3207:	
  4966  0630  1FC0               	btfss	___flmul@grs+3,7
  4967  0631  2E33               	goto	u3991
  4968  0632  2E34               	goto	u3990
  4969  0633                     u3991:	
  4970  0633  2E35               	goto	l3211
  4971  0634                     u3990:	
  4972  0634                     l3209:	
  4973  0634  1442               	bsf	___flmul@prod,0
  4974  0635                     l3211:	
  4975  0635  3001               	movlw	1
  4976  0636  00B6               	movwf	??___flmul
  4977  0637                     u4005:	
  4978  0637  1003               	clrc
  4979  0638  0DBD               	rlf	___flmul@grs,f
  4980  0639  0DBE               	rlf	___flmul@grs+1,f
  4981  063A  0DBF               	rlf	___flmul@grs+2,f
  4982  063B  0DC0               	rlf	___flmul@grs+3,f
  4983  063C  0BB6               	decfsz	??___flmul,f
  4984  063D  2E37               	goto	u4005
  4985  063E                     l3213:	
  4986  063E  30FF               	movlw	255
  4987  063F  07C6               	addwf	___flmul@temp,f
  4988  0640  1803               	skipnc
  4989  0641  0AC7               	incf	___flmul@temp+1,f
  4990  0642  30FF               	movlw	255
  4991  0643  07C7               	addwf	___flmul@temp+1,f
  4992  0644                     l3215:	
  4993  0644  1FC4               	btfss	___flmul@prod+2,7
  4994  0645  2E47               	goto	u4011
  4995  0646  2E48               	goto	u4010
  4996  0647                     u4011:	
  4997  0647  2E27               	goto	l3205
  4998  0648                     u4010:	
  4999  0648                     l3217:	
  5000  0648  01BC               	clrf	___flmul@aexp
  5001  0649                     l3219:	
  5002  0649  1FC0               	btfss	___flmul@grs+3,7
  5003  064A  2E4C               	goto	u4021
  5004  064B  2E4D               	goto	u4020
  5005  064C                     u4021:	
  5006  064C  2E69               	goto	l3227
  5007  064D                     u4020:	
  5008  064D                     l3221:	
  5009  064D  30FF               	movlw	255
  5010  064E  053D               	andwf	___flmul@grs,w
  5011  064F  00B6               	movwf	??___flmul
  5012  0650  30FF               	movlw	255
  5013  0651  053E               	andwf	___flmul@grs+1,w
  5014  0652  00B7               	movwf	??___flmul+1
  5015  0653  30FF               	movlw	255
  5016  0654  053F               	andwf	___flmul@grs+2,w
  5017  0655  00B8               	movwf	??___flmul+2
  5018  0656  307F               	movlw	127
  5019  0657  0540               	andwf	___flmul@grs+3,w
  5020  0658  00B9               	movwf	??___flmul+3
  5021  0659  0839               	movf	??___flmul+3,w
  5022  065A  0438               	iorwf	??___flmul+2,w
  5023  065B  0437               	iorwf	??___flmul+1,w
  5024  065C  0436               	iorwf	??___flmul,w
  5025  065D  1903               	skipnz
  5026  065E  2E60               	goto	u4031
  5027  065F  2E61               	goto	u4030
  5028  0660                     u4031:	
  5029  0660  2E64               	goto	l766
  5030  0661                     u4030:	
  5031  0661                     l3223:	
  5032  0661  01BC               	clrf	___flmul@aexp
  5033  0662  0ABC               	incf	___flmul@aexp,f
  5034  0663  2E69               	goto	l3227
  5035  0664                     l766:	
  5036  0664  1C42               	btfss	___flmul@prod,0
  5037  0665  2E67               	goto	u4041
  5038  0666  2E68               	goto	u4040
  5039  0667                     u4041:	
  5040  0667  2E69               	goto	l3227
  5041  0668                     u4040:	
  5042  0668  2E61               	goto	l3223
  5043  0669                     l3227:	
  5044  0669  083C               	movf	___flmul@aexp,w
  5045  066A  1903               	btfsc	3,2
  5046  066B  2E6D               	goto	u4051
  5047  066C  2E6E               	goto	u4050
  5048  066D                     u4051:	
  5049  066D  2E9F               	goto	l3237
  5050  066E                     u4050:	
  5051  066E                     l3229:	
  5052  066E  3001               	movlw	1
  5053  066F  07C2               	addwf	___flmul@prod,f
  5054  0670  3000               	movlw	0
  5055  0671  1803               	skipnc
  5056  0672  3001               	movlw	1
  5057  0673  07C3               	addwf	___flmul@prod+1,f
  5058  0674  3000               	movlw	0
  5059  0675  1803               	skipnc
  5060  0676  3001               	movlw	1
  5061  0677  07C4               	addwf	___flmul@prod+2,f
  5062  0678  3000               	movlw	0
  5063  0679  1803               	skipnc
  5064  067A  3001               	movlw	1
  5065  067B  07C5               	addwf	___flmul@prod+3,f
  5066  067C                     l3231:	
  5067  067C  1C45               	btfss	___flmul@prod+3,0
  5068  067D  2E7F               	goto	u4061
  5069  067E  2E80               	goto	u4060
  5070  067F                     u4061:	
  5071  067F  2E9F               	goto	l3237
  5072  0680                     u4060:	
  5073  0680                     l3233:	
  5074  0680  0842               	movf	___flmul@prod,w
  5075  0681  00B6               	movwf	??___flmul
  5076  0682  0843               	movf	___flmul@prod+1,w
  5077  0683  00B7               	movwf	??___flmul+1
  5078  0684  0844               	movf	___flmul@prod+2,w
  5079  0685  00B8               	movwf	??___flmul+2
  5080  0686  0845               	movf	___flmul@prod+3,w
  5081  0687  00B9               	movwf	??___flmul+3
  5082  0688  3001               	movlw	1
  5083  0689  00BA               	movwf	??___flmul+4
  5084  068A                     u4075:	
  5085  068A  0D39               	rlf	??___flmul+3,w
  5086  068B  0CB9               	rrf	??___flmul+3,f
  5087  068C  0CB8               	rrf	??___flmul+2,f
  5088  068D  0CB7               	rrf	??___flmul+1,f
  5089  068E  0CB6               	rrf	??___flmul,f
  5090  068F                     u4070:	
  5091  068F  0BBA               	decfsz	??___flmul+4,f
  5092  0690  2E8A               	goto	u4075
  5093  0691  0839               	movf	??___flmul+3,w
  5094  0692  00C5               	movwf	___flmul@prod+3
  5095  0693  0838               	movf	??___flmul+2,w
  5096  0694  00C4               	movwf	___flmul@prod+2
  5097  0695  0837               	movf	??___flmul+1,w
  5098  0696  00C3               	movwf	___flmul@prod+1
  5099  0697  0836               	movf	??___flmul,w
  5100  0698  00C2               	movwf	___flmul@prod
  5101  0699                     l3235:	
  5102  0699  3001               	movlw	1
  5103  069A  07C6               	addwf	___flmul@temp,f
  5104  069B  1803               	skipnc
  5105  069C  0AC7               	incf	___flmul@temp+1,f
  5106  069D  3000               	movlw	0
  5107  069E  07C7               	addwf	___flmul@temp+1,f
  5108  069F                     l3237:	
  5109  069F  0847               	movf	___flmul@temp+1,w
  5110  06A0  3A80               	xorlw	128
  5111  06A1  00FF               	movwf	btemp+1
  5112  06A2  3080               	movlw	128
  5113  06A3  027F               	subwf	btemp+1,w
  5114  06A4  1D03               	skipz
  5115  06A5  2EA8               	goto	u4085
  5116  06A6  30FF               	movlw	255
  5117  06A7  0246               	subwf	___flmul@temp,w
  5118  06A8                     u4085:	
  5119  06A8  1C03               	skipc
  5120  06A9  2EAB               	goto	u4081
  5121  06AA  2EAC               	goto	u4080
  5122  06AB                     u4081:	
  5123  06AB  2EB7               	goto	l3241
  5124  06AC                     u4080:	
  5125  06AC                     l3239:	
  5126  06AC  307F               	movlw	127
  5127  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  5128  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  5129  06AF  00C5               	movwf	___flmul@prod+3
  5130  06B0  3080               	movlw	128
  5131  06B1  00C4               	movwf	___flmul@prod+2
  5132  06B2  3000               	movlw	0
  5133  06B3  00C3               	movwf	___flmul@prod+1
  5134  06B4  3000               	movlw	0
  5135  06B5  00C2               	movwf	___flmul@prod
  5136  06B6  2EEC               	goto	l772
  5137  06B7                     l3241:	
  5138  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  5139  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  5140  06B9  0847               	movf	___flmul@temp+1,w
  5141  06BA  3A80               	xorlw	128
  5142  06BB  00FF               	movwf	btemp+1
  5143  06BC  3080               	movlw	128
  5144  06BD  027F               	subwf	btemp+1,w
  5145  06BE  1D03               	skipz
  5146  06BF  2EC2               	goto	u4095
  5147  06C0  3001               	movlw	1
  5148  06C1  0246               	subwf	___flmul@temp,w
  5149  06C2                     u4095:	
  5150  06C2  1803               	skipnc
  5151  06C3  2EC5               	goto	u4091
  5152  06C4  2EC6               	goto	u4090
  5153  06C5                     u4091:	
  5154  06C5  2ED2               	goto	l3247
  5155  06C6                     u4090:	
  5156  06C6                     l3243:	
  5157  06C6  3000               	movlw	0
  5158  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  5159  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  5160  06C9  00C5               	movwf	___flmul@prod+3
  5161  06CA  3000               	movlw	0
  5162  06CB  00C4               	movwf	___flmul@prod+2
  5163  06CC  3000               	movlw	0
  5164  06CD  00C3               	movwf	___flmul@prod+1
  5165  06CE  3000               	movlw	0
  5166  06CF  00C2               	movwf	___flmul@prod
  5167  06D0                     l3245:	
  5168  06D0  01BB               	clrf	___flmul@sign
  5169  06D1  2EEC               	goto	l772
  5170  06D2                     l3247:	
  5171  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  5172  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  5173  06D4  0846               	movf	___flmul@temp,w
  5174  06D5  00B6               	movwf	??___flmul
  5175  06D6  0836               	movf	??___flmul,w
  5176  06D7  00C1               	movwf	___flmul@bexp
  5177  06D8  30FF               	movlw	255
  5178  06D9  05C2               	andwf	___flmul@prod,f
  5179  06DA  30FF               	movlw	255
  5180  06DB  05C3               	andwf	___flmul@prod+1,f
  5181  06DC  307F               	movlw	127
  5182  06DD  05C4               	andwf	___flmul@prod+2,f
  5183  06DE  3000               	movlw	0
  5184  06DF  05C5               	andwf	___flmul@prod+3,f
  5185  06E0                     l3249:	
  5186  06E0  1C41               	btfss	___flmul@bexp,0
  5187  06E1  2EE3               	goto	u4101
  5188  06E2  2EE4               	goto	u4100
  5189  06E3                     u4101:	
  5190  06E3  2EE5               	goto	l3253
  5191  06E4                     u4100:	
  5192  06E4                     l3251:	
  5193  06E4  17C4               	bsf	___flmul@prod+2,7
  5194  06E5                     l3253:	
  5195  06E5  0841               	movf	___flmul@bexp,w
  5196  06E6  00B6               	movwf	??___flmul
  5197  06E7  1003               	clrc
  5198  06E8  0C36               	rrf	??___flmul,w
  5199  06E9  00B7               	movwf	??___flmul+1
  5200  06EA  0837               	movf	??___flmul+1,w
  5201  06EB  00C5               	movwf	___flmul@prod+3
  5202  06EC                     l772:	
  5203  06EC  083B               	movf	___flmul@sign,w
  5204  06ED  00B6               	movwf	??___flmul
  5205  06EE  0836               	movf	??___flmul,w
  5206  06EF  04C5               	iorwf	___flmul@prod+3,f
  5207  06F0                     l3255:	
  5208  06F0  0845               	movf	___flmul@prod+3,w
  5209  06F1  00B1               	movwf	?___flmul+3
  5210  06F2  0844               	movf	___flmul@prod+2,w
  5211  06F3  00B0               	movwf	?___flmul+2
  5212  06F4  0843               	movf	___flmul@prod+1,w
  5213  06F5  00AF               	movwf	?___flmul+1
  5214  06F6  0842               	movf	___flmul@prod,w
  5215  06F7  00AE               	movwf	?___flmul
  5216  06F8                     l760:	
  5217  06F8  0008               	return
  5218  06F9                     __end_of___flmul:	
  5219                           
  5220                           	psect	text16
  5221  0A0F                     __ptext16:	
  5222 ;; *************** function __Umul8_16 *****************
  5223 ;; Defined at:
  5224 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  multiplier      1    wreg     unsigned char 
  5227 ;;  multiplicand    1    4[COMMON] unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  multiplier      1    6[BANK0 ] unsigned char 
  5230 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  5231 ;;  product         2    2[BANK0 ] unsigned int 
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  2    4[COMMON] unsigned int 
  5234 ;; Registers used:
  5235 ;;		wreg, status,2, status,0
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5241 ;;      Params:         2       0       0       0       0
  5242 ;;      Locals:         0       5       0       0       0
  5243 ;;      Temps:          0       2       0       0       0
  5244 ;;      Totals:         2       7       0       0       0
  5245 ;;Total ram usage:        9 bytes
  5246 ;; Hardware stack levels used:    1
  5247 ;; Hardware stack levels required when called:    1
  5248 ;; This function calls:
  5249 ;;		Nothing
  5250 ;; This function is called by:
  5251 ;;		___flmul
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function __Umul8_16
  5257  0A0F                     __Umul8_16:	
  5258                           
  5259                           ;incstack = 0
  5260                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5261                           ;__Umul8_16@multiplier stored from wreg
  5262  0A0F  1283               	bcf	3,5	;RP0=0, select bank0
  5263  0A10  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0A11  00A6               	movwf	__Umul8_16@multiplier
  5265  0A12                     l2857:	
  5266  0A12  01A2               	clrf	__Umul8_16@product
  5267  0A13  01A3               	clrf	__Umul8_16@product+1
  5268  0A14                     l2859:	
  5269  0A14  0874               	movf	__Umul8_16@multiplicand,w
  5270  0A15  00A0               	movwf	??__Umul8_16
  5271  0A16  01A1               	clrf	??__Umul8_16+1
  5272  0A17  0820               	movf	??__Umul8_16,w
  5273  0A18  00A4               	movwf	__Umul8_16@word_mpld
  5274  0A19  0821               	movf	??__Umul8_16+1,w
  5275  0A1A  00A5               	movwf	__Umul8_16@word_mpld+1
  5276  0A1B                     l2861:	
  5277  0A1B  1C26               	btfss	__Umul8_16@multiplier,0
  5278  0A1C  2A1E               	goto	u3301
  5279  0A1D  2A1F               	goto	u3300
  5280  0A1E                     u3301:	
  5281  0A1E  2A25               	goto	l851
  5282  0A1F                     u3300:	
  5283  0A1F                     l2863:	
  5284  0A1F  0824               	movf	__Umul8_16@word_mpld,w
  5285  0A20  07A2               	addwf	__Umul8_16@product,f
  5286  0A21  1803               	skipnc
  5287  0A22  0AA3               	incf	__Umul8_16@product+1,f
  5288  0A23  0825               	movf	__Umul8_16@word_mpld+1,w
  5289  0A24  07A3               	addwf	__Umul8_16@product+1,f
  5290  0A25                     l851:	
  5291  0A25  3001               	movlw	1
  5292  0A26                     u3315:	
  5293  0A26  1003               	clrc
  5294  0A27  0DA4               	rlf	__Umul8_16@word_mpld,f
  5295  0A28  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  5296  0A29  3EFF               	addlw	-1
  5297  0A2A  1D03               	skipz
  5298  0A2B  2A26               	goto	u3315
  5299  0A2C  1003               	clrc
  5300  0A2D  0CA6               	rrf	__Umul8_16@multiplier,f
  5301  0A2E                     l2865:	
  5302  0A2E  0826               	movf	__Umul8_16@multiplier,w
  5303  0A2F  1D03               	btfss	3,2
  5304  0A30  2A32               	goto	u3321
  5305  0A31  2A33               	goto	u3320
  5306  0A32                     u3321:	
  5307  0A32  2A1B               	goto	l2861
  5308  0A33                     u3320:	
  5309  0A33                     l2867:	
  5310  0A33  0823               	movf	__Umul8_16@product+1,w
  5311  0A34  00F5               	movwf	?__Umul8_16+1
  5312  0A35  0822               	movf	__Umul8_16@product,w
  5313  0A36  00F4               	movwf	?__Umul8_16
  5314  0A37                     l853:	
  5315  0A37  0008               	return
  5316  0A38                     __end_of__Umul8_16:	
  5317                           
  5318                           	psect	text17
  5319  0E23                     __ptext17:	
  5320 ;; *************** function ___fldiv *****************
  5321 ;; Defined at:
  5322 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcdiv.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  a               4   40[BANK0 ] unsigned int 
  5325 ;;  b               4   44[BANK0 ] unsigned int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  grs             4   60[BANK0 ] unsigned long 
  5328 ;;  rem             4   53[BANK0 ] unsigned long 
  5329 ;;  new_exp         2   58[BANK0 ] int 
  5330 ;;  aexp            1   65[BANK0 ] unsigned char 
  5331 ;;  bexp            1   64[BANK0 ] unsigned char 
  5332 ;;  sign            1   57[BANK0 ] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  4   40[BANK0 ] unsigned char 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, btemp+1
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5342 ;;      Params:         0       8       0       0       0
  5343 ;;      Locals:         0      13       0       0       0
  5344 ;;      Temps:          0       5       0       0       0
  5345 ;;      Totals:         0      26       0       0       0
  5346 ;;Total ram usage:       26 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    1
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_ADC
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           
  5357                           ;psect for function ___fldiv
  5358  0E23                     ___fldiv:	
  5359  0E23                     l2293:	
  5360                           ;incstack = 0
  5361                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5362                           
  5363  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0E25  084F               	movf	___fldiv@b+3,w
  5366  0E26  3980               	andlw	128
  5367  0E27  00D0               	movwf	??___fldiv
  5368  0E28  0850               	movf	??___fldiv,w
  5369  0E29  00D9               	movwf	___fldiv@sign
  5370  0E2A                     l2295:	
  5371  0E2A  084F               	movf	___fldiv@b+3,w
  5372  0E2B  00D0               	movwf	??___fldiv
  5373  0E2C  0750               	addwf	??___fldiv,w
  5374  0E2D  00D1               	movwf	??___fldiv+1
  5375  0E2E  0851               	movf	??___fldiv+1,w
  5376  0E2F  00E0               	movwf	___fldiv@bexp
  5377  0E30                     l2297:	
  5378  0E30  1FCE               	btfss	___fldiv@b+2,7
  5379  0E31  2E33               	goto	u2351
  5380  0E32  2E34               	goto	u2350
  5381  0E33                     u2351:	
  5382  0E33  2E35               	goto	l2301
  5383  0E34                     u2350:	
  5384  0E34                     l2299:	
  5385  0E34  1460               	bsf	___fldiv@bexp,0
  5386  0E35                     l2301:	
  5387  0E35  0860               	movf	___fldiv@bexp,w
  5388  0E36  1903               	btfsc	3,2
  5389  0E37  2E39               	goto	u2361
  5390  0E38  2E3A               	goto	u2360
  5391  0E39                     u2361:	
  5392  0E39  2E4A               	goto	l2311
  5393  0E3A                     u2360:	
  5394  0E3A                     l2303:	
  5395  0E3A  0A60               	incf	___fldiv@bexp,w
  5396  0E3B  1D03               	btfss	3,2
  5397  0E3C  2E3E               	goto	u2371
  5398  0E3D  2E3F               	goto	u2370
  5399  0E3E                     u2371:	
  5400  0E3E  2E47               	goto	l2307
  5401  0E3F                     u2370:	
  5402  0E3F                     l2305:	
  5403  0E3F  3000               	movlw	0
  5404  0E40  00CF               	movwf	___fldiv@b+3
  5405  0E41  3000               	movlw	0
  5406  0E42  00CE               	movwf	___fldiv@b+2
  5407  0E43  3000               	movlw	0
  5408  0E44  00CD               	movwf	___fldiv@b+1
  5409  0E45  3000               	movlw	0
  5410  0E46  00CC               	movwf	___fldiv@b
  5411  0E47                     l2307:	
  5412  0E47  17CE               	bsf	___fldiv@b+2,7
  5413  0E48                     l2309:	
  5414  0E48  01CF               	clrf	___fldiv@b+3
  5415  0E49  2E52               	goto	l2313
  5416  0E4A                     l2311:	
  5417  0E4A  3000               	movlw	0
  5418  0E4B  00CF               	movwf	___fldiv@b+3
  5419  0E4C  3000               	movlw	0
  5420  0E4D  00CE               	movwf	___fldiv@b+2
  5421  0E4E  3000               	movlw	0
  5422  0E4F  00CD               	movwf	___fldiv@b+1
  5423  0E50  3000               	movlw	0
  5424  0E51  00CC               	movwf	___fldiv@b
  5425  0E52                     l2313:	
  5426  0E52  084B               	movf	___fldiv@a+3,w
  5427  0E53  3980               	andlw	128
  5428  0E54  00D0               	movwf	??___fldiv
  5429  0E55  0850               	movf	??___fldiv,w
  5430  0E56  06D9               	xorwf	___fldiv@sign,f
  5431  0E57                     l2315:	
  5432  0E57  084B               	movf	___fldiv@a+3,w
  5433  0E58  00D0               	movwf	??___fldiv
  5434  0E59  0750               	addwf	??___fldiv,w
  5435  0E5A  00D1               	movwf	??___fldiv+1
  5436  0E5B  0851               	movf	??___fldiv+1,w
  5437  0E5C  00E1               	movwf	___fldiv@aexp
  5438  0E5D                     l2317:	
  5439  0E5D  1FCA               	btfss	___fldiv@a+2,7
  5440  0E5E  2E60               	goto	u2381
  5441  0E5F  2E61               	goto	u2380
  5442  0E60                     u2381:	
  5443  0E60  2E62               	goto	l2321
  5444  0E61                     u2380:	
  5445  0E61                     l2319:	
  5446  0E61  1461               	bsf	___fldiv@aexp,0
  5447  0E62                     l2321:	
  5448  0E62  0861               	movf	___fldiv@aexp,w
  5449  0E63  1903               	btfsc	3,2
  5450  0E64  2E66               	goto	u2391
  5451  0E65  2E67               	goto	u2390
  5452  0E66                     u2391:	
  5453  0E66  2E77               	goto	l2331
  5454  0E67                     u2390:	
  5455  0E67                     l2323:	
  5456  0E67  0A61               	incf	___fldiv@aexp,w
  5457  0E68  1D03               	btfss	3,2
  5458  0E69  2E6B               	goto	u2401
  5459  0E6A  2E6C               	goto	u2400
  5460  0E6B                     u2401:	
  5461  0E6B  2E74               	goto	l2327
  5462  0E6C                     u2400:	
  5463  0E6C                     l2325:	
  5464  0E6C  3000               	movlw	0
  5465  0E6D  00CB               	movwf	___fldiv@a+3
  5466  0E6E  3000               	movlw	0
  5467  0E6F  00CA               	movwf	___fldiv@a+2
  5468  0E70  3000               	movlw	0
  5469  0E71  00C9               	movwf	___fldiv@a+1
  5470  0E72  3000               	movlw	0
  5471  0E73  00C8               	movwf	___fldiv@a
  5472  0E74                     l2327:	
  5473  0E74  17CA               	bsf	___fldiv@a+2,7
  5474  0E75                     l2329:	
  5475  0E75  01CB               	clrf	___fldiv@a+3
  5476  0E76  2E7F               	goto	l720
  5477  0E77                     l2331:	
  5478  0E77  3000               	movlw	0
  5479  0E78  00CB               	movwf	___fldiv@a+3
  5480  0E79  3000               	movlw	0
  5481  0E7A  00CA               	movwf	___fldiv@a+2
  5482  0E7B  3000               	movlw	0
  5483  0E7C  00C9               	movwf	___fldiv@a+1
  5484  0E7D  3000               	movlw	0
  5485  0E7E  00C8               	movwf	___fldiv@a
  5486  0E7F                     l720:	
  5487  0E7F  084B               	movf	___fldiv@a+3,w
  5488  0E80  044A               	iorwf	___fldiv@a+2,w
  5489  0E81  0449               	iorwf	___fldiv@a+1,w
  5490  0E82  0448               	iorwf	___fldiv@a,w
  5491  0E83  1D03               	skipz
  5492  0E84  2E86               	goto	u2411
  5493  0E85  2E87               	goto	u2410
  5494  0E86                     u2411:	
  5495  0E86  2EA0               	goto	l2341
  5496  0E87                     u2410:	
  5497  0E87                     l2333:	
  5498  0E87  3000               	movlw	0
  5499  0E88  00CF               	movwf	___fldiv@b+3
  5500  0E89  3000               	movlw	0
  5501  0E8A  00CE               	movwf	___fldiv@b+2
  5502  0E8B  3000               	movlw	0
  5503  0E8C  00CD               	movwf	___fldiv@b+1
  5504  0E8D  3000               	movlw	0
  5505  0E8E  00CC               	movwf	___fldiv@b
  5506  0E8F  3080               	movlw	128
  5507  0E90  04CE               	iorwf	___fldiv@b+2,f
  5508  0E91  307F               	movlw	127
  5509  0E92  04CF               	iorwf	___fldiv@b+3,f
  5510  0E93                     l2335:	
  5511  0E93  0859               	movf	___fldiv@sign,w
  5512  0E94  00D0               	movwf	??___fldiv
  5513  0E95  0850               	movf	??___fldiv,w
  5514  0E96  04CF               	iorwf	___fldiv@b+3,f
  5515  0E97                     l2337:	
  5516  0E97  084F               	movf	___fldiv@b+3,w
  5517  0E98  00CB               	movwf	?___fldiv+3
  5518  0E99  084E               	movf	___fldiv@b+2,w
  5519  0E9A  00CA               	movwf	?___fldiv+2
  5520  0E9B  084D               	movf	___fldiv@b+1,w
  5521  0E9C  00C9               	movwf	?___fldiv+1
  5522  0E9D  084C               	movf	___fldiv@b,w
  5523  0E9E  00C8               	movwf	?___fldiv
  5524  0E9F  2FFF               	goto	l722
  5525  0EA0                     l2341:	
  5526  0EA0  0860               	movf	___fldiv@bexp,w
  5527  0EA1  1D03               	btfss	3,2
  5528  0EA2  2EA4               	goto	u2421
  5529  0EA3  2EA5               	goto	u2420
  5530  0EA4                     u2421:	
  5531  0EA4  2EAE               	goto	l2347
  5532  0EA5                     u2420:	
  5533  0EA5                     l2343:	
  5534  0EA5  3000               	movlw	0
  5535  0EA6  00CB               	movwf	?___fldiv+3
  5536  0EA7  3000               	movlw	0
  5537  0EA8  00CA               	movwf	?___fldiv+2
  5538  0EA9  3000               	movlw	0
  5539  0EAA  00C9               	movwf	?___fldiv+1
  5540  0EAB  3000               	movlw	0
  5541  0EAC  00C8               	movwf	?___fldiv
  5542  0EAD  2FFF               	goto	l722
  5543  0EAE                     l2347:	
  5544  0EAE  0860               	movf	___fldiv@bexp,w
  5545  0EAF  00D0               	movwf	??___fldiv
  5546  0EB0  01D1               	clrf	??___fldiv+1
  5547  0EB1  0851               	movf	??___fldiv+1,w
  5548  0EB2  00D3               	movwf	??___fldiv+3
  5549  0EB3  0861               	movf	___fldiv@aexp,w
  5550  0EB4  0250               	subwf	??___fldiv,w
  5551  0EB5  00D2               	movwf	??___fldiv+2
  5552  0EB6  1C03               	skipc
  5553  0EB7  03D3               	decf	??___fldiv+3,f
  5554  0EB8  0852               	movf	??___fldiv+2,w
  5555  0EB9  3E7F               	addlw	127
  5556  0EBA  00DA               	movwf	___fldiv@new_exp
  5557  0EBB  0853               	movf	??___fldiv+3,w
  5558  0EBC  1803               	skipnc
  5559  0EBD  3E01               	addlw	1
  5560  0EBE  3E00               	addlw	0
  5561  0EBF  00DB               	movwf	___fldiv@new_exp+1
  5562  0EC0                     l2349:	
  5563  0EC0  084F               	movf	___fldiv@b+3,w
  5564  0EC1  00D8               	movwf	___fldiv@rem+3
  5565  0EC2  084E               	movf	___fldiv@b+2,w
  5566  0EC3  00D7               	movwf	___fldiv@rem+2
  5567  0EC4  084D               	movf	___fldiv@b+1,w
  5568  0EC5  00D6               	movwf	___fldiv@rem+1
  5569  0EC6  084C               	movf	___fldiv@b,w
  5570  0EC7  00D5               	movwf	___fldiv@rem
  5571  0EC8                     l2351:	
  5572  0EC8  3000               	movlw	0
  5573  0EC9  00CF               	movwf	___fldiv@b+3
  5574  0ECA  3000               	movlw	0
  5575  0ECB  00CE               	movwf	___fldiv@b+2
  5576  0ECC  3000               	movlw	0
  5577  0ECD  00CD               	movwf	___fldiv@b+1
  5578  0ECE  3000               	movlw	0
  5579  0ECF  00CC               	movwf	___fldiv@b
  5580  0ED0                     l2353:	
  5581  0ED0  3000               	movlw	0
  5582  0ED1  00DF               	movwf	___fldiv@grs+3
  5583  0ED2  3000               	movlw	0
  5584  0ED3  00DE               	movwf	___fldiv@grs+2
  5585  0ED4  3000               	movlw	0
  5586  0ED5  00DD               	movwf	___fldiv@grs+1
  5587  0ED6  3000               	movlw	0
  5588  0ED7  00DC               	movwf	___fldiv@grs
  5589  0ED8                     l2355:	
  5590  0ED8  01E1               	clrf	___fldiv@aexp
  5591  0ED9  2F24               	goto	l2375
  5592  0EDA                     l2357:	
  5593  0EDA  0861               	movf	___fldiv@aexp,w
  5594  0EDB  1903               	btfsc	3,2
  5595  0EDC  2EDE               	goto	u2431
  5596  0EDD  2EDF               	goto	u2430
  5597  0EDE                     u2431:	
  5598  0EDE  2EFF               	goto	l2367
  5599  0EDF                     u2430:	
  5600  0EDF                     l2359:	
  5601  0EDF  3001               	movlw	1
  5602  0EE0  00D0               	movwf	??___fldiv
  5603  0EE1                     u2445:	
  5604  0EE1  1003               	clrc
  5605  0EE2  0DD5               	rlf	___fldiv@rem,f
  5606  0EE3  0DD6               	rlf	___fldiv@rem+1,f
  5607  0EE4  0DD7               	rlf	___fldiv@rem+2,f
  5608  0EE5  0DD8               	rlf	___fldiv@rem+3,f
  5609  0EE6  0BD0               	decfsz	??___fldiv,f
  5610  0EE7  2EE1               	goto	u2445
  5611  0EE8  3001               	movlw	1
  5612  0EE9  00D0               	movwf	??___fldiv
  5613  0EEA                     u2455:	
  5614  0EEA  1003               	clrc
  5615  0EEB  0DCC               	rlf	___fldiv@b,f
  5616  0EEC  0DCD               	rlf	___fldiv@b+1,f
  5617  0EED  0DCE               	rlf	___fldiv@b+2,f
  5618  0EEE  0DCF               	rlf	___fldiv@b+3,f
  5619  0EEF  0BD0               	decfsz	??___fldiv,f
  5620  0EF0  2EEA               	goto	u2455
  5621  0EF1                     l2361:	
  5622  0EF1  1FDF               	btfss	___fldiv@grs+3,7
  5623  0EF2  2EF4               	goto	u2461
  5624  0EF3  2EF5               	goto	u2460
  5625  0EF4                     u2461:	
  5626  0EF4  2EF6               	goto	l2365
  5627  0EF5                     u2460:	
  5628  0EF5                     l2363:	
  5629  0EF5  144C               	bsf	___fldiv@b,0
  5630  0EF6                     l2365:	
  5631  0EF6  3001               	movlw	1
  5632  0EF7  00D0               	movwf	??___fldiv
  5633  0EF8                     u2475:	
  5634  0EF8  1003               	clrc
  5635  0EF9  0DDC               	rlf	___fldiv@grs,f
  5636  0EFA  0DDD               	rlf	___fldiv@grs+1,f
  5637  0EFB  0DDE               	rlf	___fldiv@grs+2,f
  5638  0EFC  0DDF               	rlf	___fldiv@grs+3,f
  5639  0EFD  0BD0               	decfsz	??___fldiv,f
  5640  0EFE  2EF8               	goto	u2475
  5641  0EFF                     l2367:	
  5642  0EFF  084B               	movf	___fldiv@a+3,w
  5643  0F00  0258               	subwf	___fldiv@rem+3,w
  5644  0F01  1D03               	skipz
  5645  0F02  2F0D               	goto	u2485
  5646  0F03  084A               	movf	___fldiv@a+2,w
  5647  0F04  0257               	subwf	___fldiv@rem+2,w
  5648  0F05  1D03               	skipz
  5649  0F06  2F0D               	goto	u2485
  5650  0F07  0849               	movf	___fldiv@a+1,w
  5651  0F08  0256               	subwf	___fldiv@rem+1,w
  5652  0F09  1D03               	skipz
  5653  0F0A  2F0D               	goto	u2485
  5654  0F0B  0848               	movf	___fldiv@a,w
  5655  0F0C  0255               	subwf	___fldiv@rem,w
  5656  0F0D                     u2485:	
  5657  0F0D  1C03               	skipc
  5658  0F0E  2F10               	goto	u2481
  5659  0F0F  2F11               	goto	u2480
  5660  0F10                     u2481:	
  5661  0F10  2F20               	goto	l2373
  5662  0F11                     u2480:	
  5663  0F11                     l2369:	
  5664  0F11  175F               	bsf	___fldiv@grs+3,6
  5665  0F12                     l2371:	
  5666  0F12  0848               	movf	___fldiv@a,w
  5667  0F13  02D5               	subwf	___fldiv@rem,f
  5668  0F14  0849               	movf	___fldiv@a+1,w
  5669  0F15  1C03               	skipc
  5670  0F16  0F49               	incfsz	___fldiv@a+1,w
  5671  0F17  02D6               	subwf	___fldiv@rem+1,f
  5672  0F18  084A               	movf	___fldiv@a+2,w
  5673  0F19  1C03               	skipc
  5674  0F1A  0F4A               	incfsz	___fldiv@a+2,w
  5675  0F1B  02D7               	subwf	___fldiv@rem+2,f
  5676  0F1C  084B               	movf	___fldiv@a+3,w
  5677  0F1D  1C03               	skipc
  5678  0F1E  0F4B               	incfsz	___fldiv@a+3,w
  5679  0F1F  02D8               	subwf	___fldiv@rem+3,f
  5680  0F20                     l2373:	
  5681  0F20  3001               	movlw	1
  5682  0F21  00D0               	movwf	??___fldiv
  5683  0F22  0850               	movf	??___fldiv,w
  5684  0F23  07E1               	addwf	___fldiv@aexp,f
  5685  0F24                     l2375:	
  5686  0F24  301A               	movlw	26
  5687  0F25  0261               	subwf	___fldiv@aexp,w
  5688  0F26  1C03               	skipc
  5689  0F27  2F29               	goto	u2491
  5690  0F28  2F2A               	goto	u2490
  5691  0F29                     u2491:	
  5692  0F29  2EDA               	goto	l2357
  5693  0F2A                     u2490:	
  5694  0F2A                     l2377:	
  5695  0F2A  0858               	movf	___fldiv@rem+3,w
  5696  0F2B  0457               	iorwf	___fldiv@rem+2,w
  5697  0F2C  0456               	iorwf	___fldiv@rem+1,w
  5698  0F2D  0455               	iorwf	___fldiv@rem,w
  5699  0F2E  1903               	skipnz
  5700  0F2F  2F31               	goto	u2501
  5701  0F30  2F32               	goto	u2500
  5702  0F31                     u2501:	
  5703  0F31  2F51               	goto	l2391
  5704  0F32                     u2500:	
  5705  0F32                     l2379:	
  5706  0F32  145C               	bsf	___fldiv@grs,0
  5707  0F33  2F51               	goto	l2391
  5708  0F34                     l2381:	
  5709  0F34  3001               	movlw	1
  5710  0F35  00D0               	movwf	??___fldiv
  5711  0F36                     u2515:	
  5712  0F36  1003               	clrc
  5713  0F37  0DCC               	rlf	___fldiv@b,f
  5714  0F38  0DCD               	rlf	___fldiv@b+1,f
  5715  0F39  0DCE               	rlf	___fldiv@b+2,f
  5716  0F3A  0DCF               	rlf	___fldiv@b+3,f
  5717  0F3B  0BD0               	decfsz	??___fldiv,f
  5718  0F3C  2F36               	goto	u2515
  5719  0F3D                     l2383:	
  5720  0F3D  1FDF               	btfss	___fldiv@grs+3,7
  5721  0F3E  2F40               	goto	u2521
  5722  0F3F  2F41               	goto	u2520
  5723  0F40                     u2521:	
  5724  0F40  2F42               	goto	l2387
  5725  0F41                     u2520:	
  5726  0F41                     l2385:	
  5727  0F41  144C               	bsf	___fldiv@b,0
  5728  0F42                     l2387:	
  5729  0F42  3001               	movlw	1
  5730  0F43  00D0               	movwf	??___fldiv
  5731  0F44                     u2535:	
  5732  0F44  1003               	clrc
  5733  0F45  0DDC               	rlf	___fldiv@grs,f
  5734  0F46  0DDD               	rlf	___fldiv@grs+1,f
  5735  0F47  0DDE               	rlf	___fldiv@grs+2,f
  5736  0F48  0DDF               	rlf	___fldiv@grs+3,f
  5737  0F49  0BD0               	decfsz	??___fldiv,f
  5738  0F4A  2F44               	goto	u2535
  5739  0F4B                     l2389:	
  5740  0F4B  30FF               	movlw	255
  5741  0F4C  07DA               	addwf	___fldiv@new_exp,f
  5742  0F4D  1803               	skipnc
  5743  0F4E  0ADB               	incf	___fldiv@new_exp+1,f
  5744  0F4F  30FF               	movlw	255
  5745  0F50  07DB               	addwf	___fldiv@new_exp+1,f
  5746  0F51                     l2391:	
  5747  0F51  1FCE               	btfss	___fldiv@b+2,7
  5748  0F52  2F54               	goto	u2541
  5749  0F53  2F55               	goto	u2540
  5750  0F54                     u2541:	
  5751  0F54  2F34               	goto	l2381
  5752  0F55                     u2540:	
  5753  0F55                     l2393:	
  5754  0F55  01E1               	clrf	___fldiv@aexp
  5755  0F56                     l2395:	
  5756  0F56  1FDF               	btfss	___fldiv@grs+3,7
  5757  0F57  2F59               	goto	u2551
  5758  0F58  2F5A               	goto	u2550
  5759  0F59                     u2551:	
  5760  0F59  2F76               	goto	l2403
  5761  0F5A                     u2550:	
  5762  0F5A                     l2397:	
  5763  0F5A  30FF               	movlw	255
  5764  0F5B  055C               	andwf	___fldiv@grs,w
  5765  0F5C  00D0               	movwf	??___fldiv
  5766  0F5D  30FF               	movlw	255
  5767  0F5E  055D               	andwf	___fldiv@grs+1,w
  5768  0F5F  00D1               	movwf	??___fldiv+1
  5769  0F60  30FF               	movlw	255
  5770  0F61  055E               	andwf	___fldiv@grs+2,w
  5771  0F62  00D2               	movwf	??___fldiv+2
  5772  0F63  307F               	movlw	127
  5773  0F64  055F               	andwf	___fldiv@grs+3,w
  5774  0F65  00D3               	movwf	??___fldiv+3
  5775  0F66  0853               	movf	??___fldiv+3,w
  5776  0F67  0452               	iorwf	??___fldiv+2,w
  5777  0F68  0451               	iorwf	??___fldiv+1,w
  5778  0F69  0450               	iorwf	??___fldiv,w
  5779  0F6A  1903               	skipnz
  5780  0F6B  2F6D               	goto	u2561
  5781  0F6C  2F6E               	goto	u2560
  5782  0F6D                     u2561:	
  5783  0F6D  2F71               	goto	l736
  5784  0F6E                     u2560:	
  5785  0F6E                     l2399:	
  5786  0F6E  01E1               	clrf	___fldiv@aexp
  5787  0F6F  0AE1               	incf	___fldiv@aexp,f
  5788  0F70  2F76               	goto	l2403
  5789  0F71                     l736:	
  5790  0F71  1C4C               	btfss	___fldiv@b,0
  5791  0F72  2F74               	goto	u2571
  5792  0F73  2F75               	goto	u2570
  5793  0F74                     u2571:	
  5794  0F74  2F76               	goto	l2403
  5795  0F75                     u2570:	
  5796  0F75  2F6E               	goto	l2399
  5797  0F76                     l2403:	
  5798  0F76  0861               	movf	___fldiv@aexp,w
  5799  0F77  1903               	btfsc	3,2
  5800  0F78  2F7A               	goto	u2581
  5801  0F79  2F7B               	goto	u2580
  5802  0F7A                     u2581:	
  5803  0F7A  2FAC               	goto	l2413
  5804  0F7B                     u2580:	
  5805  0F7B                     l2405:	
  5806  0F7B  3001               	movlw	1
  5807  0F7C  07CC               	addwf	___fldiv@b,f
  5808  0F7D  3000               	movlw	0
  5809  0F7E  1803               	skipnc
  5810  0F7F  3001               	movlw	1
  5811  0F80  07CD               	addwf	___fldiv@b+1,f
  5812  0F81  3000               	movlw	0
  5813  0F82  1803               	skipnc
  5814  0F83  3001               	movlw	1
  5815  0F84  07CE               	addwf	___fldiv@b+2,f
  5816  0F85  3000               	movlw	0
  5817  0F86  1803               	skipnc
  5818  0F87  3001               	movlw	1
  5819  0F88  07CF               	addwf	___fldiv@b+3,f
  5820  0F89                     l2407:	
  5821  0F89  1C4F               	btfss	___fldiv@b+3,0
  5822  0F8A  2F8C               	goto	u2591
  5823  0F8B  2F8D               	goto	u2590
  5824  0F8C                     u2591:	
  5825  0F8C  2FAC               	goto	l2413
  5826  0F8D                     u2590:	
  5827  0F8D                     l2409:	
  5828  0F8D  084C               	movf	___fldiv@b,w
  5829  0F8E  00D0               	movwf	??___fldiv
  5830  0F8F  084D               	movf	___fldiv@b+1,w
  5831  0F90  00D1               	movwf	??___fldiv+1
  5832  0F91  084E               	movf	___fldiv@b+2,w
  5833  0F92  00D2               	movwf	??___fldiv+2
  5834  0F93  084F               	movf	___fldiv@b+3,w
  5835  0F94  00D3               	movwf	??___fldiv+3
  5836  0F95  3001               	movlw	1
  5837  0F96  00D4               	movwf	??___fldiv+4
  5838  0F97                     u2605:	
  5839  0F97  0D53               	rlf	??___fldiv+3,w
  5840  0F98  0CD3               	rrf	??___fldiv+3,f
  5841  0F99  0CD2               	rrf	??___fldiv+2,f
  5842  0F9A  0CD1               	rrf	??___fldiv+1,f
  5843  0F9B  0CD0               	rrf	??___fldiv,f
  5844  0F9C                     u2600:	
  5845  0F9C  0BD4               	decfsz	??___fldiv+4,f
  5846  0F9D  2F97               	goto	u2605
  5847  0F9E  0853               	movf	??___fldiv+3,w
  5848  0F9F  00CF               	movwf	___fldiv@b+3
  5849  0FA0  0852               	movf	??___fldiv+2,w
  5850  0FA1  00CE               	movwf	___fldiv@b+2
  5851  0FA2  0851               	movf	??___fldiv+1,w
  5852  0FA3  00CD               	movwf	___fldiv@b+1
  5853  0FA4  0850               	movf	??___fldiv,w
  5854  0FA5  00CC               	movwf	___fldiv@b
  5855  0FA6                     l2411:	
  5856  0FA6  3001               	movlw	1
  5857  0FA7  07DA               	addwf	___fldiv@new_exp,f
  5858  0FA8  1803               	skipnc
  5859  0FA9  0ADB               	incf	___fldiv@new_exp+1,f
  5860  0FAA  3000               	movlw	0
  5861  0FAB  07DB               	addwf	___fldiv@new_exp+1,f
  5862  0FAC                     l2413:	
  5863  0FAC  085B               	movf	___fldiv@new_exp+1,w
  5864  0FAD  3A80               	xorlw	128
  5865  0FAE  00FF               	movwf	btemp+1
  5866  0FAF  3080               	movlw	128
  5867  0FB0  027F               	subwf	btemp+1,w
  5868  0FB1  1D03               	skipz
  5869  0FB2  2FB5               	goto	u2615
  5870  0FB3  30FF               	movlw	255
  5871  0FB4  025A               	subwf	___fldiv@new_exp,w
  5872  0FB5                     u2615:	
  5873  0FB5  1C03               	skipc
  5874  0FB6  2FB8               	goto	u2611
  5875  0FB7  2FB9               	goto	u2610
  5876  0FB8                     u2611:	
  5877  0FB8  2FC7               	goto	l2417
  5878  0FB9                     u2610:	
  5879  0FB9                     l2415:	
  5880  0FB9  30FF               	movlw	255
  5881  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  5882  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  5883  0FBC  00DA               	movwf	___fldiv@new_exp
  5884  0FBD  3000               	movlw	0
  5885  0FBE  00DB               	movwf	___fldiv@new_exp+1
  5886  0FBF  3000               	movlw	0
  5887  0FC0  00CF               	movwf	___fldiv@b+3
  5888  0FC1  3000               	movlw	0
  5889  0FC2  00CE               	movwf	___fldiv@b+2
  5890  0FC3  3000               	movlw	0
  5891  0FC4  00CD               	movwf	___fldiv@b+1
  5892  0FC5  3000               	movlw	0
  5893  0FC6  00CC               	movwf	___fldiv@b
  5894  0FC7                     l2417:	
  5895  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  5896  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  5897  0FC9  085B               	movf	___fldiv@new_exp+1,w
  5898  0FCA  3A80               	xorlw	128
  5899  0FCB  00FF               	movwf	btemp+1
  5900  0FCC  3080               	movlw	128
  5901  0FCD  027F               	subwf	btemp+1,w
  5902  0FCE  1D03               	skipz
  5903  0FCF  2FD2               	goto	u2625
  5904  0FD0  3001               	movlw	1
  5905  0FD1  025A               	subwf	___fldiv@new_exp,w
  5906  0FD2                     u2625:	
  5907  0FD2  1803               	skipnc
  5908  0FD3  2FD5               	goto	u2621
  5909  0FD4  2FD6               	goto	u2620
  5910  0FD5                     u2621:	
  5911  0FD5  2FE3               	goto	l742
  5912  0FD6                     u2620:	
  5913  0FD6                     l2419:	
  5914  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  5915  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  5916  0FD8  01DA               	clrf	___fldiv@new_exp
  5917  0FD9  01DB               	clrf	___fldiv@new_exp+1
  5918  0FDA                     l2421:	
  5919  0FDA  3000               	movlw	0
  5920  0FDB  00CF               	movwf	___fldiv@b+3
  5921  0FDC  3000               	movlw	0
  5922  0FDD  00CE               	movwf	___fldiv@b+2
  5923  0FDE  3000               	movlw	0
  5924  0FDF  00CD               	movwf	___fldiv@b+1
  5925  0FE0  3000               	movlw	0
  5926  0FE1  00CC               	movwf	___fldiv@b
  5927  0FE2                     l2423:	
  5928  0FE2  01D9               	clrf	___fldiv@sign
  5929  0FE3                     l742:	
  5930  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  5931  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  5932  0FE5  085A               	movf	___fldiv@new_exp,w
  5933  0FE6  00D0               	movwf	??___fldiv
  5934  0FE7  0850               	movf	??___fldiv,w
  5935  0FE8  00E0               	movwf	___fldiv@bexp
  5936  0FE9                     l2425:	
  5937  0FE9  1C60               	btfss	___fldiv@bexp,0
  5938  0FEA  2FEC               	goto	u2631
  5939  0FEB  2FED               	goto	u2630
  5940  0FEC                     u2631:	
  5941  0FEC  2FEF               	goto	l2429
  5942  0FED                     u2630:	
  5943  0FED                     l2427:	
  5944  0FED  17CE               	bsf	___fldiv@b+2,7
  5945  0FEE  2FF3               	goto	l744
  5946  0FEF                     l2429:	
  5947  0FEF  307F               	movlw	127
  5948  0FF0  00D0               	movwf	??___fldiv
  5949  0FF1  0850               	movf	??___fldiv,w
  5950  0FF2  05CE               	andwf	___fldiv@b+2,f
  5951  0FF3                     l744:	
  5952  0FF3  0860               	movf	___fldiv@bexp,w
  5953  0FF4  00D0               	movwf	??___fldiv
  5954  0FF5  1003               	clrc
  5955  0FF6  0C50               	rrf	??___fldiv,w
  5956  0FF7  00D1               	movwf	??___fldiv+1
  5957  0FF8  0851               	movf	??___fldiv+1,w
  5958  0FF9  00CF               	movwf	___fldiv@b+3
  5959  0FFA  0859               	movf	___fldiv@sign,w
  5960  0FFB  00D0               	movwf	??___fldiv
  5961  0FFC  0850               	movf	??___fldiv,w
  5962  0FFD  04CF               	iorwf	___fldiv@b+3,f
  5963  0FFE  2E97               	goto	l2337
  5964  0FFF                     l722:	
  5965  0FFF  0008               	return
  5966  1000                     __end_of___fldiv:	
  5967                           
  5968                           	psect	text18
  5969  0B0C                     __ptext18:	
  5970 ;; *************** function ___awmod *****************
  5971 ;; Defined at:
  5972 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  divisor         2    8[BANK0 ] int 
  5975 ;;  dividend        2   10[BANK0 ] int 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  sign            1   13[BANK0 ] unsigned char 
  5978 ;;  counter         1   12[BANK0 ] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  2    8[BANK0 ] int 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5988 ;;      Params:         0       4       0       0       0
  5989 ;;      Locals:         0       2       0       0       0
  5990 ;;      Temps:          1       0       0       0       0
  5991 ;;      Totals:         1       6       0       0       0
  5992 ;;Total ram usage:        7 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_ADC
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           
  6003                           ;psect for function ___awmod
  6004  0B0C                     ___awmod:	
  6005  0B0C                     l2219:	
  6006                           ;incstack = 0
  6007                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6008                           
  6009  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0B0E  01AD               	clrf	___awmod@sign
  6012  0B0F                     l2221:	
  6013  0B0F  1FAB               	btfss	___awmod@dividend+1,7
  6014  0B10  2B12               	goto	u2161
  6015  0B11  2B13               	goto	u2160
  6016  0B12                     u2161:	
  6017  0B12  2B1A               	goto	l2227
  6018  0B13                     u2160:	
  6019  0B13                     l2223:	
  6020  0B13  09AA               	comf	___awmod@dividend,f
  6021  0B14  09AB               	comf	___awmod@dividend+1,f
  6022  0B15  0AAA               	incf	___awmod@dividend,f
  6023  0B16  1903               	skipnz
  6024  0B17  0AAB               	incf	___awmod@dividend+1,f
  6025  0B18                     l2225:	
  6026  0B18  01AD               	clrf	___awmod@sign
  6027  0B19  0AAD               	incf	___awmod@sign,f
  6028  0B1A                     l2227:	
  6029  0B1A  1FA9               	btfss	___awmod@divisor+1,7
  6030  0B1B  2B1D               	goto	u2171
  6031  0B1C  2B1E               	goto	u2170
  6032  0B1D                     u2171:	
  6033  0B1D  2B23               	goto	l2231
  6034  0B1E                     u2170:	
  6035  0B1E                     l2229:	
  6036  0B1E  09A8               	comf	___awmod@divisor,f
  6037  0B1F  09A9               	comf	___awmod@divisor+1,f
  6038  0B20  0AA8               	incf	___awmod@divisor,f
  6039  0B21  1903               	skipnz
  6040  0B22  0AA9               	incf	___awmod@divisor+1,f
  6041  0B23                     l2231:	
  6042  0B23  0828               	movf	___awmod@divisor,w
  6043  0B24  0429               	iorwf	___awmod@divisor+1,w
  6044  0B25  1903               	btfsc	3,2
  6045  0B26  2B28               	goto	u2181
  6046  0B27  2B29               	goto	u2180
  6047  0B28                     u2181:	
  6048  0B28  2B58               	goto	l2249
  6049  0B29                     u2180:	
  6050  0B29                     l2233:	
  6051  0B29  01AC               	clrf	___awmod@counter
  6052  0B2A  0AAC               	incf	___awmod@counter,f
  6053  0B2B  2B37               	goto	l2239
  6054  0B2C                     l2235:	
  6055  0B2C  3001               	movlw	1
  6056  0B2D                     u2195:	
  6057  0B2D  1003               	clrc
  6058  0B2E  0DA8               	rlf	___awmod@divisor,f
  6059  0B2F  0DA9               	rlf	___awmod@divisor+1,f
  6060  0B30  3EFF               	addlw	-1
  6061  0B31  1D03               	skipz
  6062  0B32  2B2D               	goto	u2195
  6063  0B33                     l2237:	
  6064  0B33  3001               	movlw	1
  6065  0B34  00F5               	movwf	??___awmod
  6066  0B35  0875               	movf	??___awmod,w
  6067  0B36  07AC               	addwf	___awmod@counter,f
  6068  0B37                     l2239:	
  6069  0B37  1FA9               	btfss	___awmod@divisor+1,7
  6070  0B38  2B3A               	goto	u2201
  6071  0B39  2B3B               	goto	u2200
  6072  0B3A                     u2201:	
  6073  0B3A  2B2C               	goto	l2235
  6074  0B3B                     u2200:	
  6075  0B3B                     l2241:	
  6076  0B3B  0829               	movf	___awmod@divisor+1,w
  6077  0B3C  022B               	subwf	___awmod@dividend+1,w
  6078  0B3D  1D03               	skipz
  6079  0B3E  2B41               	goto	u2215
  6080  0B3F  0828               	movf	___awmod@divisor,w
  6081  0B40  022A               	subwf	___awmod@dividend,w
  6082  0B41                     u2215:	
  6083  0B41  1C03               	skipc
  6084  0B42  2B44               	goto	u2211
  6085  0B43  2B45               	goto	u2210
  6086  0B44                     u2211:	
  6087  0B44  2B4B               	goto	l2245
  6088  0B45                     u2210:	
  6089  0B45                     l2243:	
  6090  0B45  0828               	movf	___awmod@divisor,w
  6091  0B46  02AA               	subwf	___awmod@dividend,f
  6092  0B47  0829               	movf	___awmod@divisor+1,w
  6093  0B48  1C03               	skipc
  6094  0B49  03AB               	decf	___awmod@dividend+1,f
  6095  0B4A  02AB               	subwf	___awmod@dividend+1,f
  6096  0B4B                     l2245:	
  6097  0B4B  3001               	movlw	1
  6098  0B4C                     u2225:	
  6099  0B4C  1003               	clrc
  6100  0B4D  0CA9               	rrf	___awmod@divisor+1,f
  6101  0B4E  0CA8               	rrf	___awmod@divisor,f
  6102  0B4F  3EFF               	addlw	-1
  6103  0B50  1D03               	skipz
  6104  0B51  2B4C               	goto	u2225
  6105  0B52                     l2247:	
  6106  0B52  3001               	movlw	1
  6107  0B53  02AC               	subwf	___awmod@counter,f
  6108  0B54  1D03               	btfss	3,2
  6109  0B55  2B57               	goto	u2231
  6110  0B56  2B58               	goto	u2230
  6111  0B57                     u2231:	
  6112  0B57  2B3B               	goto	l2241
  6113  0B58                     u2230:	
  6114  0B58                     l2249:	
  6115  0B58  082D               	movf	___awmod@sign,w
  6116  0B59  1903               	btfsc	3,2
  6117  0B5A  2B5C               	goto	u2241
  6118  0B5B  2B5D               	goto	u2240
  6119  0B5C                     u2241:	
  6120  0B5C  2B62               	goto	l2253
  6121  0B5D                     u2240:	
  6122  0B5D                     l2251:	
  6123  0B5D  09AA               	comf	___awmod@dividend,f
  6124  0B5E  09AB               	comf	___awmod@dividend+1,f
  6125  0B5F  0AAA               	incf	___awmod@dividend,f
  6126  0B60  1903               	skipnz
  6127  0B61  0AAB               	incf	___awmod@dividend+1,f
  6128  0B62                     l2253:	
  6129  0B62  082B               	movf	___awmod@dividend+1,w
  6130  0B63  00A9               	movwf	?___awmod+1
  6131  0B64  082A               	movf	___awmod@dividend,w
  6132  0B65  00A8               	movwf	?___awmod
  6133  0B66                     l537:	
  6134  0B66  0008               	return
  6135  0B67                     __end_of___awmod:	
  6136                           
  6137                           	psect	text19
  6138  0B67                     __ptext19:	
  6139 ;; *************** function ___awdiv *****************
  6140 ;; Defined at:
  6141 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  divisor         2    0[BANK0 ] int 
  6144 ;;  dividend        2    2[BANK0 ] int 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  quotient        2    6[BANK0 ] int 
  6147 ;;  sign            1    5[BANK0 ] unsigned char 
  6148 ;;  counter         1    4[BANK0 ] unsigned char 
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  2    0[BANK0 ] int 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6158 ;;      Params:         0       4       0       0       0
  6159 ;;      Locals:         0       4       0       0       0
  6160 ;;      Temps:          1       0       0       0       0
  6161 ;;      Totals:         1       8       0       0       0
  6162 ;;Total ram usage:        9 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:    1
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_ADC
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           
  6173                           ;psect for function ___awdiv
  6174  0B67                     ___awdiv:	
  6175  0B67                     l3039:	
  6176                           ;incstack = 0
  6177                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6178                           
  6179  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  6180  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  6181  0B69  01A5               	clrf	___awdiv@sign
  6182  0B6A                     l3041:	
  6183  0B6A  1FA1               	btfss	___awdiv@divisor+1,7
  6184  0B6B  2B6D               	goto	u3541
  6185  0B6C  2B6E               	goto	u3540
  6186  0B6D                     u3541:	
  6187  0B6D  2B75               	goto	l3047
  6188  0B6E                     u3540:	
  6189  0B6E                     l3043:	
  6190  0B6E  09A0               	comf	___awdiv@divisor,f
  6191  0B6F  09A1               	comf	___awdiv@divisor+1,f
  6192  0B70  0AA0               	incf	___awdiv@divisor,f
  6193  0B71  1903               	skipnz
  6194  0B72  0AA1               	incf	___awdiv@divisor+1,f
  6195  0B73                     l3045:	
  6196  0B73  01A5               	clrf	___awdiv@sign
  6197  0B74  0AA5               	incf	___awdiv@sign,f
  6198  0B75                     l3047:	
  6199  0B75  1FA3               	btfss	___awdiv@dividend+1,7
  6200  0B76  2B78               	goto	u3551
  6201  0B77  2B79               	goto	u3550
  6202  0B78                     u3551:	
  6203  0B78  2B82               	goto	l3053
  6204  0B79                     u3550:	
  6205  0B79                     l3049:	
  6206  0B79  09A2               	comf	___awdiv@dividend,f
  6207  0B7A  09A3               	comf	___awdiv@dividend+1,f
  6208  0B7B  0AA2               	incf	___awdiv@dividend,f
  6209  0B7C  1903               	skipnz
  6210  0B7D  0AA3               	incf	___awdiv@dividend+1,f
  6211  0B7E                     l3051:	
  6212  0B7E  3001               	movlw	1
  6213  0B7F  00F4               	movwf	??___awdiv
  6214  0B80  0874               	movf	??___awdiv,w
  6215  0B81  06A5               	xorwf	___awdiv@sign,f
  6216  0B82                     l3053:	
  6217  0B82  01A6               	clrf	___awdiv@quotient
  6218  0B83  01A7               	clrf	___awdiv@quotient+1
  6219  0B84                     l3055:	
  6220  0B84  0820               	movf	___awdiv@divisor,w
  6221  0B85  0421               	iorwf	___awdiv@divisor+1,w
  6222  0B86  1903               	btfsc	3,2
  6223  0B87  2B89               	goto	u3561
  6224  0B88  2B8A               	goto	u3560
  6225  0B89                     u3561:	
  6226  0B89  2BC1               	goto	l3075
  6227  0B8A                     u3560:	
  6228  0B8A                     l3057:	
  6229  0B8A  01A4               	clrf	___awdiv@counter
  6230  0B8B  0AA4               	incf	___awdiv@counter,f
  6231  0B8C  2B98               	goto	l3063
  6232  0B8D                     l3059:	
  6233  0B8D  3001               	movlw	1
  6234  0B8E                     u3575:	
  6235  0B8E  1003               	clrc
  6236  0B8F  0DA0               	rlf	___awdiv@divisor,f
  6237  0B90  0DA1               	rlf	___awdiv@divisor+1,f
  6238  0B91  3EFF               	addlw	-1
  6239  0B92  1D03               	skipz
  6240  0B93  2B8E               	goto	u3575
  6241  0B94                     l3061:	
  6242  0B94  3001               	movlw	1
  6243  0B95  00F4               	movwf	??___awdiv
  6244  0B96  0874               	movf	??___awdiv,w
  6245  0B97  07A4               	addwf	___awdiv@counter,f
  6246  0B98                     l3063:	
  6247  0B98  1FA1               	btfss	___awdiv@divisor+1,7
  6248  0B99  2B9B               	goto	u3581
  6249  0B9A  2B9C               	goto	u3580
  6250  0B9B                     u3581:	
  6251  0B9B  2B8D               	goto	l3059
  6252  0B9C                     u3580:	
  6253  0B9C                     l3065:	
  6254  0B9C  3001               	movlw	1
  6255  0B9D                     u3595:	
  6256  0B9D  1003               	clrc
  6257  0B9E  0DA6               	rlf	___awdiv@quotient,f
  6258  0B9F  0DA7               	rlf	___awdiv@quotient+1,f
  6259  0BA0  3EFF               	addlw	-1
  6260  0BA1  1D03               	skipz
  6261  0BA2  2B9D               	goto	u3595
  6262  0BA3  0821               	movf	___awdiv@divisor+1,w
  6263  0BA4  0223               	subwf	___awdiv@dividend+1,w
  6264  0BA5  1D03               	skipz
  6265  0BA6  2BA9               	goto	u3605
  6266  0BA7  0820               	movf	___awdiv@divisor,w
  6267  0BA8  0222               	subwf	___awdiv@dividend,w
  6268  0BA9                     u3605:	
  6269  0BA9  1C03               	skipc
  6270  0BAA  2BAC               	goto	u3601
  6271  0BAB  2BAD               	goto	u3600
  6272  0BAC                     u3601:	
  6273  0BAC  2BB4               	goto	l3071
  6274  0BAD                     u3600:	
  6275  0BAD                     l3067:	
  6276  0BAD  0820               	movf	___awdiv@divisor,w
  6277  0BAE  02A2               	subwf	___awdiv@dividend,f
  6278  0BAF  0821               	movf	___awdiv@divisor+1,w
  6279  0BB0  1C03               	skipc
  6280  0BB1  03A3               	decf	___awdiv@dividend+1,f
  6281  0BB2  02A3               	subwf	___awdiv@dividend+1,f
  6282  0BB3                     l3069:	
  6283  0BB3  1426               	bsf	___awdiv@quotient,0
  6284  0BB4                     l3071:	
  6285  0BB4  3001               	movlw	1
  6286  0BB5                     u3615:	
  6287  0BB5  1003               	clrc
  6288  0BB6  0CA1               	rrf	___awdiv@divisor+1,f
  6289  0BB7  0CA0               	rrf	___awdiv@divisor,f
  6290  0BB8  3EFF               	addlw	-1
  6291  0BB9  1D03               	skipz
  6292  0BBA  2BB5               	goto	u3615
  6293  0BBB                     l3073:	
  6294  0BBB  3001               	movlw	1
  6295  0BBC  02A4               	subwf	___awdiv@counter,f
  6296  0BBD  1D03               	btfss	3,2
  6297  0BBE  2BC0               	goto	u3621
  6298  0BBF  2BC1               	goto	u3620
  6299  0BC0                     u3621:	
  6300  0BC0  2B9C               	goto	l3065
  6301  0BC1                     u3620:	
  6302  0BC1                     l3075:	
  6303  0BC1  0825               	movf	___awdiv@sign,w
  6304  0BC2  1903               	btfsc	3,2
  6305  0BC3  2BC5               	goto	u3631
  6306  0BC4  2BC6               	goto	u3630
  6307  0BC5                     u3631:	
  6308  0BC5  2BCB               	goto	l3079
  6309  0BC6                     u3630:	
  6310  0BC6                     l3077:	
  6311  0BC6  09A6               	comf	___awdiv@quotient,f
  6312  0BC7  09A7               	comf	___awdiv@quotient+1,f
  6313  0BC8  0AA6               	incf	___awdiv@quotient,f
  6314  0BC9  1903               	skipnz
  6315  0BCA  0AA7               	incf	___awdiv@quotient+1,f
  6316  0BCB                     l3079:	
  6317  0BCB  0827               	movf	___awdiv@quotient+1,w
  6318  0BCC  00A1               	movwf	?___awdiv+1
  6319  0BCD  0826               	movf	___awdiv@quotient,w
  6320  0BCE  00A0               	movwf	?___awdiv
  6321  0BCF                     l524:	
  6322  0BCF  0008               	return
  6323  0BD0                     __end_of___awdiv:	
  6324                           
  6325                           	psect	text20
  6326  09BE                     __ptext20:	
  6327 ;; *************** function _LCD_msg *****************
  6328 ;; Defined at:
  6329 ;;		line 52 in file "LCD.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  c               2    1[BANK0 ] PTR unsigned char 
  6332 ;;		 -> STR_6(3), STR_5(3), ADCACCHARC(5), ADCCCHARC(5), 
  6333 ;;		 -> STR_1(17), TERMINAL(5), 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  1    wreg      void 
  6338 ;; Registers used:
  6339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6345 ;;      Params:         0       2       0       0       0
  6346 ;;      Locals:         0       0       0       0       0
  6347 ;;      Temps:          0       0       0       0       0
  6348 ;;      Totals:         0       2       0       0       0
  6349 ;;Total ram usage:        2 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    3
  6352 ;; This function calls:
  6353 ;;		_LCD_dwr
  6354 ;; This function is called by:
  6355 ;;		_ADC
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           
  6360                           ;psect for function _LCD_msg
  6361  09BE                     _LCD_msg:	
  6362  09BE                     l2911:	
  6363                           ;incstack = 0
  6364                           ; Regs used in _LCD_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6365                           
  6366                           
  6367                           ;LCD.c: 53:     while(*c != 0)
  6368  09BE  29D5               	goto	l2917
  6369  09BF                     l2913:	
  6370                           
  6371                           ;LCD.c: 54:         LCD_dwr(*c++);
  6372  09BF  0822               	movf	LCD_msg@c+1,w
  6373  09C0  00FF               	movwf	btemp+1
  6374  09C1  0821               	movf	LCD_msg@c,w
  6375  09C2  0084               	movwf	4
  6376  09C3  120A  158A  2000  120A  158A  	fcall	stringtab
  6377  09C8  120A  158A  212B  120A  158A  	fcall	_LCD_dwr
  6378  09CD                     l2915:	
  6379  09CD  3001               	movlw	1
  6380  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  6381  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  6382  09D0  07A1               	addwf	LCD_msg@c,f
  6383  09D1  1803               	skipnc
  6384  09D2  0AA2               	incf	LCD_msg@c+1,f
  6385  09D3  3000               	movlw	0
  6386  09D4  07A2               	addwf	LCD_msg@c+1,f
  6387  09D5                     l2917:	
  6388                           
  6389                           ;LCD.c: 53:     while(*c != 0)
  6390  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  6391  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  6392  09D7  0822               	movf	LCD_msg@c+1,w
  6393  09D8  00FF               	movwf	btemp+1
  6394  09D9  0821               	movf	LCD_msg@c,w
  6395  09DA  0084               	movwf	4
  6396  09DB  120A  158A  2000  120A  158A  	fcall	stringtab
  6397  09E0  3A00               	xorlw	0
  6398  09E1  1D03               	skipz
  6399  09E2  29E4               	goto	u3361
  6400  09E3  29E5               	goto	u3360
  6401  09E4                     u3361:	
  6402  09E4  29BF               	goto	l2913
  6403  09E5                     u3360:	
  6404  09E5                     l88:	
  6405  09E5  0008               	return
  6406  09E6                     __end_of_LCD_msg:	
  6407                           
  6408                           	psect	text21
  6409  092B                     __ptext21:	
  6410 ;; *************** function _LCD_dwr *****************
  6411 ;; Defined at:
  6412 ;;		line 44 in file "LCD.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;  x               1    wreg     unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  x               1    0[BANK0 ] unsigned char 
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg, status,2, status,0, pclath, cstack
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6426 ;;      Params:         0       0       0       0       0
  6427 ;;      Locals:         0       1       0       0       0
  6428 ;;      Temps:          0       0       0       0       0
  6429 ;;      Totals:         0       1       0       0       0
  6430 ;;Total ram usage:        1 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    2
  6433 ;; This function calls:
  6434 ;;		_LCD_lat
  6435 ;;		_LCD_ready
  6436 ;; This function is called by:
  6437 ;;		_LCD_msg
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _LCD_dwr
  6443  092B                     _LCD_dwr:	
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _LCD_dwr: [wreg+status,2+status,0+pclath+cstack]
  6447                           ;LCD_dwr@x stored from wreg
  6448  092B  1283               	bcf	3,5	;RP0=0, select bank0
  6449  092C  1303               	bcf	3,6	;RP1=0, select bank0
  6450  092D  00A0               	movwf	LCD_dwr@x
  6451  092E                     l2833:	
  6452                           
  6453                           ;LCD.c: 45:     LCD_ready();
  6454  092E  120A  158A  21E6  120A  158A  	fcall	_LCD_ready
  6455  0933                     l2835:	
  6456                           
  6457                           ;LCD.c: 46:     PORTB = x;
  6458  0933  1283               	bcf	3,5	;RP0=0, select bank0
  6459  0934  1303               	bcf	3,6	;RP1=0, select bank0
  6460  0935  0820               	movf	LCD_dwr@x,w
  6461  0936  0086               	movwf	6	;volatile
  6462  0937                     l2837:	
  6463                           
  6464                           ;LCD.c: 47:     PORTCbits.RC3 = 1;
  6465  0937  1587               	bsf	7,3	;volatile
  6466  0938                     l2839:	
  6467                           
  6468                           ;LCD.c: 48:     PORTCbits.RC4 = 0;
  6469  0938  1207               	bcf	7,4	;volatile
  6470  0939                     l2841:	
  6471                           
  6472                           ;LCD.c: 49:     LCD_lat();
  6473  0939  120A  158A  20E3  120A  158A  	fcall	_LCD_lat
  6474  093E                     l82:	
  6475  093E  0008               	return
  6476  093F                     __end_of_LCD_dwr:	
  6477                           
  6478                           	psect	text22
  6479  0917                     __ptext22:	
  6480 ;; *************** function _LCD_cmd *****************
  6481 ;; Defined at:
  6482 ;;		line 16 in file "LCD.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  x               1    wreg     unsigned char 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;  x               1    0[BANK0 ] unsigned char 
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0, pclath, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6496 ;;      Params:         0       0       0       0       0
  6497 ;;      Locals:         0       1       0       0       0
  6498 ;;      Temps:          0       0       0       0       0
  6499 ;;      Totals:         0       1       0       0       0
  6500 ;;Total ram usage:        1 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    2
  6503 ;; This function calls:
  6504 ;;		_LCD_lat
  6505 ;;		_LCD_ready
  6506 ;; This function is called by:
  6507 ;;		_inicio
  6508 ;;		_ADC
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           
  6513                           ;psect for function _LCD_cmd
  6514  0917                     _LCD_cmd:	
  6515                           
  6516                           ;incstack = 0
  6517                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  6518                           ;LCD_cmd@x stored from wreg
  6519  0917  1283               	bcf	3,5	;RP0=0, select bank0
  6520  0918  1303               	bcf	3,6	;RP1=0, select bank0
  6521  0919  00A0               	movwf	LCD_cmd@x
  6522  091A                     l2901:	
  6523                           
  6524                           ;LCD.c: 17:     LCD_ready();
  6525  091A  120A  158A  21E6  120A  158A  	fcall	_LCD_ready
  6526  091F                     l2903:	
  6527                           
  6528                           ;LCD.c: 18:     PORTB = x;
  6529  091F  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0920  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0921  0820               	movf	LCD_cmd@x,w
  6532  0922  0086               	movwf	6	;volatile
  6533  0923                     l2905:	
  6534                           
  6535                           ;LCD.c: 19:     PORTCbits.RC3 = 0;
  6536  0923  1187               	bcf	7,3	;volatile
  6537  0924                     l2907:	
  6538                           
  6539                           ;LCD.c: 20:     PORTCbits.RC4 = 0;
  6540  0924  1207               	bcf	7,4	;volatile
  6541  0925                     l2909:	
  6542                           
  6543                           ;LCD.c: 21:     LCD_lat();
  6544  0925  120A  158A  20E3  120A  158A  	fcall	_LCD_lat
  6545  092A                     l72:	
  6546  092A  0008               	return
  6547  092B                     __end_of_LCD_cmd:	
  6548                           
  6549                           	psect	text23
  6550  09E6                     __ptext23:	
  6551 ;; *************** function _LCD_ready *****************
  6552 ;; Defined at:
  6553 ;;		line 29 in file "LCD.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6567 ;;      Params:         0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0
  6569 ;;      Temps:          2       0       0       0       0
  6570 ;;      Totals:         2       0       0       0       0
  6571 ;;Total ram usage:        2 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_LCD_cmd
  6578 ;;		_LCD_dwr
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _LCD_ready
  6584  09E6                     _LCD_ready:	
  6585  09E6                     l2781:	
  6586                           ;incstack = 0
  6587                           ; Regs used in _LCD_ready: [wreg+status,2+status,0]
  6588                           
  6589                           
  6590                           ;LCD.c: 30:     PORTB = 0xFF;
  6591  09E6  30FF               	movlw	255
  6592  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  6593  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  6594  09E9  0086               	movwf	6	;volatile
  6595  09EA                     l2783:	
  6596                           
  6597                           ;LCD.c: 31:     PORTB &= 0x80;
  6598  09EA  3080               	movlw	128
  6599  09EB  00F4               	movwf	??_LCD_ready
  6600  09EC  0874               	movf	??_LCD_ready,w
  6601  09ED  0586               	andwf	6,f	;volatile
  6602  09EE                     l2785:	
  6603                           
  6604                           ;LCD.c: 32:     PORTCbits.RC3 = 0;
  6605  09EE  1187               	bcf	7,3	;volatile
  6606  09EF                     l2787:	
  6607                           
  6608                           ;LCD.c: 33:     PORTCbits.RC4 = 1;
  6609  09EF  1607               	bsf	7,4	;volatile
  6610  09F0                     l2789:	
  6611                           
  6612                           ;LCD.c: 34:     PORTCbits.RC5 = 0;
  6613  09F0  1287               	bcf	7,5	;volatile
  6614  09F1                     l2791:	
  6615                           
  6616                           ;LCD.c: 35:     _delay((unsigned long)((30)*(4000000/4000.0)));
  6617  09F1  3027               	movlw	39
  6618  09F2  00F5               	movwf	??_LCD_ready+1
  6619  09F3  30F5               	movlw	245
  6620  09F4  00F4               	movwf	??_LCD_ready
  6621  09F5                     u4297:	
  6622  09F5  0BF4               	decfsz	??_LCD_ready,f
  6623  09F6  29F5               	goto	u4297
  6624  09F7  0BF5               	decfsz	??_LCD_ready+1,f
  6625  09F8  29F5               	goto	u4297
  6626  09F9                     l2793:	
  6627                           
  6628                           ;LCD.c: 36:     PORTCbits.RC5 = 1;
  6629  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  6630  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  6631  09FB  1687               	bsf	7,5	;volatile
  6632                           
  6633                           ;LCD.c: 37:     if (PORTB == 0x80){
  6634  09FC  3080               	movlw	128
  6635  09FD  0606               	xorwf	6,w	;volatile
  6636  09FE  1D03               	btfss	3,2
  6637  09FF  2A01               	goto	u3201
  6638  0A00  2A02               	goto	u3200
  6639  0A01                     u3201:	
  6640  0A01  2A0E               	goto	l79
  6641  0A02                     u3200:	
  6642  0A02                     l2795:	
  6643                           
  6644                           ;LCD.c: 38:         PORTCbits.RC5 = 0;
  6645  0A02  1287               	bcf	7,5	;volatile
  6646  0A03                     l2797:	
  6647                           
  6648                           ;LCD.c: 39:         _delay((unsigned long)((30)*(4000000/4000.0)));
  6649  0A03  3027               	movlw	39
  6650  0A04  00F5               	movwf	??_LCD_ready+1
  6651  0A05  30F5               	movlw	245
  6652  0A06  00F4               	movwf	??_LCD_ready
  6653  0A07                     u4307:	
  6654  0A07  0BF4               	decfsz	??_LCD_ready,f
  6655  0A08  2A07               	goto	u4307
  6656  0A09  0BF5               	decfsz	??_LCD_ready+1,f
  6657  0A0A  2A07               	goto	u4307
  6658  0A0B                     l2799:	
  6659                           
  6660                           ;LCD.c: 40:         PORTCbits.RC5 = 1;
  6661  0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  6662  0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  6663  0A0D  1687               	bsf	7,5	;volatile
  6664  0A0E                     l79:	
  6665  0A0E  0008               	return
  6666  0A0F                     __end_of_LCD_ready:	
  6667                           
  6668                           	psect	text24
  6669  08E3                     __ptext24:	
  6670 ;; *************** function _LCD_lat *****************
  6671 ;; Defined at:
  6672 ;;		line 24 in file "LCD.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0
  6688 ;;      Temps:          2       0       0       0       0
  6689 ;;      Totals:         2       0       0       0       0
  6690 ;;Total ram usage:        2 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_LCD_cmd
  6697 ;;		_LCD_dwr
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function _LCD_lat
  6703  08E3                     _LCD_lat:	
  6704  08E3                     l2801:	
  6705                           ;incstack = 0
  6706                           ; Regs used in _LCD_lat: [wreg]
  6707                           
  6708                           
  6709                           ;LCD.c: 25:     PORTCbits.RC5 = 1;
  6710  08E3  1283               	bcf	3,5	;RP0=0, select bank0
  6711  08E4  1303               	bcf	3,6	;RP1=0, select bank0
  6712  08E5  1687               	bsf	7,5	;volatile
  6713  08E6                     l2803:	
  6714                           
  6715                           ;LCD.c: 26:    _delay((unsigned long)((30)*(4000000/4000.0)));
  6716  08E6  3027               	movlw	39
  6717  08E7  00F5               	movwf	??_LCD_lat+1
  6718  08E8  30F5               	movlw	245
  6719  08E9  00F4               	movwf	??_LCD_lat
  6720  08EA                     u4317:	
  6721  08EA  0BF4               	decfsz	??_LCD_lat,f
  6722  08EB  28EA               	goto	u4317
  6723  08EC  0BF5               	decfsz	??_LCD_lat+1,f
  6724  08ED  28EA               	goto	u4317
  6725  08EE                     l2805:	
  6726                           
  6727                           ;LCD.c: 27:    PORTCbits.RC5 = 0;
  6728  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  6729  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  6730  08F0  1287               	bcf	7,5	;volatile
  6731  08F1                     l75:	
  6732  08F1  0008               	return
  6733  08F2                     __end_of_LCD_lat:	
  6734                           
  6735                           	psect	text25
  6736  0A63                     __ptext25:	
  6737 ;; *************** function _ISR *****************
  6738 ;; Defined at:
  6739 ;;		line 65 in file "adc.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6753 ;;      Params:         0       0       0       0       0
  6754 ;;      Locals:         0       0       0       0       0
  6755 ;;      Temps:          4       0       0       0       0
  6756 ;;      Totals:         4       0       0       0       0
  6757 ;;Total ram usage:        4 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		Interrupt level 1
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           
  6767                           ;psect for function _ISR
  6768  0A63                     _ISR:	
  6769  0A63                     i1l2735:	
  6770                           
  6771                           ;adc.c: 66:     if (PIR1bits.RCIF == 1) {
  6772  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  6773  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  6774  0A65  1E8C               	btfss	12,5	;volatile
  6775  0A66  2A68               	goto	u317_21
  6776  0A67  2A69               	goto	u317_20
  6777  0A68                     u317_21:	
  6778  0A68  2A92               	goto	i1l189
  6779  0A69                     u317_20:	
  6780  0A69                     i1l2737:	
  6781                           
  6782                           ;adc.c: 67:         PORTAbits.RA5;
  6783  0A69  0805               	movf	5,w	;volatile
  6784                           
  6785                           ;adc.c: 68:         rX = RCREG;
  6786  0A6A  081A               	movf	26,w	;volatile
  6787  0A6B  00F0               	movwf	??_ISR
  6788  0A6C  01F1               	clrf	??_ISR+1
  6789  0A6D  0870               	movf	??_ISR,w
  6790  0A6E  00E4               	movwf	_rX
  6791  0A6F  0871               	movf	??_ISR+1,w
  6792  0A70  00E5               	movwf	_rX+1
  6793  0A71                     i1l2739:	
  6794                           
  6795                           ;adc.c: 69:         if (rX == '+') {
  6796  0A71  302B               	movlw	43
  6797  0A72  0664               	xorwf	_rX,w
  6798  0A73  0465               	iorwf	_rX+1,w
  6799  0A74  1D03               	btfss	3,2
  6800  0A75  2A77               	goto	u318_21
  6801  0A76  2A78               	goto	u318_20
  6802  0A77                     u318_21:	
  6803  0A77  2A81               	goto	i1l2745
  6804  0A78                     u318_20:	
  6805  0A78                     i1l2741:	
  6806                           
  6807                           ;adc.c: 70:             rXc = rXc + 1;
  6808  0A78  0862               	movf	_rXc,w
  6809  0A79  3E01               	addlw	1
  6810  0A7A  00E2               	movwf	_rXc
  6811  0A7B  0863               	movf	_rXc+1,w
  6812  0A7C  1803               	skipnc
  6813  0A7D  3E01               	addlw	1
  6814  0A7E  3E00               	addlw	0
  6815  0A7F  00E3               	movwf	_rXc+1
  6816  0A80  2A92               	goto	i1l189
  6817  0A81                     i1l2745:	
  6818                           
  6819                           ;adc.c: 73:         if (rX == '-') {
  6820  0A81  302D               	movlw	45
  6821  0A82  0664               	xorwf	_rX,w
  6822  0A83  0465               	iorwf	_rX+1,w
  6823  0A84  1D03               	btfss	3,2
  6824  0A85  2A87               	goto	u319_21
  6825  0A86  2A88               	goto	u319_20
  6826  0A87                     u319_21:	
  6827  0A87  2A91               	goto	i1l190
  6828  0A88                     u319_20:	
  6829  0A88                     i1l2747:	
  6830                           
  6831                           ;adc.c: 74:             rXc = rXc - 1;
  6832  0A88  0862               	movf	_rXc,w
  6833  0A89  3EFF               	addlw	255
  6834  0A8A  00E2               	movwf	_rXc
  6835  0A8B  0863               	movf	_rXc+1,w
  6836  0A8C  1803               	skipnc
  6837  0A8D  3E01               	addlw	1
  6838  0A8E  3EFF               	addlw	255
  6839  0A8F  00E3               	movwf	_rXc+1
  6840  0A90  2A92               	goto	i1l189
  6841  0A91                     i1l190:	
  6842                           ;adc.c: 76:         }
  6843                           
  6844                           
  6845                           ;adc.c: 77:         PIR1bits.RCIF = 0;
  6846  0A91  128C               	bcf	12,5	;volatile
  6847  0A92                     i1l189:	
  6848                           ;adc.c: 78:         return;
  6849                           
  6850  0A92  0873               	movf	??_ISR+3,w
  6851  0A93  008A               	movwf	10
  6852  0A94  0E72               	swapf	(??_ISR+2)^(0+4294967168),w
  6853  0A95  0083               	movwf	3
  6854  0A96  0EFE               	swapf	btemp,f
  6855  0A97  0E7E               	swapf	btemp,w
  6856  0A98  0009               	retfie
  6857  0A99                     __end_of_ISR:	
  6858  007E                     btemp	set	126	;btemp
  6859  007E                     wtemp0	set	126
  6860                           
  6861                           	psect	intentry
  6862  0004                     __pintentry:	
  6863                           ;incstack = 0
  6864                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6865                           
  6866  0004                     interrupt_function:	
  6867  007E                     saved_w	set	btemp
  6868  0004  00FE               	movwf	btemp
  6869  0005  0E03               	swapf	3,w
  6870  0006  00F2               	movwf	??_ISR+2
  6871  0007  080A               	movf	10,w
  6872  0008  00F3               	movwf	??_ISR+3
  6873  0009  120A  158A  2A63   	ljmp	_ISR


Data Sizes:
    Strings     27
    Constant    10
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     66      80
    BANK1            80      4      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), POINTERA(BANK1[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), POINTERA(BANK1[5]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), POINTERA(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), POINTERA(BANK1[5]), 
		 -> ADCCCHARC(BANK1[5]), ADCBCHARB(BANK1[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), POINTERA(BANK1[5]), 
		 -> ADCCCHARC(BANK1[5]), ADCBCHARB(BANK1[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), TERMINAL(BANK1[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), TERMINAL(BANK1[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), TERMINAL(BANK1[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), TERMINAL(BANK1[5]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> TERMINAL(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), POINTERA(BANK1[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> POINTERB(BANK1[5]), ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), POINTERA(BANK1[5]), 
		 -> ADCCCHARC(BANK1[5]), ADCBCHARB(BANK1[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> ADCACCHARC(BANK1[5]), ADCABCHARB(BANK1[5]), ADCAACHARA(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> ADCBCHARB(BANK1[5]), ADCACHARA(BANK1[5]), TERMINAL(BANK1[5]), 

    LCD_msg@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[3]), STR_5(CODE[3]), ADCACCHARC(BANK1[5]), ADCCCHARC(BANK1[5]), 
		 -> STR_1(CODE[17]), TERMINAL(BANK1[5]), 


Critical Paths under _main in COMMON

    _ADC->___awmod
    _ADC->_strcat
    _ADC->_strcpy
    _sprintf->___bmul
    _sprintf->___lwmod
    _sprintf->_isdigit
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___flmul->__Umul8_16
    ___awmod->___awdiv
    _LCD_dwr->_LCD_lat
    _LCD_dwr->_LCD_ready
    _LCD_cmd->_LCD_lat
    _LCD_cmd->_LCD_ready

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _inicio->_LCD_cmd
    _ADC->___fldiv
    _sprintf->___lwmod
    _itoa->_utoa
    _utoa->___lwmod
    ___lwmod->___lwdiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___awmod->___awdiv
    _LCD_msg->_LCD_dwr

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17192
                                _ADC
                             _inicio
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0      31
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  4     4      0   17161
                                              0 BANK1      4     4      0
                            _LCD_cmd
                            _LCD_msg
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _itoa
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     361
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     3      1     899
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    2725
                                             12 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     226
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    3645
                                             21 BANK0      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1900
                                             12 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     517
                                             40 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3893
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              5 COMMON     1     1      0
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_msg                                              2     0      2     636
                                              1 BANK0      2     0      2
                            _LCD_dwr
 ---------------------------------------------------------------------------------
 (3) _LCD_dwr                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _LCD_lat
                          _LCD_ready
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      31
                                              0 BANK0      1     1      0
                            _LCD_lat
                          _LCD_ready
 ---------------------------------------------------------------------------------
 (3) _LCD_ready                                            2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_lat                                              2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _LCD_cmd
       _LCD_lat
       _LCD_ready
     _LCD_msg
       _LCD_dwr
         _LCD_lat
         _LCD_ready
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
     _strcat
     _strcpy
   _inicio
     _LCD_cmd
       _LCD_lat
       _LCD_ready
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      41       7       81.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 12 23:50:53 2021

            ___fldiv@aexp 0061              ___fldiv@bexp 0060                         pc 0002  
            ___fldiv@sign 0059            ___bmul@product 0020               __CFG_CP$OFF 0000  
                      l53 0909                        l72 092A                        l82 093E  
                      l75 08F1                        l91 0974                        l59 0ACF  
                      l79 0A0E                        l88 09E5                        _PI 00AA  
            ___awdiv@sign 0025                        _rX 0064                        fsr 0004  
     __Umul8_16@word_mpld 0024                       _DC1 0076                       _DC2 0068  
                     _ADC 0028                       l195 005D                       l524 0BCF  
                     l198 01CD                       l367 0E22                       l720 0E7F  
                     l800 07B4                       l537 0B66                       l722 0FFF  
                     l811 077E                       l643 07FA                       l564 0CA8  
                     l812 078A                       l804 0762                       l557 0CBD  
                     l653 0B0B                       l397 0955                       l742 0FE3  
                     l830 0C2A                       l567 0CBD                       l744 0FF3  
                     l736 0F71                       l760 06F8                       l832 0C41  
                     l824 09BD                       l841 0A62                       l818 0903  
                     l851 0A25                       l772 06EC                       l853 0A37  
                     l766 0664                       l847 0997                       l798 071D  
            __CFG_CPD$OFF 0000                       _ISR 0A63                       _rXc 0062  
                     _plc 00A8                       fsr0 0004                       indf 0000  
            ___awmod@sign 002D              ___flmul@aexp 003C              ___flmul@bexp 0041  
            ___flmul@sign 003B              ___flmul@temp 0046              ___flmul@prod 0042  
                    ?_ADC 0070              __CFG_LVP$OFF 0000                      ?_ISR 0070  
         __end_of_LCD_cmd 092B           __end_of_LCD_lat 08F2              ___fltol@exp1 0052  
         __end_of_LCD_dwr 093F           __end_of_LCD_msg 09E6                      l3011 0DB1  
                    l3003 0D82                      l2221 0B0F                      l2301 0E35  
                    l3021 0DFB                      l3013 0DB7                      l3005 0D8C  
                    l2231 0B23                      l2223 0B13                      l2303 0E3A  
                    l2311 0E4A                      l3015 0DBF                      l3007 0D9C  
                    l3041 0B6A                      l2241 0B3B                      l2233 0B29  
                    l2225 0B18                      l2321 0E62                      l2313 0E52  
                    l2305 0E3F                      l3201 0610                      l3121 039F  
                    l3113 0C9D                      l3105 0C84                      l3017 0DC6  
                    l3025 0E03                      l3009 0D9D                      l3051 0B7E  
                    l3043 0B6E                      l2251 0B5D                      l2243 0B45  
                    l2235 0B2C                      l2227 0B1A                      l2219 0B0C  
                    l2411 0FA6                      l2403 0F76                      l2323 0E67  
                    l2331 0E77                      l2315 0E57                      l2307 0E47  
                    l3211 0635                      l3203 0619                      l3131 03B4  
                    l3123 03A5                      l3115 0CAD                      l3107 0C96  
                    l3019 0DCB                      l3027 0E0C                      l3061 0B94  
                    l3053 0B82                      l3045 0B73                      l2253 0B62  
                    l2245 0B4B                      l2237 0B33                      l2229 0B1E  
                    l2421 0FDA                      l2405 0F7B                      l2413 0FAC  
                    l2333 0E87                      l2341 0EA0                      l2325 0E6C  
                    l2317 0E5D                      l2309 0E48                      l3221 064D  
                    l3213 063E                      l3205 0627                      l3141 03D1  
                    l3133 03BC                      l3125 03A9                      l3117 0CB2  
                    l3029 0E1E                      l3071 0BB4                      l3063 0B98  
                    l3055 0B84                      l3047 0B75                      l3039 0B67  
                    l2247 0B52                      l2239 0B37                      l2423 0FE2  
                    l2415 0FB9                      l2407 0F89                      l2351 0EC8  
                    l2343 0EA5                      l2335 0E93                      l2327 0E74  
                    l2319 0E61                      l3231 067C                      l3223 0661  
                    l3207 0630                      l3215 0644                      l3151 03E8  
                    l3143 03D5                      l3135 03BE                      l3127 03AA  
                    l3119 0398                      l3311 0037                      l3303 0956  
                    l3073 0BBB                      l3065 0B9C                      l3057 0B8A  
                    l3049 0B79                      l2249 0B58                      l2425 0FE9  
                    l2417 0FC7                      l2409 0F8D                      l2361 0EF1  
                    l2353 0ED0                      l2337 0E97                      l2329 0E75  
                    l3241 06B7                      l3233 0680                      l3217 0648  
                    l3209 0634                      l3153 03EA                      l3145 03D6  
                    l3137 03C6                      l3129 03AF                      l3401 035F  
                    l3321 003E                      l3313 0038                      l3305 0028  
                    l3067 0BAD                      l3059 0B8D                      l3075 0BC1  
                    l2427 0FED                      l2419 0FD6                      l2371 0F12  
                    l2363 0EF5                      l2355 0ED8                      l2347 0EAE  
                    l3251 06E4                      l3243 06C6                      l3235 0699  
                    l3227 0669                      l3219 0649                      l3171 045B  
                    l3163 0405                      l3155 03F2                      l3147 03DB  
                    l3139 03CB                      l3091 0C6D                      l3083 0C42  
                    l3403 036A                      l3331 0057                      l3323 0040  
                    l3315 003B                      l3307 0031                      l1651 0AA4  
                    l3411 0904                      l3077 0BC6                      l3069 0BB3  
                    l2429 0FEF                      l2381 0F34                      l2373 0F20  
                    l2365 0EF6                      l2357 0EDA                      l2349 0EC0  
                    l2293 0E23                      l3253 06E5                      l3245 06D0  
                    l3229 066E                      l3237 069F                      l3181 04D8  
                    l3173 0487                      l3165 0415                      l3157 03F7  
                    l3149 03E0                      l3093 0C6E                      l3085 0C4F  
                    l3261 0701                      l3405 0375                      l3341 00D2  
                    l3333 005B                      l3325 0042                      l3317 003C  
                    l3309 0033                      l1661 0AAC                      l1653 0AA6  
                    l1645 0A99                      l3413 090E                      l3079 0BCB  
                    l2383 0F3D                      l2391 0F51                      l2359 0EDF  
                    l2367 0EFF                      l2375 0F24                      l2295 0E2A  
                    l3255 06F0                      l3247 06D2                      l3239 06AC  
                    l3191 0558                      l3183 04F5                      l3175 04A3  
                    l3167 0422                      l3159 03FC                      l3095 0C76  
                    l3271 072E                      l3263 0705                      l3407 0380  
                    l3351 015D                      l3343 010A                      l3335 005C  
                    l3327 0046                      l3319 003D                      l1671 0AB3  
                    l1663 0AAD                      l1655 0AA7                      l1647 0A9D  
                    l2801 08E3                      l2393 0F55                      l2385 0F41  
                    l2377 0F2A                      l2369 0F11                      l2297 0E30  
                    l3249 06E0                      l3193 0585                      l3185 0505  
                    l3177 04BF                      l3169 043F                      l3097 0C78  
                    l3089 0C58                      l3281 0759                      l3273 0733  
                    l3265 0715                      l3409 038B                      l3361 01B3  
                    l3353 0181                      l3345 011D                      l3337 0061  
                    l3329 004F                      l1681 0ACB                      l1673 0AB6  
                    l1665 0AAE                      l1657 0AAA                      l1649 0A9E  
                    l2803 08E6                      l2395 0F56                      l2387 0F42  
                    l2379 0F32                      l2299 0E34                      l3195 0595  
                    l3187 0522                      l3179 04C8                      l3099 0C7C  
                    l3291 078C                      l3283 0769                      l3275 0740  
                    l3267 0725                      l3259 06FC                      l2811 07BF  
                    l3371 01D1                      l3363 01BF                      l3355 018F  
                    l3347 012B                      l3339 0067                      l1683 0ACC  
                    l1675 0AB7                      l1667 0AB1                      l1659 0AAB  
                    l2805 08EE                      l2901 091A                      l2397 0F5A  
                    l2389 0F4B                      l3197 05C2                      l3189 053B  
                    l3293 07A2                      l3285 0774                      l3277 0747  
                    l2821 07E2                      l2813 07C2                      l1941 0AE2  
                    l3381 029B                      l3373 01D7                      l3365 01C5  
                    l3357 019B                      l3349 014F                      l1685 0ACD  
                    l1677 0AC2                      l1669 0AB2                      l2903 091F  
                    l2911 09BE                      l2399 0F6E                      l3199 05E8  
                    l3295 07A7                      l3287 0778                      l3279 074B  
                    l2823 07E8                      l2815 07C9                      l2807 07B5  
                    l1951 0B01                      l1943 0AE6                      l1935 0AD0  
                    l3391 0323                      l3383 02C5                      l3375 0242  
                    l3367 01CB                      l3359 01A7                      l1687 0ACE  
                    l1679 0AC5                      l2905 0923                      l2841 0939  
                    l2833 092E                      l2913 09BF                      l3297 07AB  
                    l3289 0782                      l2825 07E9                      l2817 07CD  
                    l2809 07B9                      l1945 0AEA                      l1937 0AD8  
                    l1953 0B07                      l2921 099B                      l3449 0D31  
                    l3393 032F                      l3385 02D9                      l3377 027A  
                    l3369 01CC                      l2907 0924                      l2835 0933  
                    l2915 09CD                      l3299 07AC                      l2827 07F0  
                    l2819 07D1                      l1947 0AF4                      l1939 0ADB  
                    l2923 099F                      l2851 094D                      l2843 0942  
                    l1971 08FA                      l3395 033B                      l3387 0303  
                    l3379 028D                      l2781 09E6                      l2909 0925  
                    l2837 0937                      l2917 09D5                      l2861 0A1B  
                    l2829 07F6                      l1949 0AFA                      l2925 09A6  
                    l2853 0954                      l2845 0943                      l1973 0900  
                    l2941 0A55                      l2933 0A3B                      l3397 0347  
                    l3389 0317                      l2791 09F1                      l2783 09EA  
                    l2839 0938                      l2863 0A1F                      l2871 0BD3  
                    l2927 09AA                      l2919 099B                      l2847 0947  
                    l1975 0902                      l1967 08F3                      l2951 0CC6  
                    l2935 0A40                      l2943 0978                      l3399 0359  
                    _ADCA 006A                      _ADCB 00AC                      l2793 09F9  
                    l2785 09EE                      l2865 0A2E                      l2857 0A12  
                    l2881 0BF8                      l2873 0BD7                      l2929 09AF  
                    l2849 094B                      l1969 08F4                      l2961 0CE5  
                    l2953 0CCC                      l2937 0A44                      l2945 097D  
                    l2795 0A02                      l2787 09EF                      l2867 0A33  
                    l2859 0A14                      l2891 0C2E                      l2883 0BFA  
                    l2875 0BEA                      l2971 0D0B                      l2963 0CE9  
                    l2955 0CD3                      l2939 0A4D                      l2947 0985  
                    l2797 0A03                      l2789 09F0                      l2893 0C35  
                    l2885 0C0D                      l2877 0BEE                      l2981 0D44  
                    l2965 0CEB                      l2973 0D1C                      l2957 0CD8  
                    l2949 0CC1                      l2799 0A0B                      l2895 0C37  
                    l2887 0C20                      l2879 0BF4                      l2991 0D5A  
                    l2983 0D48                      l2967 0CFC                      l2959 0CD9  
                    l2897 0C3D                      l2889 0C26                      l2993 0D60  
                    l2985 0D4C                      l2977 0D1D                      l2969 0D07  
                    l2995 0D64                      l2987 0D50                      l2979 0D3C  
                    l2989 0D55                      l2999 0D66                      STR_1 081A  
                    STR_2 0833                      STR_3 0833                      STR_4 082B  
                    STR_5 0830                      STR_6 0830                      u2200 0B3B  
                    u2201 0B3A                      u2210 0B45                      u2211 0B44  
                    u2230 0B58                      u2231 0B57                      u2215 0B41  
                    u3200 0A02                      u2240 0B5D                      u2160 0B13  
                    u2400 0E6C                      u3201 0A01                      u2241 0B5C  
                    u2225 0B4C                      u2161 0B12                      u2401 0E6B  
                    u2170 0B1E                      u2410 0E87                      u4010 0648  
                    u3210 07BF                      u2171 0B1D                      u2411 0E86  
                    u4011 0647                      u3211 07BE                      u2180 0B29  
                    u2500 0F32                      u2420 0EA5                      u3300 0A1F  
                    u4100 06E4                      u4020 064D                      u2181 0B28  
                    u2501 0F31                      u2421 0EA4                      u3301 0A1E  
                    u4101 06E3                      u4021 064C                      u4005 0637  
                    u2430 0EDF                      u2350 0E34                      u4030 0661  
                    u4110 0701                      u3230 07D1                      u2431 0EDE  
                    u2351 0E33                      u4031 0660                      u4111 0700  
                    u3231 07D0                      u2600 0F9C                      u2520 0F41  
                    u2360 0E3A                      u3320 0A33                      u4040 0668  
                    u4200 077E                      u4120 0705                      u1720 0AD8  
                    u3400 0997                      u2521 0F40                      u2361 0E39  
                    u3321 0A32                      u4041 0667                      u4201 077D  
                    u4121 0704                      u3225 07C3                      u1721 0AD7  
                    u3401 0996                      u2610 0FB9                      u2370 0E3F  
                    u4050 066E                      u4210 0782                      u4130 0725  
                    u3250 07E2                      u3330 0BF4                      u3410 0CCC  
                    u2195 0B2D                      u2611 0FB8                      u2515 0F36  
                    u2371 0E3E                      u3315 0A26                      u4051 066D  
                    u4211 0781                      u4131 0724                      u3251 07E1  
                    u3331 0BF3                      u3411 0CCB                      u2620 0FD6  
                    u2540 0F55                      u2460 0EF5                      u2380 0E61  
                    u4060 0680                      u4220 0797                      u1740 0AEA  
                    u3340 0C26                      u3500 0DB1                      u3420 0CE5  
                    u2621 0FD5                      u2605 0F97                      u2541 0F54  
                    u2461 0EF4                      u2445 0EE1                      u2381 0E60  
                    u4061 067F                      u3245 07D2                      u1741 0AE9  
                    u3341 0C25                      u3501 0DB0                      u3421 0CE4  
                    u2630 0FED                      u2550 0F5A                      u2390 0E67  
                    u4070 068F                      u4230 07A7                      u4150 0746  
                    u3270 07F6                      u1750 0AF4                      u3350 0C3D  
                    u3510 0DBF                      u3430 0D1B                      u2631 0FEC  
                    u2615 0FB5                      u2551 0F59                      u2535 0F44  
                    u2455 0EEA                      u2391 0E66                      u4231 07A6  
                    u4151 0745                      u3271 07F5                      u3255 07DE  
                    u1751 0AF3                      u1735 0ADC                      u3351 0C3C  
                    u3511 0DBE                      u3431 0D1A                      u3360 09E5  
                    u3600 0BAD                      u2560 0F6E                      u2480 0F11  
                    u4080 06AC                      u4240 07AB                      u3280 0947  
                    u3520 0E0C                      u3440 0D4C                      u3361 09E4  
                    u3601 0BAC                      u2625 0FD2                      u2561 0F6D  
                    u2481 0F10                      u4081 06AB                      u4241 07AA  
                    u4225 0792                      u4145 0738                      u3265 07EA  
                    u3281 0946                      u3521 0E0B                      u3505 0DAD  
                    u3441 0D4B                      u2570 0F75                      u2490 0F2A  
                    u4090 06C6                      u4170 0768                      u1770 0B07  
                    u3370 099F                      u3290 0954                      u3530 0E1E  
                    u3450 0D5A                      u4250 0061                      u4307 0A07  
                    u2571 0F74                      u2491 0F29                      u2475 0EF8  
                    u4091 06C5                      u4075 068A                      u4171 0767  
                    u1771 0B06                      u1755 0AF0                      u3371 099E  
                    u3291 0953                      u3531 0E1D                      u3451 0D59  
                    u4251 0060                      u3620 0BC1                      u3540 0B6E  
                    u2580 0F7B                      u3700 0C9C                      u1780 08FA  
                    u3460 0D60                      u3380 0A4C                      u4260 01D1  
                    u4317 08EA                      u3621 0BC0                      u3605 0BA9  
                    u3541 0B6D                      u2581 0F7A                      u2485 0F0D  
                    u4085 06A8                      u3701 0C9B                      u4165 075A  
                    u1765 0AFB                      u1781 08F9                      u3461 0D5F  
                    u3381 0A4B                      u4261 01D0                      u3630 0BC6  
                    u3550 0B79                      u2590 0F8D                      u4190 0778  
                    u1790 0900                      u3470 0D81                      u3390 0A62  
                    u3631 0BC5                      u3615 0BB5                      u3551 0B78  
                    u2591 0F8C                      u4095 06C2                      u4191 0777  
                    u1791 08FF                      u3471 0D80                      u3391 0A61  
                    u3560 0B8A                      u3800 03F7                      u3720 0CAD  
                    u3640 0C4F                      u3480 0D8C                      u3561 0B89  
                    u3801 03F6                      u3721 0CAC                      u3641 0C4E  
                    u4185 076D                      u3481 0D8B                      u3810 03FC  
                    u3730 0CB2                      u3650 0C66                      u3490 0D9C  
                    u3811 03FB                      u3731 0CB1                      u3715 0C9F  
                    u3491 0D9B                      u3475 0D7D                      u3580 0B9C  
                    u3740 03A9                      u3660 0C7C                      u3581 0B9B  
                    u3901 054A                      u3821 044D                      u3741 03A8  
                    u3661 0C7B                      u4277 0053                      u3902 0551  
                    u3822 0454                      u3750 03AF                      u3670 0C83  
                    u3575 0B8E                      u3911 0577                      u3903 0558  
                    u3831 0469                      u3823 045B                      u3751 03AE  
                    u3671 0C82                      u3655 0C61                      u3495 0D98  
                    u4287 01C3                      u3912 057E                      u3832 0470  
                    u3760 03B4                      u4297 09F5                      u3921 05A4  
                    u3913 0585                      u3841 0495                      u3833 0477  
                    u3761 03B3                      u3930 05CE                      u3922 05AB  
                    u3842 049C                      u3770 03D5                      u3690 0C95  
                    u3595 0B9D                      u3923 05B2                      u3851 04B1  
                    u3843 04A3                      u3771 03D4                      u3691 0C94  
                    u3852 04B8                      u3780 03DB                      u3941 05DA  
                    u3853 04BF                      u3781 03DA                      u3685 0C85  
                    u3950 05F6                      u3942 05E1                      u3790 03E0  
                    u3943 05E8                      u3935 05C9                      u3871 04E7  
                    u3791 03DF                      u3872 04EE                      u3961 0602  
                    u3881 0514                      u3873 04F5                      u3865 04C1  
                    u3962 0609                      u3882 051B                      u3963 0610  
                    u3955 05F1                      u3883 0522                      u3990 0634  
                    u3991 0633                      u3975 0612                      u3895 0524  
                    u3985 0629              __CFG_WRT$OFF 0000                      _main 0904  
                    _itoa 0998                      btemp 007E                      _utoa 0BD0  
                    start 000C             __CFG_IESO$OFF 0000           ___fldiv@new_exp 005A  
      __size_of_LCD_ready 0029         ___bmul@multiplier 0021                     ??_ADC 00DD  
                   ??_ISR 0070             ___fltol@sign1 0051                     ?_main 0070  
         __end_of___fldiv 1000                     ?_itoa 0035           __end_of___awdiv 0BD0  
           __CFG_WDTE$OFF 0000           __end_of___awmod 0B67           __end_of___flmul 06F9  
         __end_of___fltol 0CBE                     _ANSEL 0188                     ?_utoa 002C  
         ___awdiv@divisor 0020           __end_of___lwdiv 07FB                     i1l190 0A91  
         __end_of___lwmod 0B0C                     i1l189 0A92           ___awdiv@counter 0024  
                   _RCREG 001A                     _RCSTA 0018                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     _TXREG 0019                     _TXSTA 0098  
          __CFG_FCMEN$OFF 0000           __end_of_dpowers 081A           __end_of_isdigit 0904  
                   _setup 0A99            __CFG_BOREN$OFF 0000                     pclath 000A  
                   utoa@c 0033                     utoa@v 0031                     status 0003  
                   wtemp0 007E           __end_of_sprintf 0E23            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0917              __end_of_itoa 09BE  
            __end_of_utoa 0C42                    ??_main 0076                    ??_itoa 0039  
                  ??_utoa 0030                 ??_LCD_cmd 0076                 ??_LCD_lat 0074  
               ??_LCD_dwr 0076                 ??_LCD_msg 0076         __end_of_LCD_ready 0A0F  
                  _ADC1_A 006E                    _ADC1_B 006C                    _ADC2_A 0066  
                  _ADC2_B 00AE                    _ADRESH 001E          ___awdiv@dividend 0022  
                  ?_setup 0070                    _ANSELH 0189                    i1l2741 0A78  
                  i1l2735 0A63                    i1l2745 0A81                    i1l2737 0A69  
                  i1l2747 0A88                    i1l2739 0A71                    u317_20 0A69  
                  u317_21 0A68                    u318_20 0A78                    u318_21 0A77  
                  u319_20 0A88                    u319_21 0A87                    _SPBRGH 009A  
        __end_of___xxtofl 07B5            __CFG_PWRTE$OFF 0000                    ___bmul 093F  
               ??___fldiv 0050                 ??___awdiv 0074                 ??___awmod 0075  
               ??___flmul 0036                 ??___fltol 004C                 ??___lwdiv 0074  
               ??___lwmod 0075                    _inicio 0956          ___awdiv@quotient 0026  
         ___awmod@divisor 0028           ___awmod@counter 002C                    _strcat 0A38  
                  _strcpy 0975                 ??_isdigit 0074        __size_of__Umul8_16 0029  
                  saved_w 007E                 ??_sprintf 002F              ___xxtofl@arg 002A  
            ___xxtofl@exp 0029              ___xxtofl@val 0020   __end_of__initialization 0024  
              ___fltol@f1 0048       ___bmul@multiplicand 0074            __pcstackCOMMON 0070  
           __end_of_setup 0AD0                   ??_setup 0074                __pbssBANK0 0062  
              __pbssBANK1 00A0         __end_of__Umul8_16 0A38                __pmaintext 0904  
                 ?___bmul 0074                __pintentry 0004                   ?_inicio 0070  
                 ?_strcat 0074                   ?_strcpy 0074                   _LCD_cmd 0917  
                 _LCD_lat 08E3                 ?___xxtofl 0020                   _LCD_dwr 092B  
                 _LCD_msg 09BE                 _ADCACHARA 00D8                 _ADCBCHARB 00D3  
               _ADCCCHARC 00CE                __stringtab 0800           __size_of___bmul 0017  
                 ___fldiv 0E23                   ___awdiv 0B67                   ___awmod 0B0C  
                 ___flmul 0398                   ___fltol 0C42                   ___lwdiv 07B5  
                 ___lwmod 0AD0           __size_of_inicio 001F                   __ptext1 0A99  
                 __ptext2 0956                   __ptext3 0028                   __ptext4 0975  
                 __ptext5 0A38                   __ptext6 0CBE                   __ptext7 08F2  
                 __ptext8 093F                   __ptext9 0998              __size_of_ADC 0370  
         __size_of_strcat 002B           __size_of_strcpy 0023              __size_of_ISR 0036  
                 _dpowers 0810                   _isdigit 08F2                ??___xxtofl 0024  
        ___awmod@dividend 002A                   _sprintf 0CBE                   clrloop0 08DC  
                 _voltage 00A4      end_of_initialization 0024                 _LCD_ready 09E6  
                 itoa@buf 003B                   itoa@val 0035                 _RCSTAbits 0018  
                 utoa@buf 0034                   utoa@val 002C                 _PORTAbits 0005  
               _PORTCbits 0007             ___xxtofl@sign 0028               ___fldiv@grs 005C  
             ___fldiv@rem 0055                ?_LCD_ready 0070               ___flmul@grs 003D  
               _TXSTAbits 0098            __end_of___bmul 0956               _BAUDCTLbits 0187  
          __end_of_inicio 0975            __end_of_strcat 0A63            __end_of_strcpy 0998  
     start_initialization 000F               __end_of_ADC 0398               __end_of_ISR 0A99  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??___bmul 0075                 __Umul8_16 0A0F  
                ??_inicio 0076                  ??_strcat 0075                  ??_strcpy 0075  
               ___fldiv@a 0048                 ___fldiv@b 004C                  ?_LCD_cmd 0070  
                ?_LCD_lat 0070                  ?_LCD_dwr 0070                  ?_LCD_msg 0021  
               ___flmul@a 0032                 ___flmul@b 002E               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00DD  
       __size_of___xxtofl 00BC              _isdigit$1064 0074                  LCD_cmd@x 0020  
                LCD_dwr@x 0020                  LCD_msg@c 0021               ??_LCD_ready 0074  
             sprintf@flag 0033               sprintf@prec 0037          ___lwdiv@dividend 0022  
                ?___fldiv 0048                  ?___awdiv 0020                  ?___awmod 0028  
                ?___flmul 002E                  ?___fltol 0048                ?__Umul8_16 0074  
                ?___lwdiv 0020                  ?___lwmod 0027                 __pstrings 0800  
                ?_isdigit 0070          ___lwdiv@quotient 0025                  ?_sprintf 002C  
          __size_of_setup 0037         interrupt_function 0004        _analogic_digital_a 0079  
      _analogic_digital_b 0078                 clear_ram0 08DB                  _PIE1bits 008C  
              _ADCAACHARA 00C4                _ADCABCHARB 00BF                _ADCACCHARC 00BA  
                _PIR1bits 000C                  _POINTERA 00C9                  _POINTERB 00B5  
                _TERMINAL 00B0                _ADCON0bits 001F               __stringbase 080F  
              _ADCON1bits 009F          __size_of_LCD_cmd 0014          __size_of_LCD_lat 000F  
        __size_of_LCD_dwr 0014          __size_of_LCD_msg 0028               ??__Umul8_16 0020  
        __size_of___fldiv 01DD          __size_of___awdiv 0069          __size_of___awmod 005B  
        __size_of___flmul 0361          __size_of___fltol 007C          __size_of___lwdiv 0046  
        __size_of___lwmod 003C        __end_of__stringtab 0810                sprintf@val 0035  
                ___xxtofl 06F9                strcat@from 0074          __size_of_isdigit 0012  
         ___lwdiv@divisor 0020           ___lwdiv@counter 0024                  __ptext10 0BD0  
                __ptext11 0AD0                  __ptext20 09BE                  __ptext12 07B5  
                __ptext21 092B                  __ptext13 06F9                  __ptext22 0917  
                __ptext14 0C42                  __ptext23 09E6                  __ptext15 0398  
                __ptext24 08E3                  __ptext16 0A0F                  __ptext25 0A63  
                __ptext17 0E23                  __ptext18 0B0C                  __ptext19 0B67  
       __CFG_BOR4V$BOR40V 0000          __size_of_sprintf 0165                strcpy@from 0074  
           __size_of_main 0013             __size_of_itoa 0026             __size_of_utoa 0072  
                _voltageb 00A0                _INTCONbits 000B                  itoa@base 0037  
                isdigit@c 0075                  intlevel1 0000                 sprintf@ap 0032  
               sprintf@sp 0034          ___lwmod@dividend 0029                 stringcode 080A  
              _OSCCONbits 008F                  utoa@base 002E    __Umul8_16@multiplicand 0074  
                sprintf@c 0038                  sprintf@f 002C                  strcat@cp 0021  
                strcat@to 0020           ___lwmod@divisor 0027                  strcpy@cp 0020  
                strcpy@to 0021           ___lwmod@counter 002B                  stringdir 080A  
                stringtab 0800      __Umul8_16@multiplier 0026         __Umul8_16@product 0022  
