

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 08 12:36:26 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  001F                     _ADCON0bits	set	31
   369  001F                     _ADCON0	set	31
   370  0005                     _PORTAbits	set	5
   371  0008                     _PORTDbits	set	8
   372  000B                     _INTCONbits	set	11
   373  0018                     _RCSTAbits	set	24
   374  0009                     _PORTE	set	9
   375  0008                     _PORTD	set	8
   376  0006                     _PORTB	set	6
   377  0005                     _PORTA	set	5
   378  001A                     _RCREG	set	26
   379  0019                     _TXREG	set	25
   380  000C                     _PIR1bits	set	12
   381  009F                     _ADCON1	set	159
   382  008C                     _PIE1bits	set	140
   383  0099                     _SPBRG	set	153
   384  0089                     _TRISE	set	137
   385  0088                     _TRISD	set	136
   386  0086                     _TRISB	set	134
   387  0085                     _TRISA	set	133
   388  0098                     _TXSTAbits	set	152
   389  0189                     _ANSELH	set	393
   390  0188                     _ANSEL	set	392
   391                           
   392                           	psect	strings
   393  0000'                    __pstrings:	
   394  0000'                    stringtab:	
   395  0000'                    __stringtab:	
   396  0000'                    stringcode:	
   397                           ;	String table - string pointers are 1 byte each
   398                           
   399  0000'                    stringdir:	
   400  0000' 3000'              	movlw	high stringdir
   401  0001' 008A               	movwf	10
   402  0002' 0804               	movf	4,w
   403  0003' 0A84               	incf	4,f
   404  0004' 0782               	addwf	2,f
   405  0005'                    __stringbase:	
   406  0005' 3400               	retlw	0
   407  0006'                    __end_of__stringtab:	
   408  0006'                    STR_3:	
   409  0006' 3444               	retlw	68	;'D'
   410  0007' 3465               	retlw	101	;'e'
   411  0008' 3476               	retlw	118	;'v'
   412  0009' 3465               	retlw	101	;'e'
   413  000A' 346C               	retlw	108	;'l'
   414  000B' 346F               	retlw	111	;'o'
   415  000C' 3470               	retlw	112	;'p'
   416  000D' 3465               	retlw	101	;'e'
   417  000E' 3464               	retlw	100	;'d'
   418  000F' 3420               	retlw	32	;' '
   419  0010' 3442               	retlw	66	;'B'
   420  0011' 3479               	retlw	121	;'y'
   421  0012' 3400               	retlw	0
   422  0013'                    STR_4:	
   423  0013' 3465               	retlw	101	;'e'
   424  0014' 346C               	retlw	108	;'l'
   425  0015' 3465               	retlw	101	;'e'
   426  0016' 3463               	retlw	99	;'c'
   427  0017' 3474               	retlw	116	;'t'
   428  0018' 3472               	retlw	114	;'r'
   429  0019' 346F               	retlw	111	;'o'
   430  001A' 3453               	retlw	83	;'S'
   431  001B' 346F               	retlw	111	;'o'
   432  001C' 346D               	retlw	109	;'m'
   433  001D' 3465               	retlw	101	;'e'
   434  001E' 3400               	retlw	0
   435  001F'                    STR_2:	
   436  001F' 3441               	retlw	65	;'A'
   437  0020' 3464               	retlw	100	;'d'
   438  0021' 3469               	retlw	105	;'i'
   439  0022' 346F               	retlw	111	;'o'
   440  0023' 3473               	retlw	115	;'s'
   441  0024' 3420               	retlw	32	;' '
   442  0025' 344D               	retlw	77	;'M'
   443  0026' 3475               	retlw	117	;'u'
   444  0027' 346E               	retlw	110	;'n'
   445  0028' 3464               	retlw	100	;'d'
   446  0029' 346F               	retlw	111	;'o'
   447  002A' 3400               	retlw	0
   448  002B'                    STR_1:	
   449  002B' 3448               	retlw	72	;'H'
   450  002C' 346F               	retlw	111	;'o'
   451  002D' 346C               	retlw	108	;'l'
   452  002E' 3461               	retlw	97	;'a'
   453  002F' 3420               	retlw	32	;' '
   454  0030' 344D               	retlw	77	;'M'
   455  0031' 3475               	retlw	117	;'u'
   456  0032' 346E               	retlw	110	;'n'
   457  0033' 3464               	retlw	100	;'d'
   458  0034' 346F               	retlw	111	;'o'
   459  0035' 3400               	retlw	0
   460                           
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  0000'                    start_initialization:	
   465  0000'                    __initialization:	
   466                           
   467                           ; Clear objects allocated to COMMON
   468  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   469  0001'                    end_of_initialization:	
   470                           ;End of C runtime variable initialization code
   471                           
   472  0001'                    __end_of__initialization:	
   473  0001' 0183               	clrf	3
   474  0002' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   475                           
   476                           	psect	bssCOMMON
   477  0000'                    __pbssCOMMON:	
   478  0000'                    _counter:	
   479  0000'                    	ds	1
   480                           
   481                           	psect	cstackCOMMON
   482  0000'                    __pcstackCOMMON:	
   483  0000'                    ?_setup:	
   484  0000'                    ?_UART_Init:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0000'                    ?_Lcd_Clear:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0000'                    ?_Lcd_Write_String:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0000'                    ?_Lcd_Shift_Left:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0000'                    ??_Lcd_Shift_Left:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0000'                    ?_Lcd_Shift_Right:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0000'                    ??_Lcd_Shift_Right:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0000'                    ?_Lcd_Write_Char:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0000'                    ?_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0000'                    ??_ISR:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0000'                    ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0000'                    ?_Lcd_Port:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0000'                    ?_Lcd_Cmd:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0000'                    Lcd_Write_Char@a:	
   524                           ; 1 bytes @ 0x0
   525                           
   526                           
   527                           ; 1 bytes @ 0x0
   528  0000'                    	ds	2
   529  0002'                    ??_setup:	
   530  0002'                    ??_UART_Init:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0002'                    ??_Lcd_Port:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  0002'                    Lcd_Port@a:	
   537                           ; 1 bytes @ 0x2
   538                           
   539                           
   540                           ; 1 bytes @ 0x2
   541  0002'                    	ds	1
   542  0003'                    ??_Lcd_Write_Char:	
   543  0003'                    ??_Lcd_Cmd:	
   544                           ; 1 bytes @ 0x3
   545                           
   546                           
   547                           ; 1 bytes @ 0x3
   548  0003'                    	ds	1
   549  0004'                    Lcd_Write_Char@temp:	
   550                           
   551                           ; 1 bytes @ 0x4
   552  0004'                    	ds	1
   553  0005'                    ??_Lcd_Write_String:	
   554  0005'                    Lcd_Cmd@a:	
   555                           ; 1 bytes @ 0x5
   556                           
   557  0005'                    Lcd_Write_String@i:	
   558                           ; 1 bytes @ 0x5
   559                           
   560                           
   561                           ; 2 bytes @ 0x5
   562  0005'                    	ds	1
   563  0006'                    ??_Lcd_Clear:	
   564  0006'                    ?_Lcd_Set_Cursor:	
   565                           ; 1 bytes @ 0x6
   566                           
   567  0006'                    Lcd_Set_Cursor@b:	
   568                           ; 1 bytes @ 0x6
   569                           
   570                           
   571                           ; 1 bytes @ 0x6
   572  0006'                    	ds	1
   573  0007'                    ??_Lcd_Set_Cursor:	
   574  0007'                    Lcd_Write_String@a:	
   575                           ; 1 bytes @ 0x7
   576                           
   577                           
   578                           ; 1 bytes @ 0x7
   579  0007'                    	ds	1
   580  0008'                    Lcd_Set_Cursor@a:	
   581                           
   582                           ; 1 bytes @ 0x8
   583  0008'                    	ds	1
   584  0009'                    Lcd_Set_Cursor@temp:	
   585                           
   586                           ; 1 bytes @ 0x9
   587  0009'                    	ds	1
   588                           
   589                           	psect	cstackBANK0
   590  0000'                    __pcstackBANK0:	
   591  0000'                    ??_main:	
   592                           
   593                           ; 1 bytes @ 0x0
   594  0000'                    	ds	3
   595  0003'                    main@a:	
   596                           
   597                           ; 2 bytes @ 0x3
   598  0003'                    	ds	2
   599                           
   600                           	psect	maintext
   601  0000'                    __pmaintext:	
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 84 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  a               2    3[BANK0 ] unsigned int 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : B00/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       2       0       0       0
   623 ;;      Temps:          0       3       0       0       0
   624 ;;      Totals:         0       5       0       0       0
   625 ;;Total ram usage:        5 bytes
   626 ;; Hardware stack levels required when called:    4
   627 ;; This function calls:
   628 ;;		_Lcd_Clear
   629 ;;		_Lcd_Set_Cursor
   630 ;;		_Lcd_Shift_Left
   631 ;;		_Lcd_Shift_Right
   632 ;;		_Lcd_Write_Char
   633 ;;		_Lcd_Write_String
   634 ;;		_UART_Init
   635 ;;		_setup
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _main
   643  0000'                    _main:	
   644  0000'                    l1057:	
   645                           ;incstack = 0
   646                           ; Regs used in _main: [allreg]
   647                           
   648                           
   649                           ;main.c: 85:     unsigned int a;;main.c: 86:     setup();
   650  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
   651                           
   652                           ;main.c: 88:     UART_Init();
   653  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_UART_Init
   654  000A'                    l70:	
   655                           ;main.c: 92:     while (1) {
   656                           
   657                           
   658                           ;main.c: 94:         Lcd_Clear();
   659  000A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
   660                           
   661                           ;main.c: 96:         Lcd_Set_Cursor(1, 1);
   662  000F' 0186'              	clrf	Lcd_Set_Cursor@b
   663  0010' 0A86'              	incf	Lcd_Set_Cursor@b,f
   664  0011' 3001               	movlw	1
   665  0012' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   666  0017'                    l1059:	
   667                           
   668                           ;main.c: 97:         Lcd_Write_String("Hola Mundo");
   669  0017' 3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   670  0018' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   671  001D'                    l1061:	
   672                           
   673                           ;main.c: 100:         Lcd_Set_Cursor(2, 1);
   674  001D' 0186'              	clrf	Lcd_Set_Cursor@b
   675  001E' 0A86'              	incf	Lcd_Set_Cursor@b,f
   676  001F' 3002               	movlw	2
   677  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   678                           
   679                           ;main.c: 101:         Lcd_Write_String("Adios Mundo");
   680  0025' 301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   681  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   682  002B'                    l1063:	
   683                           
   684                           ;main.c: 102:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   685  002B' 3015               	movlw	21
   686  002C' 1283               	bcf	3,5	;RP0=0, select bank0
   687  002D' 1303               	bcf	3,6	;RP1=0, select bank0
   688  002E' 0082'              	movwf	??_main+2
   689  002F' 304B               	movlw	75
   690  0030' 0081'              	movwf	??_main+1
   691  0031' 30BD               	movlw	189
   692  0032' 0080'              	movwf	??_main
   693  0033'                    u347:	
   694  0033' 0B80'              	decfsz	??_main,f
   695  0034' 2800'              	goto	u347
   696  0035' 0B81'              	decfsz	??_main+1,f
   697  0036' 2800'              	goto	u347
   698  0037' 0B82'              	decfsz	??_main+2,f
   699  0038' 2800'              	goto	u347
   700  0039' 2800'              	nop2
   701  003A'                    l1065:	
   702                           
   703                           ;main.c: 103:         Lcd_Clear();
   704  003A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
   705  003F'                    l1067:	
   706                           
   707                           ;main.c: 106:         Lcd_Set_Cursor(1, 1);
   708  003F' 0186'              	clrf	Lcd_Set_Cursor@b
   709  0040' 0A86'              	incf	Lcd_Set_Cursor@b,f
   710  0041' 3001               	movlw	1
   711  0042' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   712  0047'                    l1069:	
   713                           
   714                           ;main.c: 107:         Lcd_Write_String("Developed By");
   715  0047' 3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   716  0048' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   717  004D'                    l1071:	
   718                           
   719                           ;main.c: 108:         Lcd_Set_Cursor(2, 1);
   720  004D' 0186'              	clrf	Lcd_Set_Cursor@b
   721  004E' 0A86'              	incf	Lcd_Set_Cursor@b,f
   722  004F' 3002               	movlw	2
   723  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   724  0055'                    l1073:	
   725                           
   726                           ;main.c: 109:         Lcd_Write_String("electroSome");
   727  0055' 300E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   728  0056' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_String
   729  005B'                    l1075:	
   730                           
   731                           ;main.c: 110:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   732  005B' 3015               	movlw	21
   733  005C' 1283               	bcf	3,5	;RP0=0, select bank0
   734  005D' 1303               	bcf	3,6	;RP1=0, select bank0
   735  005E' 0082'              	movwf	??_main+2
   736  005F' 304B               	movlw	75
   737  0060' 0081'              	movwf	??_main+1
   738  0061' 30BD               	movlw	189
   739  0062' 0080'              	movwf	??_main
   740  0063'                    u357:	
   741  0063' 0B80'              	decfsz	??_main,f
   742  0064' 2800'              	goto	u357
   743  0065' 0B81'              	decfsz	??_main+1,f
   744  0066' 2800'              	goto	u357
   745  0067' 0B82'              	decfsz	??_main+2,f
   746  0068' 2800'              	goto	u357
   747  0069' 2800'              	nop2
   748  006A'                    l1077:	
   749                           
   750                           ;main.c: 111:         Lcd_Clear();
   751  006A' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
   752  006F'                    l1079:	
   753                           
   754                           ;main.c: 118:         for (a = 0; a < 15; a++) {
   755  006F' 1283               	bcf	3,5	;RP0=0, select bank0
   756  0070' 1303               	bcf	3,6	;RP1=0, select bank0
   757  0071' 0183'              	clrf	main@a
   758  0072' 0184'              	clrf	main@a+1
   759  0073'                    l1085:	
   760                           
   761                           ;main.c: 119:             _delay((unsigned long)((300)*(8000000/4000.0)));
   762  0073' 3004               	movlw	4
   763  0074' 1283               	bcf	3,5	;RP0=0, select bank0
   764  0075' 1303               	bcf	3,6	;RP1=0, select bank0
   765  0076' 0082'              	movwf	??_main+2
   766  0077' 300C               	movlw	12
   767  0078' 0081'              	movwf	??_main+1
   768  0079' 3033               	movlw	51
   769  007A' 0080'              	movwf	??_main
   770  007B'                    u367:	
   771  007B' 0B80'              	decfsz	??_main,f
   772  007C' 2800'              	goto	u367
   773  007D' 0B81'              	decfsz	??_main+1,f
   774  007E' 2800'              	goto	u367
   775  007F' 0B82'              	decfsz	??_main+2,f
   776  0080' 2800'              	goto	u367
   777  0081'                    l1087:	
   778                           
   779                           ;main.c: 120:             Lcd_Shift_Left();
   780  0081' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Shift_Left
   781  0086'                    l1089:	
   782                           
   783                           ;main.c: 121:         }
   784  0086' 3001               	movlw	1
   785  0087' 1283               	bcf	3,5	;RP0=0, select bank0
   786  0088' 1303               	bcf	3,6	;RP1=0, select bank0
   787  0089' 0783'              	addwf	main@a,f
   788  008A' 1803               	skipnc
   789  008B' 0A84'              	incf	main@a+1,f
   790  008C' 3000               	movlw	0
   791  008D' 0784'              	addwf	main@a+1,f
   792  008E'                    l1091:	
   793  008E' 3000               	movlw	0
   794  008F' 0204'              	subwf	main@a+1,w
   795  0090' 300F               	movlw	15
   796  0091' 1903               	skipnz
   797  0092' 0203'              	subwf	main@a,w
   798  0093' 1C03               	skipc
   799  0094' 2800'              	goto	u321
   800  0095' 2800'              	goto	u320
   801  0096'                    u321:	
   802  0096' 2800'              	goto	l1085
   803  0097'                    u320:	
   804  0097'                    l1093:	
   805                           
   806                           ;main.c: 123:         for (a = 0; a < 15; a++) {
   807  0097' 0183'              	clrf	main@a
   808  0098' 0184'              	clrf	main@a+1
   809  0099'                    l1099:	
   810                           
   811                           ;main.c: 124:             _delay((unsigned long)((300)*(8000000/4000.0)));
   812  0099' 3004               	movlw	4
   813  009A' 1283               	bcf	3,5	;RP0=0, select bank0
   814  009B' 1303               	bcf	3,6	;RP1=0, select bank0
   815  009C' 0082'              	movwf	??_main+2
   816  009D' 300C               	movlw	12
   817  009E' 0081'              	movwf	??_main+1
   818  009F' 3033               	movlw	51
   819  00A0' 0080'              	movwf	??_main
   820  00A1'                    u377:	
   821  00A1' 0B80'              	decfsz	??_main,f
   822  00A2' 2800'              	goto	u377
   823  00A3' 0B81'              	decfsz	??_main+1,f
   824  00A4' 2800'              	goto	u377
   825  00A5' 0B82'              	decfsz	??_main+2,f
   826  00A6' 2800'              	goto	u377
   827  00A7'                    l1101:	
   828                           
   829                           ;main.c: 125:             Lcd_Shift_Right();
   830  00A7' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Shift_Right
   831  00AC'                    l1103:	
   832                           
   833                           ;main.c: 126:         }
   834  00AC' 3001               	movlw	1
   835  00AD' 1283               	bcf	3,5	;RP0=0, select bank0
   836  00AE' 1303               	bcf	3,6	;RP1=0, select bank0
   837  00AF' 0783'              	addwf	main@a,f
   838  00B0' 1803               	skipnc
   839  00B1' 0A84'              	incf	main@a+1,f
   840  00B2' 3000               	movlw	0
   841  00B3' 0784'              	addwf	main@a+1,f
   842  00B4'                    l1105:	
   843  00B4' 3000               	movlw	0
   844  00B5' 0204'              	subwf	main@a+1,w
   845  00B6' 300F               	movlw	15
   846  00B7' 1903               	skipnz
   847  00B8' 0203'              	subwf	main@a,w
   848  00B9' 1C03               	skipc
   849  00BA' 2800'              	goto	u331
   850  00BB' 2800'              	goto	u330
   851  00BC'                    u331:	
   852  00BC' 2800'              	goto	l1099
   853  00BD'                    u330:	
   854  00BD'                    l1107:	
   855                           
   856                           ;main.c: 128:         Lcd_Clear();
   857  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Clear
   858                           
   859                           ;main.c: 129:         Lcd_Set_Cursor(2, 1);
   860  00C2' 0186'              	clrf	Lcd_Set_Cursor@b
   861  00C3' 0A86'              	incf	Lcd_Set_Cursor@b,f
   862  00C4' 3002               	movlw	2
   863  00C5' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Set_Cursor
   864                           
   865                           ;main.c: 130:         Lcd_Write_Char('M');
   866  00CA' 304D               	movlw	77
   867  00CB' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
   868                           
   869                           ;main.c: 131:         Lcd_Write_Char('S');
   870  00D0' 3053               	movlw	83
   871  00D1' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
   872  00D6'                    l1109:	
   873                           
   874                           ;main.c: 132:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   875  00D6' 3015               	movlw	21
   876  00D7' 1283               	bcf	3,5	;RP0=0, select bank0
   877  00D8' 1303               	bcf	3,6	;RP1=0, select bank0
   878  00D9' 0082'              	movwf	??_main+2
   879  00DA' 304B               	movlw	75
   880  00DB' 0081'              	movwf	??_main+1
   881  00DC' 30BD               	movlw	189
   882  00DD' 0080'              	movwf	??_main
   883  00DE'                    u387:	
   884  00DE' 0B80'              	decfsz	??_main,f
   885  00DF' 2800'              	goto	u387
   886  00E0' 0B81'              	decfsz	??_main+1,f
   887  00E1' 2800'              	goto	u387
   888  00E2' 0B82'              	decfsz	??_main+2,f
   889  00E3' 2800'              	goto	u387
   890  00E4' 2800'              	nop2
   891  00E5' 2800'              	goto	l70
   892  00E6' 120A' 118A' 2800'  	ljmp	start
   893  00E9'                    __end_of_main:	
   894                           
   895                           	psect	text1
   896  0000'                    __ptext1:	
   897 ;; *************** function _setup *****************
   898 ;; Defined at:
   899 ;;		line 140 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function _setup
   929  0000'                    _setup:	
   930  0000'                    l1013:	
   931                           ;incstack = 0
   932                           ; Regs used in _setup: [wreg+status,2]
   933                           
   934                           
   935                           ;main.c: 142:     ANSEL = 0;
   936  0000' 1683               	bsf	3,5	;RP0=1, select bank3
   937  0001' 1703               	bsf	3,6	;RP1=1, select bank3
   938  0002' 0188               	clrf	8	;volatile
   939  0003'                    l1015:	
   940                           
   941                           ;main.c: 143:     ANSELH = 0b00000001;
   942  0003' 3001               	movlw	1
   943  0004' 0089               	movwf	9	;volatile
   944  0005'                    l1017:	
   945                           
   946                           ;main.c: 144:     TRISA = 0;
   947  0005' 1683               	bsf	3,5	;RP0=1, select bank1
   948  0006' 1303               	bcf	3,6	;RP1=0, select bank1
   949  0007' 0185               	clrf	5	;volatile
   950  0008'                    l1019:	
   951                           
   952                           ;main.c: 145:     PORTA = 0;
   953  0008' 1283               	bcf	3,5	;RP0=0, select bank0
   954  0009' 1303               	bcf	3,6	;RP1=0, select bank0
   955  000A' 0185               	clrf	5	;volatile
   956  000B'                    l1021:	
   957                           
   958                           ;main.c: 146:     TRISB = 0b00000111;
   959  000B' 3007               	movlw	7
   960  000C' 1683               	bsf	3,5	;RP0=1, select bank1
   961  000D' 1303               	bcf	3,6	;RP1=0, select bank1
   962  000E' 0086               	movwf	6	;volatile
   963                           
   964                           ;main.c: 147:     PORTB = 0;
   965  000F' 1283               	bcf	3,5	;RP0=0, select bank0
   966  0010' 1303               	bcf	3,6	;RP1=0, select bank0
   967  0011' 0186               	clrf	6	;volatile
   968                           
   969                           ;main.c: 148:     TRISD = 0;
   970  0012' 1683               	bsf	3,5	;RP0=1, select bank1
   971  0013' 1303               	bcf	3,6	;RP1=0, select bank1
   972  0014' 0188               	clrf	8	;volatile
   973                           
   974                           ;main.c: 149:     PORTD = 0;
   975  0015' 1283               	bcf	3,5	;RP0=0, select bank0
   976  0016' 1303               	bcf	3,6	;RP1=0, select bank0
   977  0017' 0188               	clrf	8	;volatile
   978                           
   979                           ;main.c: 150:     TRISE = 0;
   980  0018' 1683               	bsf	3,5	;RP0=1, select bank1
   981  0019' 1303               	bcf	3,6	;RP1=0, select bank1
   982  001A' 0189               	clrf	9	;volatile
   983                           
   984                           ;main.c: 151:     PORTE = 0;
   985  001B' 1283               	bcf	3,5	;RP0=0, select bank0
   986  001C' 1303               	bcf	3,6	;RP1=0, select bank0
   987  001D' 0189               	clrf	9	;volatile
   988  001E'                    l80:	
   989  001E' 0008               	return
   990  001F'                    __end_of_setup:	
   991                           
   992                           	psect	text2
   993  0000'                    __ptext2:	
   994 ;; *************** function _UART_Init *****************
   995 ;; Defined at:
   996 ;;		line 158 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _UART_Init
  1026  0000'                    _UART_Init:	
  1027  0000'                    l1023:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _UART_Init: [wreg]
  1030                           
  1031                           
  1032                           ;main.c: 161:     TXSTAbits.TX9 = 0;
  1033  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  1034  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  1035  0002' 1318               	bcf	24,6	;volatile
  1036                           
  1037                           ;main.c: 163:     TXSTAbits.TXEN = 1;
  1038  0003' 1698               	bsf	24,5	;volatile
  1039                           
  1040                           ;main.c: 165:     TXSTAbits.SYNC = 0;
  1041  0004' 1218               	bcf	24,4	;volatile
  1042                           
  1043                           ;main.c: 167:     TXSTAbits.BRGH = 0;
  1044  0005' 1118               	bcf	24,2	;volatile
  1045                           
  1046                           ;main.c: 169:     RCSTAbits.SPEN = 1;
  1047  0006' 1283               	bcf	3,5	;RP0=0, select bank0
  1048  0007' 1303               	bcf	3,6	;RP1=0, select bank0
  1049  0008' 1798               	bsf	24,7	;volatile
  1050                           
  1051                           ;main.c: 171:     RCSTAbits.CREN = 1;
  1052  0009' 1618               	bsf	24,4	;volatile
  1053  000A'                    l1025:	
  1054                           
  1055                           ;main.c: 174:     SPBRG = 11;
  1056  000A' 300B               	movlw	11
  1057  000B' 1683               	bsf	3,5	;RP0=1, select bank1
  1058  000C' 1303               	bcf	3,6	;RP1=0, select bank1
  1059  000D' 0099               	movwf	25	;volatile
  1060  000E'                    l1027:	
  1061                           
  1062                           ;main.c: 177:     INTCONbits.GIE = 1;
  1063  000E' 178B               	bsf	11,7	;volatile
  1064  000F'                    l1029:	
  1065                           
  1066                           ;main.c: 179:     INTCONbits.PEIE = 1;
  1067  000F' 170B               	bsf	11,6	;volatile
  1068  0010'                    l1031:	
  1069                           
  1070                           ;main.c: 182:     PIE1bits.RCIE = 1;
  1071  0010' 168C               	bsf	12,5	;volatile
  1072  0011'                    l1033:	
  1073                           
  1074                           ;main.c: 184:     PIR1bits.RCIF = 0;
  1075  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  1076  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  1077  0013' 128C               	bcf	12,5	;volatile
  1078  0014'                    l83:	
  1079  0014' 0008               	return
  1080  0015'                    __end_of_UART_Init:	
  1081                           
  1082                           	psect	text3
  1083  0000'                    __ptext3:	
  1084 ;; *************** function _Lcd_Write_String *****************
  1085 ;; Defined at:
  1086 ;;		line 100 in file "LCD.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  a               1    wreg     PTR unsigned char 
  1089 ;;		 -> STR_4(12), STR_3(13), STR_2(12), STR_1(11), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  a               1    7[COMMON] PTR unsigned char 
  1092 ;;		 -> STR_4(12), STR_3(13), STR_2(12), STR_1(11), 
  1093 ;;  i               2    5[COMMON] int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         3       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0
  1106 ;;      Totals:         3       0       0       0       0
  1107 ;;Total ram usage:        3 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    3
  1110 ;; This function calls:
  1111 ;;		_Lcd_Write_Char
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           
  1118                           ;psect for function _Lcd_Write_String
  1119  0000'                    _Lcd_Write_String:	
  1120                           
  1121                           ;incstack = 0
  1122                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1123                           ;Lcd_Write_String@a stored from wreg
  1124  0000' 0087'              	movwf	Lcd_Write_String@a
  1125  0001'                    l1049:	
  1126                           
  1127                           ;LCD.c: 101:     int i;;LCD.c: 102:     for (i = 0; a[i] != '\0'; i++)
  1128  0001' 0185'              	clrf	Lcd_Write_String@i
  1129  0002' 0186'              	clrf	Lcd_Write_String@i+1
  1130  0003' 2800'              	goto	l1055
  1131  0004'                    l1051:	
  1132                           
  1133                           ;LCD.c: 103:         Lcd_Write_Char(a[i]);
  1134  0004' 0805'              	movf	Lcd_Write_String@i,w
  1135  0005' 0707'              	addwf	Lcd_Write_String@a,w
  1136  0006' 0084               	movwf	4
  1137  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1138  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Write_Char
  1139  0011'                    l1053:	
  1140  0011' 3001               	movlw	1
  1141  0012' 0785'              	addwf	Lcd_Write_String@i,f
  1142  0013' 1803               	skipnc
  1143  0014' 0A86'              	incf	Lcd_Write_String@i+1,f
  1144  0015' 3000               	movlw	0
  1145  0016' 0786'              	addwf	Lcd_Write_String@i+1,f
  1146  0017'                    l1055:	
  1147  0017' 0805'              	movf	Lcd_Write_String@i,w
  1148  0018' 0707'              	addwf	Lcd_Write_String@a,w
  1149  0019' 0084               	movwf	4
  1150  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1151  001F' 3A00               	xorlw	0
  1152  0020' 1D03               	skipz
  1153  0021' 2800'              	goto	u311
  1154  0022' 2800'              	goto	u310
  1155  0023'                    u311:	
  1156  0023' 2800'              	goto	l1051
  1157  0024'                    u310:	
  1158  0024'                    l132:	
  1159  0024' 0008               	return
  1160  0025'                    __end_of_Lcd_Write_String:	
  1161                           
  1162                           	psect	text4
  1163  0000'                    __ptext4:	
  1164 ;; *************** function _Lcd_Write_Char *****************
  1165 ;; Defined at:
  1166 ;;		line 91 in file "LCD.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  a               1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  a               1    0[COMMON] unsigned char 
  1171 ;;  temp            1    4[COMMON] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0
  1183 ;;      Temps:          1       0       0       0       0
  1184 ;;      Totals:         2       0       0       0       0
  1185 ;;Total ram usage:        2 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    2
  1188 ;; This function calls:
  1189 ;;		_Lcd_Port
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;;		_Lcd_Write_String
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _Lcd_Write_Char
  1198  0000'                    _Lcd_Write_Char:	
  1199  0000'                    l993:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1202                           
  1203                           
  1204                           ;LCD.c: 92:     char temp;;LCD.c: 93:     PORTAbits.RA0 = 1;
  1205  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1206  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1207  0002' 1405               	bsf	5,0	;volatile
  1208  0003'                    l995:	
  1209                           
  1210                           ;LCD.c: 94:     Lcd_Port(temp);
  1211  0003' 0804'              	movf	Lcd_Write_Char@temp,w
  1212  0004' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  1213  0009'                    l997:	
  1214                           
  1215                           ;LCD.c: 95:     PORTAbits.RA2 = 1;
  1216  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1217  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  1218  000B' 1505               	bsf	5,2	;volatile
  1219  000C'                    l999:	
  1220                           
  1221                           ;LCD.c: 96:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1222  000C' 301A               	movlw	26
  1223  000D' 0083'              	movwf	??_Lcd_Write_Char
  1224  000E'                    u397:	
  1225  000E' 0B83'              	decfsz	??_Lcd_Write_Char,f
  1226  000F' 2800'              	goto	u397
  1227  0010' 0000               	nop
  1228  0011'                    l1001:	
  1229                           
  1230                           ;LCD.c: 97:     PORTAbits.RA2 = 0;
  1231  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  1232  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  1233  0013' 1105               	bcf	5,2	;volatile
  1234  0014'                    l126:	
  1235  0014' 0008               	return
  1236  0015'                    __end_of_Lcd_Write_Char:	
  1237                           
  1238                           	psect	text5
  1239  0000'                    __ptext5:	
  1240 ;; *************** function _Lcd_Set_Cursor *****************
  1241 ;; Defined at:
  1242 ;;		line 80 in file "LCD.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  a               1    wreg     unsigned char 
  1245 ;;  b               1    6[COMMON] unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  a               1    8[COMMON] unsigned char 
  1248 ;;  temp            1    9[COMMON] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         1       0       0       0       0
  1259 ;;      Locals:         2       0       0       0       0
  1260 ;;      Temps:          1       0       0       0       0
  1261 ;;      Totals:         4       0       0       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels used:    1
  1264 ;; Hardware stack levels required when called:    3
  1265 ;; This function calls:
  1266 ;;		_Lcd_Cmd
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _Lcd_Set_Cursor
  1274  0000'                    _Lcd_Set_Cursor:	
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;Lcd_Set_Cursor@a stored from wreg
  1279  0000' 0088'              	movwf	Lcd_Set_Cursor@a
  1280  0001'                    l1037:	
  1281                           
  1282                           ;LCD.c: 81:     char temp;;LCD.c: 82:     if (a == 1) {
  1283  0001' 0308'              	decf	Lcd_Set_Cursor@a,w
  1284  0002' 1D03               	btfss	3,2
  1285  0003' 2800'              	goto	u291
  1286  0004' 2800'              	goto	u290
  1287  0005'                    u291:	
  1288  0005' 2800'              	goto	l1043
  1289  0006'                    u290:	
  1290  0006'                    l1039:	
  1291                           
  1292                           ;LCD.c: 83:         temp = 0x80 + b - 1;
  1293  0006' 0806'              	movf	Lcd_Set_Cursor@b,w
  1294  0007' 3E7F               	addlw	127
  1295  0008' 0087'              	movwf	??_Lcd_Set_Cursor
  1296  0009' 0807'              	movf	??_Lcd_Set_Cursor,w
  1297  000A' 0089'              	movwf	Lcd_Set_Cursor@temp
  1298  000B'                    l1041:	
  1299                           
  1300                           ;LCD.c: 84:         Lcd_Cmd (temp);
  1301  000B' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1302  000C' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1303                           
  1304                           ;LCD.c: 85:     }else if (a == 2) {
  1305  0011' 2800'              	goto	l123
  1306  0012'                    l1043:	
  1307  0012' 3002               	movlw	2
  1308  0013' 0608'              	xorwf	Lcd_Set_Cursor@a,w
  1309  0014' 1D03               	btfss	3,2
  1310  0015' 2800'              	goto	u301
  1311  0016' 2800'              	goto	u300
  1312  0017'                    u301:	
  1313  0017' 2800'              	goto	l123
  1314  0018'                    u300:	
  1315  0018'                    l1045:	
  1316                           
  1317                           ;LCD.c: 86:         temp = 0xC0 + b - 1;
  1318  0018' 0806'              	movf	Lcd_Set_Cursor@b,w
  1319  0019' 3EBF               	addlw	191
  1320  001A' 0087'              	movwf	??_Lcd_Set_Cursor
  1321  001B' 0807'              	movf	??_Lcd_Set_Cursor,w
  1322  001C' 0089'              	movwf	Lcd_Set_Cursor@temp
  1323  001D'                    l1047:	
  1324                           
  1325                           ;LCD.c: 87:         Lcd_Cmd (temp);
  1326  001D' 0809'              	movf	Lcd_Set_Cursor@temp,w
  1327  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1328  0023'                    l123:	
  1329  0023' 0008               	return
  1330  0024'                    __end_of_Lcd_Set_Cursor:	
  1331                           
  1332                           	psect	text6
  1333  0000'                    __ptext6:	
  1334 ;; *************** function _Lcd_Clear *****************
  1335 ;; Defined at:
  1336 ;;		line 61 in file "LCD.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    3
  1357 ;; This function calls:
  1358 ;;		_Lcd_Cmd
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _Lcd_Clear
  1366  0000'                    _Lcd_Clear:	
  1367  0000'                    l1035:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1370                           
  1371                           
  1372                           ;LCD.c: 62:     Lcd_Cmd(0);
  1373  0000' 3000               	movlw	0
  1374  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1375                           
  1376                           ;LCD.c: 63:     Lcd_Cmd(1);
  1377  0006' 3001               	movlw	1
  1378  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Cmd
  1379  000C'                    l114:	
  1380  000C' 0008               	return
  1381  000D'                    __end_of_Lcd_Clear:	
  1382                           
  1383                           	psect	text7
  1384  0000'                    __ptext7:	
  1385 ;; *************** function _Lcd_Cmd *****************
  1386 ;; Defined at:
  1387 ;;		line 53 in file "LCD.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  a               1    wreg     unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  a               1    5[COMMON] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0, pclath, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         1       0       0       0       0
  1403 ;;      Temps:          2       0       0       0       0
  1404 ;;      Totals:         3       0       0       0       0
  1405 ;;Total ram usage:        3 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    2
  1408 ;; This function calls:
  1409 ;;		_Lcd_Port
  1410 ;; This function is called by:
  1411 ;;		_Lcd_Clear
  1412 ;;		_Lcd_Set_Cursor
  1413 ;;		_Lcd_Init
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _Lcd_Cmd
  1419  0000'                    _Lcd_Cmd:	
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1423                           ;Lcd_Cmd@a stored from wreg
  1424  0000' 0085'              	movwf	Lcd_Cmd@a
  1425  0001'                    l1003:	
  1426                           
  1427                           ;LCD.c: 54:     PORTAbits.RA0 = 0;
  1428  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1429  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  1430  0003' 1005               	bcf	5,0	;volatile
  1431  0004'                    l1005:	
  1432                           
  1433                           ;LCD.c: 55:     Lcd_Port (a);
  1434  0004' 0805'              	movf	Lcd_Cmd@a,w
  1435  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_Lcd_Port
  1436  000A'                    l1007:	
  1437                           
  1438                           ;LCD.c: 56:     PORTAbits.RA2 = 1;
  1439  000A' 1283               	bcf	3,5	;RP0=0, select bank0
  1440  000B' 1303               	bcf	3,6	;RP1=0, select bank0
  1441  000C' 1505               	bsf	5,2	;volatile
  1442  000D'                    l1009:	
  1443                           
  1444                           ;LCD.c: 57:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1445  000D' 300D               	movlw	13
  1446  000E' 0084'              	movwf	??_Lcd_Cmd+1
  1447  000F' 30FB               	movlw	251
  1448  0010' 0083'              	movwf	??_Lcd_Cmd
  1449  0011'                    u407:	
  1450  0011' 0B83'              	decfsz	??_Lcd_Cmd,f
  1451  0012' 2800'              	goto	u407
  1452  0013' 0B84'              	decfsz	??_Lcd_Cmd+1,f
  1453  0014' 2800'              	goto	u407
  1454  0015' 2800'              	nop2
  1455  0016'                    l1011:	
  1456                           
  1457                           ;LCD.c: 58:     PORTAbits.RA2 = 0;
  1458  0016' 1283               	bcf	3,5	;RP0=0, select bank0
  1459  0017' 1303               	bcf	3,6	;RP1=0, select bank0
  1460  0018' 1105               	bcf	5,2	;volatile
  1461  0019'                    l111:	
  1462  0019' 0008               	return
  1463  001A'                    __end_of_Lcd_Cmd:	
  1464                           
  1465                           	psect	text8
  1466  0000'                    __ptext8:	
  1467 ;; *************** function _Lcd_Port *****************
  1468 ;; Defined at:
  1469 ;;		line 11 in file "LCD.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  a               1    wreg     unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  a               1    2[COMMON] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_Lcd_Cmd
  1494 ;;		_Lcd_Write_Char
  1495 ;;		_Lcd_Init
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _Lcd_Port
  1501  0000'                    _Lcd_Port:	
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _Lcd_Port: [wreg]
  1505                           ;Lcd_Port@a stored from wreg
  1506  0000' 0082'              	movwf	Lcd_Port@a
  1507  0001'                    l975:	
  1508                           
  1509                           ;LCD.c: 12:     if (a & 1)
  1510  0001' 1C02'              	btfss	Lcd_Port@a,0
  1511  0002' 2800'              	goto	u211
  1512  0003' 2800'              	goto	u210
  1513  0004'                    u211:	
  1514  0004' 2800'              	goto	l92
  1515  0005'                    u210:	
  1516  0005'                    l977:	
  1517                           
  1518                           ;LCD.c: 13:         PORTDbits.RD0 = 1;
  1519  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  1520  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  1521  0007' 1408               	bsf	8,0	;volatile
  1522  0008' 2800'              	goto	l93
  1523  0009'                    l92:	
  1524                           ;LCD.c: 14:     else
  1525                           
  1526                           
  1527                           ;LCD.c: 15:         PORTDbits.RD0 = 0;
  1528  0009' 1283               	bcf	3,5	;RP0=0, select bank0
  1529  000A' 1303               	bcf	3,6	;RP1=0, select bank0
  1530  000B' 1008               	bcf	8,0	;volatile
  1531  000C'                    l93:	
  1532                           
  1533                           ;LCD.c: 17:     if (a & 2)
  1534  000C' 1C82'              	btfss	Lcd_Port@a,1
  1535  000D' 2800'              	goto	u221
  1536  000E' 2800'              	goto	u220
  1537  000F'                    u221:	
  1538  000F' 2800'              	goto	l94
  1539  0010'                    u220:	
  1540  0010'                    l979:	
  1541                           
  1542                           ;LCD.c: 18:         PORTDbits.RD1 = 1;
  1543  0010' 1488               	bsf	8,1	;volatile
  1544  0011' 2800'              	goto	l95
  1545  0012'                    l94:	
  1546                           ;LCD.c: 19:     else
  1547                           
  1548                           
  1549                           ;LCD.c: 20:         PORTDbits.RD1 = 0;
  1550  0012' 1088               	bcf	8,1	;volatile
  1551  0013'                    l95:	
  1552                           
  1553                           ;LCD.c: 22:     if (a & 4)
  1554  0013' 1D02'              	btfss	Lcd_Port@a,2
  1555  0014' 2800'              	goto	u231
  1556  0015' 2800'              	goto	u230
  1557  0016'                    u231:	
  1558  0016' 2800'              	goto	l96
  1559  0017'                    u230:	
  1560  0017'                    l981:	
  1561                           
  1562                           ;LCD.c: 23:         PORTDbits.RD2 = 1;
  1563  0017' 1508               	bsf	8,2	;volatile
  1564  0018' 2800'              	goto	l97
  1565  0019'                    l96:	
  1566                           ;LCD.c: 24:     else
  1567                           
  1568                           
  1569                           ;LCD.c: 25:         PORTDbits.RD2 = 0;
  1570  0019' 1108               	bcf	8,2	;volatile
  1571  001A'                    l97:	
  1572                           
  1573                           ;LCD.c: 27:     if (a & 8)
  1574  001A' 1D82'              	btfss	Lcd_Port@a,3
  1575  001B' 2800'              	goto	u241
  1576  001C' 2800'              	goto	u240
  1577  001D'                    u241:	
  1578  001D' 2800'              	goto	l98
  1579  001E'                    u240:	
  1580  001E'                    l983:	
  1581                           
  1582                           ;LCD.c: 28:         PORTDbits.RD3 = 1;
  1583  001E' 1588               	bsf	8,3	;volatile
  1584  001F' 2800'              	goto	l99
  1585  0020'                    l98:	
  1586                           ;LCD.c: 29:     else
  1587                           
  1588                           
  1589                           ;LCD.c: 30:         PORTDbits.RD3 = 0;
  1590  0020' 1188               	bcf	8,3	;volatile
  1591  0021'                    l99:	
  1592                           
  1593                           ;LCD.c: 32:     if (a & 16)
  1594  0021' 1E02'              	btfss	Lcd_Port@a,4
  1595  0022' 2800'              	goto	u251
  1596  0023' 2800'              	goto	u250
  1597  0024'                    u251:	
  1598  0024' 2800'              	goto	l100
  1599  0025'                    u250:	
  1600  0025'                    l985:	
  1601                           
  1602                           ;LCD.c: 33:         PORTDbits.RD4 = 1;
  1603  0025' 1608               	bsf	8,4	;volatile
  1604  0026' 2800'              	goto	l101
  1605  0027'                    l100:	
  1606                           ;LCD.c: 34:     else
  1607                           
  1608                           
  1609                           ;LCD.c: 35:         PORTDbits.RD4 = 0;
  1610  0027' 1208               	bcf	8,4	;volatile
  1611  0028'                    l101:	
  1612                           
  1613                           ;LCD.c: 37:     if (a & 32)
  1614  0028' 1E82'              	btfss	Lcd_Port@a,5
  1615  0029' 2800'              	goto	u261
  1616  002A' 2800'              	goto	u260
  1617  002B'                    u261:	
  1618  002B' 2800'              	goto	l102
  1619  002C'                    u260:	
  1620  002C'                    l987:	
  1621                           
  1622                           ;LCD.c: 38:         PORTDbits.RD5 = 1;
  1623  002C' 1688               	bsf	8,5	;volatile
  1624  002D' 2800'              	goto	l103
  1625  002E'                    l102:	
  1626                           ;LCD.c: 39:     else
  1627                           
  1628                           
  1629                           ;LCD.c: 40:         PORTDbits.RD5 = 0;
  1630  002E' 1288               	bcf	8,5	;volatile
  1631  002F'                    l103:	
  1632                           
  1633                           ;LCD.c: 42:     if (a & 64)
  1634  002F' 1F02'              	btfss	Lcd_Port@a,6
  1635  0030' 2800'              	goto	u271
  1636  0031' 2800'              	goto	u270
  1637  0032'                    u271:	
  1638  0032' 2800'              	goto	l104
  1639  0033'                    u270:	
  1640  0033'                    l989:	
  1641                           
  1642                           ;LCD.c: 43:         PORTDbits.RD6 = 1;
  1643  0033' 1708               	bsf	8,6	;volatile
  1644  0034' 2800'              	goto	l105
  1645  0035'                    l104:	
  1646                           ;LCD.c: 44:     else
  1647                           
  1648                           
  1649                           ;LCD.c: 45:         PORTDbits.RD6 = 0;
  1650  0035' 1308               	bcf	8,6	;volatile
  1651  0036'                    l105:	
  1652                           
  1653                           ;LCD.c: 47:     if (a & 128)
  1654  0036' 1F82'              	btfss	Lcd_Port@a,7
  1655  0037' 2800'              	goto	u281
  1656  0038' 2800'              	goto	u280
  1657  0039'                    u281:	
  1658  0039' 2800'              	goto	l106
  1659  003A'                    u280:	
  1660  003A'                    l991:	
  1661                           
  1662                           ;LCD.c: 48:         PORTDbits.RD7 = 1;
  1663  003A' 1788               	bsf	8,7	;volatile
  1664  003B' 2800'              	goto	l108
  1665  003C'                    l106:	
  1666                           ;LCD.c: 49:     else
  1667                           
  1668                           
  1669                           ;LCD.c: 50:         PORTDbits.RD7 = 0;
  1670  003C' 1388               	bcf	8,7	;volatile
  1671  003D'                    l108:	
  1672  003D' 0008               	return
  1673  003E'                    __end_of_Lcd_Port:	
  1674                           
  1675                           	psect	text9
  1676  0000'                    __ptext9:	
  1677 ;; *************** function _ISR *****************
  1678 ;; Defined at:
  1679 ;;		line 61 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          2       0       0       0       0
  1696 ;;      Totals:         2       0       0       0       0
  1697 ;;Total ram usage:        2 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		Interrupt level 1
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           
  1707                           ;psect for function _ISR
  1708  0000'                    _ISR:	
  1709  0000'                    i1l821:	
  1710                           
  1711                           ;main.c: 64:     if (PIR1bits.RCIF == 1)
  1712  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1713  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1714  0002' 1E8C               	btfss	12,5	;volatile
  1715  0003' 2800'              	goto	u12_21
  1716  0004' 2800'              	goto	u12_20
  1717  0005'                    u12_21:	
  1718  0005' 2800'              	goto	i1l65
  1719  0006'                    u12_20:	
  1720  0006'                    i1l823:	
  1721                           
  1722                           ;main.c: 65:     {;main.c: 67:         PIR1bits.RCIF = 0;
  1723  0006' 128C               	bcf	12,5	;volatile
  1724  0007'                    i1l825:	
  1725                           
  1726                           ;main.c: 68:         TXREG = (RCREG + 1);
  1727  0007' 081A               	movf	26,w	;volatile
  1728  0008' 3E01               	addlw	1
  1729  0009' 0099               	movwf	25	;volatile
  1730  000A'                    i1l62:	
  1731                           ;main.c: 69:         while (TXSTAbits.TRMT == 0);
  1732                           
  1733  000A' 1683               	bsf	3,5	;RP0=1, select bank1
  1734  000B' 1303               	bcf	3,6	;RP1=0, select bank1
  1735  000C' 1C98               	btfss	24,1	;volatile
  1736  000D' 2800'              	goto	u13_21
  1737  000E' 2800'              	goto	u13_20
  1738  000F'                    u13_21:	
  1739  000F' 2800'              	goto	i1l62
  1740  0010'                    u13_20:	
  1741  0010'                    i1l65:	
  1742  0010' 0801'              	movf	??_ISR+1,w
  1743  0011' 008A               	movwf	10
  1744  0012' 0E00'              	swapf	??_ISR^(0+4294967168),w
  1745  0013' 0083               	movwf	3
  1746  0014' 0EFE               	swapf	btemp,f
  1747  0015' 0E7E               	swapf	btemp,w
  1748  0016' 0009               	retfie
  1749  0017'                    __end_of_ISR:	
  1750  007E                     btemp	set	126	;btemp
  1751  007E                     wtemp0	set	126
  1752                           
  1753                           	psect	intentry
  1754  0000'                    __pintentry:	
  1755                           ;incstack = 0
  1756                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1757                           
  1758  0000'                    interrupt_function:	
  1759  007E                     saved_w	set	btemp
  1760  0000' 00FE               	movwf	btemp
  1761  0001' 0E03               	swapf	3,w
  1762  0002' 0080'              	movwf	??_ISR
  1763  0003' 080A               	movf	10,w
  1764  0004' 0081'              	movwf	??_ISR+1
  1765  0005' 120A' 118A' 2800'  	ljmp	_ISR


Data Sizes:
    Strings     48
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1844
                                              0 BANK0      5     5      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _UART_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     472
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     198
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     840
                                              6 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
   _Lcd_Shift_Right
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART_Init
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 08 12:36:26 2021

                        pc 0002                __CFG_CP$OFF 0000                         l70 000A  
                       l80 001E                         l83 0014                         l92 0009  
                       l93 000C                         l94 0012                         l95 0013  
                       l96 0019                         l97 001A                         l98 0020  
                       l99 0021                         fsr 0004                        l100 0027  
                      l101 0028                        l102 002E                        l103 002F  
                      l111 0019                        l104 0035                        l105 0036  
                      l106 003C                        l114 000C                        l123 0023  
                      l108 003D                        l132 0024                        l126 0014  
                      l981 0017                        l991 003A                        l983 001E  
                      l975 0001                        l985 0025                        l977 0005  
                      l993 0000                        l987 002C                        l979 0010  
                      l995 0003                        l989 0033                        l997 0009  
                      l999 000C                        u210 0005                        u211 0004  
                      u220 0010                        u300 0018                        u221 000F  
                      u301 0017                        u230 0017                        u310 0024  
                      u231 0016                        u311 0023                        u240 001E  
                      u320 0097                        u241 001D                        u321 0096  
                      u250 0025                        u330 00BD                        u251 0024  
                      u331 00BC                        u260 002C                        u261 002B  
                      u270 0033                        u271 0032                        u407 0011  
                      u280 003A                        u281 0039                        u290 0006  
             __CFG_CPD$OFF 0000                        u291 0005                        u347 0033  
                      _ISR 0000                        u357 0063                        u367 007B  
                      u377 00A1                        u387 00DE                        u397 000E  
                      fsr0 0004               __CFG_FOSC$XT 0000               __CFG_LVP$OFF 0000  
                     ?_ISR 0000                       l1001 0011                       l1011 0016  
                     l1003 0001                       l1005 0004                       l1021 000B  
                     l1013 0000                       l1101 00A7                       l1007 000A  
                     l1031 0010                       l1023 0000                       l1015 0003  
                     l1103 00AC                       l1009 000D                       l1041 000B  
                     l1033 0011                       l1025 000A                       l1017 0005  
                     l1105 00B4                       l1035 0000                       l1043 0012  
                     l1051 0004                       l1027 000E                       l1019 0008  
                     l1107 00BD                       l1045 0018                       l1037 0001  
                     l1053 0011                       l1029 000F                       l1109 00D6  
                     l1061 001D                       l1047 001D                       l1039 0006  
                     l1055 0017                       l1071 004D                       l1063 002B  
                     l1049 0001                       l1073 0055                       l1065 003A  
                     l1057 0000                       l1091 008E                       l1075 005B  
                     l1067 003F                       l1059 0017                       l1093 0097  
                     l1085 0073                       l1077 006A                       l1069 0047  
                     l1087 0081                       l1079 006F                       l1089 0086  
                     l1099 0099                       STR_1 002B                       STR_2 001F  
                     STR_3 0006                       STR_4 0013                       i1l62 000A  
                     i1l65 0010               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0000  
                     _main 0000                       btemp 007E                       start 0000* 
       ??_Lcd_Write_String 0005              __CFG_IESO$OFF 0000            __end_of_Lcd_Cmd 001A  
                    ??_ISR 0000                      ?_main 0000              __CFG_WDTE$OFF 0000  
                    _ANSEL 0188                      i1l821 0000                      i1l823 0006  
                    i1l825 0007                      _RCREG 001A                      u12_20 0006  
                    u12_21 0005                      u13_20 0010                      u13_21 000F  
                    _SPBRG 0099                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019             __CFG_FCMEN$OFF 0000  
       __size_of_UART_Init 0015                      _setup 0000                      main@a 0003  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Port 003E             __CFG_MCLRE$OFF 0000  
          __initialization 0000               __end_of_main 00E9                     ??_main 0000  
       __size_of_Lcd_Clear 000D                     _ADCON0 001F                     _ADCON1 009F  
                   ?_setup 0000                     _ANSELH 0189                  ??_Lcd_Cmd 0003  
  __size_of_Lcd_Write_Char 0015             __CFG_PWRTE$OFF 0000          __end_of_UART_Init 0015  
                   saved_w 007E            Lcd_Set_Cursor@a 0008            Lcd_Set_Cursor@b 0006  
  __end_of__initialization 0001          __end_of_Lcd_Clear 000D             __pcstackCOMMON 0000  
            __end_of_setup 001F             _Lcd_Set_Cursor 0000             _Lcd_Shift_Left 0000* 
                ?_Lcd_Port 0000                    ??_setup 0002                 __pmaintext 0000  
               __pintentry 0000  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0024  
        ??_Lcd_Shift_Right 0000                 ??_Lcd_Port 0002                 __stringtab 0000  
           _Lcd_Write_Char 0000                    _Lcd_Cmd 0000            ?_Lcd_Set_Cursor 0006  
                  __ptext1 0000                    __ptext2 0000                    __ptext3 0000  
                  __ptext4 0000                    __ptext5 0000                    __ptext6 0000  
                  __ptext7 0000                    __ptext8 0000                    __ptext9 0000  
             __size_of_ISR 0017                    _counter 0000            ?_Lcd_Shift_Left 0000  
   __end_of_Lcd_Write_Char 0015       end_of_initialization 0001                  _RCSTAbits 0018  
                Lcd_Port@a 0002                  _UART_Init 0000                  _PORTAbits 0005  
                _PORTDbits 0008            ?_Lcd_Write_Char 0000          Lcd_Write_String@a 0007  
        Lcd_Write_String@i 0005                  _TXSTAbits 0098                  _Lcd_Clear 0000  
         _Lcd_Write_String 0000                 ?_UART_Init 0000        start_initialization 0000  
              __end_of_ISR 0017          __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0000  
          _Lcd_Shift_Right 0000*           Lcd_Write_Char@a 0000                __pbssCOMMON 0000  
                ___latbits 0002              __pcstackBANK0 0000                   ?_Lcd_Cmd 0000  
         ??_Lcd_Set_Cursor 0007           ??_Lcd_Shift_Left 0000                ??_UART_Init 0002  
                __pstrings 0000             __size_of_setup 001F          interrupt_function 0000  
                 _PIE1bits 008C                   Lcd_Cmd@a 0005                   _PIR1bits 000C  
              ??_Lcd_Clear 0006                 _ADCON0bits 001F                __stringbase 0005  
         ??_Lcd_Write_Char 0003                   _Lcd_Port 0000   __end_of_Lcd_Write_String 0025  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0006          __CFG_BOR4V$BOR40V 0000  
            __size_of_main 00E9           ?_Lcd_Shift_Right 0000                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0004                   intlevel1 0000*                 stringcode 0000  
       Lcd_Set_Cursor@temp 0009                   stringdir 0000                   stringtab 0000  
